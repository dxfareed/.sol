{
	"id": "79a5806ca17053624f0d156fc3f6e300",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"content": "//SPDX-License-Identfier:MIT;\n\n\npragma solidity >=0.8.0;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\ninterface IWETH9 {\n    function deposit() external payable;\n    function withdraw(uint256) external;\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n}\n\ncontract AutoSwapDonation {\n    ISwapRouter public immutable swapRouter;\n    address public immutable token;\n    address public constant WETH9 = 0x4200000000000000000000000000000000000006;\n\n    constructor(address _token) {\n        swapRouter = ISwapRouter(0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4); // Ensure this is the correct router for your testnet\n        token = _token;\n    }\n\n    receive() external payable {\n        swapETHForToken(msg.value);\n    }\n\n    function swapETHForToken(uint256 amount) public payable {\n        require(amount > 0, \"Must send ETH\");\n        IWETH9(WETH9).deposit{value: amount}();\n        \n        IWETH9(WETH9).approve(address(swapRouter), amount);\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: WETH9,\n            tokenOut: token,\n            fee: 3000,\n            recipient: msg.sender,\n            deadline: block.timestamp + 300,\n            amountIn: amount,\n            amountOutMinimum: 0,\n            sqrtPriceLimitX96: 0\n        });\n\n        swapRouter.exactInputSingle(params);\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"AutoSwapDonation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swapETHForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":393:1498  contract AutoSwapDonation {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":587:778  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:692  0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4 */\n  0x94cc0aac535ccdb3c01d6787d6413c739ae12bc4\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":625:693  swapRouter = ISwapRouter(0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":765:771  _token */\n  dup1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":757:771  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":587:778  constructor(address _token) {... */\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":393:1498  contract AutoSwapDonation {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":393:1498  contract AutoSwapDonation {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x41c2cc0c9e11501a3eec0956812949b1b9b2d14d9dc7118df2ef1aac71f18767\")\n  0x00\n  assignImmutable(\"0x5a10742dc65b7a28255fe7b4d2b9f290786892e1e437654e2ccb53bed1bfe01a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":393:1498  contract AutoSwapDonation {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1b3d2cb3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":821:847  swapETHForToken(msg.value) */\n      tag_9\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":837:846  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":821:836  swapETHForToken */\n      tag_10\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":821:847  swapETHForToken(msg.value) */\n      jump\t// in\n    tag_9:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":393:1498  contract AutoSwapDonation {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":860:1496  function swapETHForToken(uint256 amount) public payable {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_10\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":506:580  address public constant WETH9 = 0x4200000000000000000000000000000000000006 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":425:464  ISwapRouter public immutable swapRouter */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":470:500  address public immutable token */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":860:1496  function swapETHForToken(uint256 amount) public payable {... */\n    tag_10:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":943:944  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":934:940  amount */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":934:944  amount > 0 */\n      gt\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":926:962  require(amount > 0, \"Must send ETH\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":538:580  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":972:993  IWETH9(WETH9).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1001:1007  amount */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":972:1010  IWETH9(WETH9).deposit{value: amount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":538:580  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1029:1050  IWETH9(WETH9).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1059:1069  swapRouter */\n      immutable(\"0x5a10742dc65b7a28255fe7b4d2b9f290786892e1e437654e2ccb53bed1bfe01a\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1072:1078  amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1029:1079  IWETH9(WETH9).approve(address(swapRouter), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1089:1137  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":538:580  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1227:1232  token */\n      immutable(\"0x41c2cc0c9e11501a3eec0956812949b1b9b2d14d9dc7118df2ef1aac71f18767\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1251:1255  3000 */\n      0x0bb8\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1280:1290  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1332:1335  300 */\n      0x012c\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1314:1329  block.timestamp */\n      timestamp\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1314:1335  block.timestamp + 300 */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1359:1365  amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1397:1398  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1431:1432  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1140:1443  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1089:1443  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1454:1464  swapRouter */\n      immutable(\"0x5a10742dc65b7a28255fe7b4d2b9f290786892e1e437654e2ccb53bed1bfe01a\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1454:1481  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1482:1488  params */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1454:1489  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":916:1496  {... */\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":860:1496  function swapETHForToken(uint256 amount) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":506:580  address public constant WETH9 = 0x4200000000000000000000000000000000000006 */\n    tag_16:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":538:580  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":506:580  address public constant WETH9 = 0x4200000000000000000000000000000000000006 */\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":425:464  ISwapRouter public immutable swapRouter */\n    tag_21:\n      immutable(\"0x5a10742dc65b7a28255fe7b4d2b9f290786892e1e437654e2ccb53bed1bfe01a\")\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":470:500  address public immutable token */\n    tag_26:\n      immutable(\"0x41c2cc0c9e11501a3eec0956812949b1b9b2d14d9dc7118df2ef1aac71f18767\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_50:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_52:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_53:\n        /* \"#utility.yul\":490:514   */\n      tag_84\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_52\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_85:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_54:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_87\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_53\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_90\n      tag_50\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":766:885   */\n    tag_89:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_91\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_54\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_55:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_56:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_94\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_55\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_57:\n        /* \"#utility.yul\":1346:1370   */\n      tag_96\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_56\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_18:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_98\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_57\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1671   */\n    tag_58:\n        /* \"#utility.yul\":1639:1642   */\n      0x00\n        /* \"#utility.yul\":1660:1665   */\n      dup2\n        /* \"#utility.yul\":1653:1665   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1819   */\n    tag_59:\n        /* \"#utility.yul\":1727:1736   */\n      0x00\n        /* \"#utility.yul\":1760:1813   */\n      tag_101\n        /* \"#utility.yul\":1778:1812   */\n      tag_102\n        /* \"#utility.yul\":1787:1811   */\n      tag_103\n        /* \"#utility.yul\":1805:1810   */\n      dup5\n        /* \"#utility.yul\":1787:1811   */\n      tag_55\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1778:1812   */\n      tag_58\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1760:1813   */\n      tag_55\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1747:1813   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:1951   */\n    tag_60:\n        /* \"#utility.yul\":1875:1884   */\n      0x00\n        /* \"#utility.yul\":1908:1945   */\n      tag_105\n        /* \"#utility.yul\":1939:1944   */\n      dup3\n        /* \"#utility.yul\":1908:1945   */\n      tag_59\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1895:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1825:1951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2102   */\n    tag_61:\n        /* \"#utility.yul\":2026:2035   */\n      0x00\n        /* \"#utility.yul\":2059:2096   */\n      tag_107\n        /* \"#utility.yul\":2090:2095   */\n      dup3\n        /* \"#utility.yul\":2059:2096   */\n      tag_60\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2046:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2277   */\n    tag_62:\n        /* \"#utility.yul\":2214:2270   */\n      tag_109\n        /* \"#utility.yul\":2264:2269   */\n      dup2\n        /* \"#utility.yul\":2214:2270   */\n      tag_61\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2209:2212   */\n      dup3\n        /* \"#utility.yul\":2202:2271   */\n      mstore\n        /* \"#utility.yul\":2108:2277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2543   */\n    tag_23:\n        /* \"#utility.yul\":2395:2399   */\n      0x00\n        /* \"#utility.yul\":2433:2435   */\n      0x20\n        /* \"#utility.yul\":2422:2431   */\n      dup3\n        /* \"#utility.yul\":2418:2436   */\n      add\n        /* \"#utility.yul\":2410:2436   */\n      swap1\n      pop\n        /* \"#utility.yul\":2446:2536   */\n      tag_111\n        /* \"#utility.yul\":2533:2534   */\n      0x00\n        /* \"#utility.yul\":2522:2531   */\n      dup4\n        /* \"#utility.yul\":2518:2535   */\n      add\n        /* \"#utility.yul\":2509:2515   */\n      dup5\n        /* \"#utility.yul\":2446:2536   */\n      tag_62\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2283:2543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2718   */\n    tag_63:\n        /* \"#utility.yul\":2633:2644   */\n      0x00\n        /* \"#utility.yul\":2667:2673   */\n      dup3\n        /* \"#utility.yul\":2662:2665   */\n      dup3\n        /* \"#utility.yul\":2655:2674   */\n      mstore\n        /* \"#utility.yul\":2707:2711   */\n      0x20\n        /* \"#utility.yul\":2702:2705   */\n      dup3\n        /* \"#utility.yul\":2698:2712   */\n      add\n        /* \"#utility.yul\":2683:2712   */\n      swap1\n      pop\n        /* \"#utility.yul\":2549:2718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2724:2887   */\n    tag_64:\n        /* \"#utility.yul\":2864:2879   */\n      0x4d7573742073656e642045544800000000000000000000000000000000000000\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2852:2858   */\n      dup3\n        /* \"#utility.yul\":2848:2862   */\n      add\n        /* \"#utility.yul\":2841:2880   */\n      mstore\n        /* \"#utility.yul\":2724:2887   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3259   */\n    tag_65:\n        /* \"#utility.yul\":3035:3038   */\n      0x00\n        /* \"#utility.yul\":3056:3123   */\n      tag_115\n        /* \"#utility.yul\":3120:3122   */\n      0x0d\n        /* \"#utility.yul\":3115:3118   */\n      dup4\n        /* \"#utility.yul\":3056:3123   */\n      tag_63\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3049:3123   */\n      swap2\n      pop\n        /* \"#utility.yul\":3132:3225   */\n      tag_116\n        /* \"#utility.yul\":3221:3224   */\n      dup3\n        /* \"#utility.yul\":3132:3225   */\n      tag_64\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3250:3252   */\n      0x20\n        /* \"#utility.yul\":3245:3248   */\n      dup3\n        /* \"#utility.yul\":3241:3253   */\n      add\n        /* \"#utility.yul\":3234:3253   */\n      swap1\n      pop\n        /* \"#utility.yul\":2893:3259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3684   */\n    tag_31:\n        /* \"#utility.yul\":3431:3435   */\n      0x00\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"#utility.yul\":3458:3467   */\n      dup3\n        /* \"#utility.yul\":3454:3472   */\n      add\n        /* \"#utility.yul\":3446:3472   */\n      swap1\n      pop\n        /* \"#utility.yul\":3518:3527   */\n      dup2\n        /* \"#utility.yul\":3512:3516   */\n      dup2\n        /* \"#utility.yul\":3508:3528   */\n      sub\n        /* \"#utility.yul\":3504:3505   */\n      0x00\n        /* \"#utility.yul\":3493:3502   */\n      dup4\n        /* \"#utility.yul\":3489:3506   */\n      add\n        /* \"#utility.yul\":3482:3529   */\n      mstore\n        /* \"#utility.yul\":3546:3677   */\n      tag_118\n        /* \"#utility.yul\":3672:3676   */\n      dup2\n        /* \"#utility.yul\":3546:3677   */\n      tag_65\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3538:3677   */\n      swap1\n      pop\n        /* \"#utility.yul\":3265:3684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3690:3808   */\n    tag_66:\n        /* \"#utility.yul\":3777:3801   */\n      tag_120\n        /* \"#utility.yul\":3795:3800   */\n      dup2\n        /* \"#utility.yul\":3777:3801   */\n      tag_52\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3772:3775   */\n      dup3\n        /* \"#utility.yul\":3765:3802   */\n      mstore\n        /* \"#utility.yul\":3690:3808   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3814:4146   */\n    tag_36:\n        /* \"#utility.yul\":3935:3939   */\n      0x00\n        /* \"#utility.yul\":3973:3975   */\n      0x40\n        /* \"#utility.yul\":3962:3971   */\n      dup3\n        /* \"#utility.yul\":3958:3976   */\n      add\n        /* \"#utility.yul\":3950:3976   */\n      swap1\n      pop\n        /* \"#utility.yul\":3986:4057   */\n      tag_122\n        /* \"#utility.yul\":4054:4055   */\n      0x00\n        /* \"#utility.yul\":4043:4052   */\n      dup4\n        /* \"#utility.yul\":4039:4056   */\n      add\n        /* \"#utility.yul\":4030:4036   */\n      dup6\n        /* \"#utility.yul\":3986:4057   */\n      tag_57\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4067:4139   */\n      tag_123\n        /* \"#utility.yul\":4135:4137   */\n      0x20\n        /* \"#utility.yul\":4124:4133   */\n      dup4\n        /* \"#utility.yul\":4120:4138   */\n      add\n        /* \"#utility.yul\":4111:4117   */\n      dup5\n        /* \"#utility.yul\":4067:4139   */\n      tag_66\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3814:4146   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4242   */\n    tag_67:\n        /* \"#utility.yul\":4186:4193   */\n      0x00\n        /* \"#utility.yul\":4229:4234   */\n      dup2\n        /* \"#utility.yul\":4222:4235   */\n      iszero\n        /* \"#utility.yul\":4215:4236   */\n      iszero\n        /* \"#utility.yul\":4204:4236   */\n      swap1\n      pop\n        /* \"#utility.yul\":4152:4242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4248:4364   */\n    tag_68:\n        /* \"#utility.yul\":4318:4339   */\n      tag_126\n        /* \"#utility.yul\":4333:4338   */\n      dup2\n        /* \"#utility.yul\":4318:4339   */\n      tag_67\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4311:4316   */\n      dup2\n        /* \"#utility.yul\":4308:4340   */\n      eq\n        /* \"#utility.yul\":4298:4358   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":4354:4355   */\n      0x00\n        /* \"#utility.yul\":4351:4352   */\n      dup1\n        /* \"#utility.yul\":4344:4356   */\n      revert\n        /* \"#utility.yul\":4298:4358   */\n    tag_127:\n        /* \"#utility.yul\":4248:4364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4370:4507   */\n    tag_69:\n        /* \"#utility.yul\":4424:4429   */\n      0x00\n        /* \"#utility.yul\":4455:4461   */\n      dup2\n        /* \"#utility.yul\":4449:4462   */\n      mload\n        /* \"#utility.yul\":4440:4462   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4501   */\n      tag_129\n        /* \"#utility.yul\":4495:4500   */\n      dup2\n        /* \"#utility.yul\":4471:4501   */\n      tag_68\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4370:4507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4513:4858   */\n    tag_40:\n        /* \"#utility.yul\":4580:4586   */\n      0x00\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4617:4626   */\n      dup3\n        /* \"#utility.yul\":4608:4615   */\n      dup5\n        /* \"#utility.yul\":4604:4627   */\n      sub\n        /* \"#utility.yul\":4600:4632   */\n      slt\n        /* \"#utility.yul\":4597:4716   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":4635:4714   */\n      tag_132\n      tag_50\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4597:4716   */\n    tag_131:\n        /* \"#utility.yul\":4755:4756   */\n      0x00\n        /* \"#utility.yul\":4780:4841   */\n      tag_133\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4824:4830   */\n      dup3\n        /* \"#utility.yul\":4813:4822   */\n      dup6\n        /* \"#utility.yul\":4809:4831   */\n      add\n        /* \"#utility.yul\":4780:4841   */\n      tag_69\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4770:4841   */\n      swap2\n      pop\n        /* \"#utility.yul\":4726:4851   */\n      pop\n        /* \"#utility.yul\":4513:4858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4864:5044   */\n    tag_70:\n        /* \"#utility.yul\":4912:4989   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4909:4910   */\n      0x00\n        /* \"#utility.yul\":4902:4990   */\n      mstore\n        /* \"#utility.yul\":5009:5013   */\n      0x11\n        /* \"#utility.yul\":5006:5007   */\n      0x04\n        /* \"#utility.yul\":4999:5014   */\n      mstore\n        /* \"#utility.yul\":5033:5037   */\n      0x24\n        /* \"#utility.yul\":5030:5031   */\n      0x00\n        /* \"#utility.yul\":5023:5038   */\n      revert\n        /* \"#utility.yul\":5050:5241   */\n    tag_42:\n        /* \"#utility.yul\":5090:5093   */\n      0x00\n        /* \"#utility.yul\":5109:5129   */\n      tag_136\n        /* \"#utility.yul\":5127:5128   */\n      dup3\n        /* \"#utility.yul\":5109:5129   */\n      tag_52\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5104:5129   */\n      swap2\n      pop\n        /* \"#utility.yul\":5143:5163   */\n      tag_137\n        /* \"#utility.yul\":5161:5162   */\n      dup4\n        /* \"#utility.yul\":5143:5163   */\n      tag_52\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5138:5163   */\n      swap3\n      pop\n        /* \"#utility.yul\":5186:5187   */\n      dup3\n        /* \"#utility.yul\":5183:5184   */\n      dup3\n        /* \"#utility.yul\":5179:5188   */\n      add\n        /* \"#utility.yul\":5172:5188   */\n      swap1\n      pop\n        /* \"#utility.yul\":5207:5210   */\n      dup1\n        /* \"#utility.yul\":5204:5205   */\n      dup3\n        /* \"#utility.yul\":5201:5211   */\n      gt\n        /* \"#utility.yul\":5198:5234   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":5214:5232   */\n      tag_139\n      tag_70\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5198:5234   */\n    tag_138:\n        /* \"#utility.yul\":5050:5241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5247:5355   */\n    tag_71:\n        /* \"#utility.yul\":5324:5348   */\n      tag_141\n        /* \"#utility.yul\":5342:5347   */\n      dup2\n        /* \"#utility.yul\":5324:5348   */\n      tag_56\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5319:5322   */\n      dup3\n        /* \"#utility.yul\":5312:5349   */\n      mstore\n        /* \"#utility.yul\":5247:5355   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5361:5452   */\n    tag_72:\n        /* \"#utility.yul\":5397:5404   */\n      0x00\n        /* \"#utility.yul\":5437:5445   */\n      0xffffff\n        /* \"#utility.yul\":5430:5435   */\n      dup3\n        /* \"#utility.yul\":5426:5446   */\n      and\n        /* \"#utility.yul\":5415:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5361:5452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5458:5563   */\n    tag_73:\n        /* \"#utility.yul\":5533:5556   */\n      tag_144\n        /* \"#utility.yul\":5550:5555   */\n      dup2\n        /* \"#utility.yul\":5533:5556   */\n      tag_72\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5528:5531   */\n      dup3\n        /* \"#utility.yul\":5521:5557   */\n      mstore\n        /* \"#utility.yul\":5458:5563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5569:5677   */\n    tag_74:\n        /* \"#utility.yul\":5646:5670   */\n      tag_146\n        /* \"#utility.yul\":5664:5669   */\n      dup2\n        /* \"#utility.yul\":5646:5670   */\n      tag_52\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5641:5644   */\n      dup3\n        /* \"#utility.yul\":5634:5671   */\n      mstore\n        /* \"#utility.yul\":5569:5677   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5683:5791   */\n    tag_75:\n        /* \"#utility.yul\":5760:5784   */\n      tag_148\n        /* \"#utility.yul\":5778:5783   */\n      dup2\n        /* \"#utility.yul\":5760:5784   */\n      tag_55\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5755:5758   */\n      dup3\n        /* \"#utility.yul\":5748:5785   */\n      mstore\n        /* \"#utility.yul\":5683:5791   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5891:7512   */\n    tag_76:\n        /* \"#utility.yul\":6064:6070   */\n      0x0100\n        /* \"#utility.yul\":6059:6062   */\n      dup3\n        /* \"#utility.yul\":6055:6071   */\n      add\n        /* \"#utility.yul\":6156:6160   */\n      0x00\n        /* \"#utility.yul\":6149:6154   */\n      dup3\n        /* \"#utility.yul\":6145:6161   */\n      add\n        /* \"#utility.yul\":6139:6162   */\n      mload\n        /* \"#utility.yul\":6175:6238   */\n      tag_150\n        /* \"#utility.yul\":6232:6236   */\n      0x00\n        /* \"#utility.yul\":6227:6230   */\n      dup6\n        /* \"#utility.yul\":6223:6237   */\n      add\n        /* \"#utility.yul\":6209:6221   */\n      dup3\n        /* \"#utility.yul\":6175:6238   */\n      tag_71\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6081:6248   */\n      pop\n        /* \"#utility.yul\":6334:6338   */\n      0x20\n        /* \"#utility.yul\":6327:6332   */\n      dup3\n        /* \"#utility.yul\":6323:6339   */\n      add\n        /* \"#utility.yul\":6317:6340   */\n      mload\n        /* \"#utility.yul\":6353:6416   */\n      tag_151\n        /* \"#utility.yul\":6410:6414   */\n      0x20\n        /* \"#utility.yul\":6405:6408   */\n      dup6\n        /* \"#utility.yul\":6401:6415   */\n      add\n        /* \"#utility.yul\":6387:6399   */\n      dup3\n        /* \"#utility.yul\":6353:6416   */\n      tag_71\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6258:6426   */\n      pop\n        /* \"#utility.yul\":6507:6511   */\n      0x40\n        /* \"#utility.yul\":6500:6505   */\n      dup3\n        /* \"#utility.yul\":6496:6512   */\n      add\n        /* \"#utility.yul\":6490:6513   */\n      mload\n        /* \"#utility.yul\":6526:6587   */\n      tag_152\n        /* \"#utility.yul\":6581:6585   */\n      0x40\n        /* \"#utility.yul\":6576:6579   */\n      dup6\n        /* \"#utility.yul\":6572:6586   */\n      add\n        /* \"#utility.yul\":6558:6570   */\n      dup3\n        /* \"#utility.yul\":6526:6587   */\n      tag_73\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":6436:6597   */\n      pop\n        /* \"#utility.yul\":6684:6688   */\n      0x60\n        /* \"#utility.yul\":6677:6682   */\n      dup3\n        /* \"#utility.yul\":6673:6689   */\n      add\n        /* \"#utility.yul\":6667:6690   */\n      mload\n        /* \"#utility.yul\":6703:6766   */\n      tag_153\n        /* \"#utility.yul\":6760:6764   */\n      0x60\n        /* \"#utility.yul\":6755:6758   */\n      dup6\n        /* \"#utility.yul\":6751:6765   */\n      add\n        /* \"#utility.yul\":6737:6749   */\n      dup3\n        /* \"#utility.yul\":6703:6766   */\n      tag_71\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6607:6776   */\n      pop\n        /* \"#utility.yul\":6862:6866   */\n      0x80\n        /* \"#utility.yul\":6855:6860   */\n      dup3\n        /* \"#utility.yul\":6851:6867   */\n      add\n        /* \"#utility.yul\":6845:6868   */\n      mload\n        /* \"#utility.yul\":6881:6944   */\n      tag_154\n        /* \"#utility.yul\":6938:6942   */\n      0x80\n        /* \"#utility.yul\":6933:6936   */\n      dup6\n        /* \"#utility.yul\":6929:6943   */\n      add\n        /* \"#utility.yul\":6915:6927   */\n      dup3\n        /* \"#utility.yul\":6881:6944   */\n      tag_74\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6786:6954   */\n      pop\n        /* \"#utility.yul\":7040:7044   */\n      0xa0\n        /* \"#utility.yul\":7033:7038   */\n      dup3\n        /* \"#utility.yul\":7029:7045   */\n      add\n        /* \"#utility.yul\":7023:7046   */\n      mload\n        /* \"#utility.yul\":7059:7122   */\n      tag_155\n        /* \"#utility.yul\":7116:7120   */\n      0xa0\n        /* \"#utility.yul\":7111:7114   */\n      dup6\n        /* \"#utility.yul\":7107:7121   */\n      add\n        /* \"#utility.yul\":7093:7105   */\n      dup3\n        /* \"#utility.yul\":7059:7122   */\n      tag_74\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6964:7132   */\n      pop\n        /* \"#utility.yul\":7226:7230   */\n      0xc0\n        /* \"#utility.yul\":7219:7224   */\n      dup3\n        /* \"#utility.yul\":7215:7231   */\n      add\n        /* \"#utility.yul\":7209:7232   */\n      mload\n        /* \"#utility.yul\":7245:7308   */\n      tag_156\n        /* \"#utility.yul\":7302:7306   */\n      0xc0\n        /* \"#utility.yul\":7297:7300   */\n      dup6\n        /* \"#utility.yul\":7293:7307   */\n      add\n        /* \"#utility.yul\":7279:7291   */\n      dup3\n        /* \"#utility.yul\":7245:7308   */\n      tag_74\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":7142:7318   */\n      pop\n        /* \"#utility.yul\":7413:7417   */\n      0xe0\n        /* \"#utility.yul\":7406:7411   */\n      dup3\n        /* \"#utility.yul\":7402:7418   */\n      add\n        /* \"#utility.yul\":7396:7419   */\n      mload\n        /* \"#utility.yul\":7432:7495   */\n      tag_157\n        /* \"#utility.yul\":7489:7493   */\n      0xe0\n        /* \"#utility.yul\":7484:7487   */\n      dup6\n        /* \"#utility.yul\":7480:7494   */\n      add\n        /* \"#utility.yul\":7466:7478   */\n      dup3\n        /* \"#utility.yul\":7432:7495   */\n      tag_75\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7328:7505   */\n      pop\n        /* \"#utility.yul\":6033:7512   */\n      pop\n        /* \"#utility.yul\":5891:7512   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7518:7893   */\n    tag_44:\n        /* \"#utility.yul\":7687:7691   */\n      0x00\n        /* \"#utility.yul\":7725:7728   */\n      0x0100\n        /* \"#utility.yul\":7714:7723   */\n      dup3\n        /* \"#utility.yul\":7710:7729   */\n      add\n        /* \"#utility.yul\":7702:7729   */\n      swap1\n      pop\n        /* \"#utility.yul\":7739:7886   */\n      tag_159\n        /* \"#utility.yul\":7883:7884   */\n      0x00\n        /* \"#utility.yul\":7872:7881   */\n      dup4\n        /* \"#utility.yul\":7868:7885   */\n      add\n        /* \"#utility.yul\":7859:7865   */\n      dup5\n        /* \"#utility.yul\":7739:7886   */\n      tag_76\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":7518:7893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7899:8042   */\n    tag_77:\n        /* \"#utility.yul\":7956:7961   */\n      0x00\n        /* \"#utility.yul\":7987:7993   */\n      dup2\n        /* \"#utility.yul\":7981:7994   */\n      mload\n        /* \"#utility.yul\":7972:7994   */\n      swap1\n      pop\n        /* \"#utility.yul\":8003:8036   */\n      tag_161\n        /* \"#utility.yul\":8030:8035   */\n      dup2\n        /* \"#utility.yul\":8003:8036   */\n      tag_53\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7899:8042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8048:8399   */\n    tag_48:\n        /* \"#utility.yul\":8118:8124   */\n      0x00\n        /* \"#utility.yul\":8167:8169   */\n      0x20\n        /* \"#utility.yul\":8155:8164   */\n      dup3\n        /* \"#utility.yul\":8146:8153   */\n      dup5\n        /* \"#utility.yul\":8142:8165   */\n      sub\n        /* \"#utility.yul\":8138:8170   */\n      slt\n        /* \"#utility.yul\":8135:8254   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":8173:8252   */\n      tag_164\n      tag_50\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":8135:8254   */\n    tag_163:\n        /* \"#utility.yul\":8293:8294   */\n      0x00\n        /* \"#utility.yul\":8318:8382   */\n      tag_165\n        /* \"#utility.yul\":8374:8381   */\n      dup5\n        /* \"#utility.yul\":8365:8371   */\n      dup3\n        /* \"#utility.yul\":8354:8363   */\n      dup6\n        /* \"#utility.yul\":8350:8372   */\n      add\n        /* \"#utility.yul\":8318:8382   */\n      tag_77\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":8308:8382   */\n      swap2\n      pop\n        /* \"#utility.yul\":8264:8392   */\n      pop\n        /* \"#utility.yul\":8048:8399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201f8b86fefcd014378c8ec605cac4d5551c0e5bcec8b19a0e2978b701dcf06b0d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:3",
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "922:274:3",
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:3",
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nativeSrc": "970:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nativeSrc": "970:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nativeSrc": "939:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:3",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nativeSrc": "935:32:3",
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nativeSrc": "932:119:3",
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nativeSrc": "1061:128:3",
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nativeSrc": "1076:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nativeSrc": "1147:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nativeSrc": "1115:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:3",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:3",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:3",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b506040516109b53803806109b583398181016040528101906100319190610111565b7394cc0aac535ccdb3c01d6787d6413c739ae12bc473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505061013c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e0826100b7565b9050919050565b6100f0816100d6565b81146100fa575f80fd5b50565b5f8151905061010b816100e7565b92915050565b5f60208284031215610126576101256100b3565b5b5f610133848285016100fd565b91505092915050565b60805160a0516108436101725f395f8181610292015261040c01525f81816101d50152818161033201526103e801526108435ff3fe608060405260043610610042575f3560e01c80631b3d2cb3146100565780634aa4a4fc14610072578063c31c9c071461009c578063fc0c546a146100c657610052565b3661005257610050346100f0565b005b5f80fd5b610070600480360381019061006b9190610465565b6100f0565b005b34801561007d575f80fd5b506100866103ce565b60405161009391906104cf565b60405180910390f35b3480156100a7575f80fd5b506100b06103e6565b6040516100bd9190610543565b60405180910390f35b3480156100d1575f80fd5b506100da61040a565b6040516100e791906104cf565b60405180910390f35b5f8111610132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610129906105b6565b60405180910390fd5b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b15801561018c575f80fd5b505af115801561019e573d5f803e3d5ffd5b505050505073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016102129291906105e3565b6020604051808303815f875af115801561022e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610252919061063f565b505f60405180610100016040528073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200161012c426103039190610697565b81526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161038991906107b4565b6020604051808303815f875af11580156103a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c991906107e2565b505050565b73420000000000000000000000000000000000000681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f819050919050565b61044481610432565b811461044e575f80fd5b50565b5f8135905061045f8161043b565b92915050565b5f6020828403121561047a5761047961042e565b5b5f61048784828501610451565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104b982610490565b9050919050565b6104c9816104af565b82525050565b5f6020820190506104e25f8301846104c0565b92915050565b5f819050919050565b5f61050b61050661050184610490565b6104e8565b610490565b9050919050565b5f61051c826104f1565b9050919050565b5f61052d82610512565b9050919050565b61053d81610523565b82525050565b5f6020820190506105565f830184610534565b92915050565b5f82825260208201905092915050565b7f4d7573742073656e6420455448000000000000000000000000000000000000005f82015250565b5f6105a0600d8361055c565b91506105ab8261056c565b602082019050919050565b5f6020820190508181035f8301526105cd81610594565b9050919050565b6105dd81610432565b82525050565b5f6040820190506105f65f8301856104c0565b61060360208301846105d4565b9392505050565b5f8115159050919050565b61061e8161060a565b8114610628575f80fd5b50565b5f8151905061063981610615565b92915050565b5f602082840312156106545761065361042e565b5b5f6106618482850161062b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106a182610432565b91506106ac83610432565b92508282019050808211156106c4576106c361066a565b5b92915050565b6106d3816104af565b82525050565b5f62ffffff82169050919050565b6106f0816106d9565b82525050565b6106ff81610432565b82525050565b61070e81610490565b82525050565b61010082015f8201516107295f8501826106ca565b50602082015161073c60208501826106ca565b50604082015161074f60408501826106e7565b50606082015161076260608501826106ca565b50608082015161077560808501826106f6565b5060a082015161078860a08501826106f6565b5060c082015161079b60c08501826106f6565b5060e08201516107ae60e0850182610705565b50505050565b5f610100820190506107c85f830184610714565b92915050565b5f815190506107dc8161043b565b92915050565b5f602082840312156107f7576107f661042e565b5b5f610804848285016107ce565b9150509291505056fea26469706673582212201f8b86fefcd014378c8ec605cac4d5551c0e5bcec8b19a0e2978b701dcf06b0d64736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9B5 CODESIZE SUB DUP1 PUSH2 0x9B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x111 JUMP JUMPDEST PUSH20 0x94CC0AAC535CCDB3C01D6787D6413C739AE12BC4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x13C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE0 DUP3 PUSH2 0xB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0 DUP2 PUSH2 0xD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10B DUP2 PUSH2 0xE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126 JUMPI PUSH2 0x125 PUSH2 0xB3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133 DUP5 DUP3 DUP6 ADD PUSH2 0xFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x843 PUSH2 0x172 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x292 ADD MSTORE PUSH2 0x40C ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1D5 ADD MSTORE DUP2 DUP2 PUSH2 0x332 ADD MSTORE PUSH2 0x3E8 ADD MSTORE PUSH2 0x843 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B3D2CB3 EQ PUSH2 0x56 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xC6 JUMPI PUSH2 0x52 JUMP JUMPDEST CALLDATASIZE PUSH2 0x52 JUMPI PUSH2 0x50 CALLVALUE PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x465 JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 GT PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP3 SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C TIMESTAMP PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x444 DUP2 PUSH2 0x432 JUMP JUMPDEST DUP2 EQ PUSH2 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x45F DUP2 PUSH2 0x43B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47A JUMPI PUSH2 0x479 PUSH2 0x42E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x487 DUP5 DUP3 DUP6 ADD PUSH2 0x451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B9 DUP3 PUSH2 0x490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0x4AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x50B PUSH2 0x506 PUSH2 0x501 DUP5 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51C DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x52D DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53D DUP2 PUSH2 0x523 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x556 PUSH0 DUP4 ADD DUP5 PUSH2 0x534 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A0 PUSH1 0xD DUP4 PUSH2 0x55C JUMP JUMPDEST SWAP2 POP PUSH2 0x5AB DUP3 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5CD DUP2 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x432 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH0 DUP4 ADD DUP6 PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x603 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x60A JUMP JUMPDEST DUP2 EQ PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x639 DUP2 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0x42E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x661 DUP5 DUP3 DUP6 ADD PUSH2 0x62B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6A1 DUP3 PUSH2 0x432 JUMP JUMPDEST SWAP2 POP PUSH2 0x6AC DUP4 PUSH2 0x432 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6C4 JUMPI PUSH2 0x6C3 PUSH2 0x66A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D3 DUP2 PUSH2 0x4AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F0 DUP2 PUSH2 0x6D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FF DUP2 PUSH2 0x432 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x70E DUP2 PUSH2 0x490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x729 PUSH0 DUP6 ADD DUP3 PUSH2 0x6CA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x73C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6CA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x74F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6E7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x762 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6CA JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x775 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6F6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x788 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6F6 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x79B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6F6 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7AE PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x705 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x7C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7DC DUP2 PUSH2 0x43B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0x42E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x804 DUP5 DUP3 DUP6 ADD PUSH2 0x7CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP12 DUP7 INVALID 0xFC 0xD0 EQ CALLDATACOPY DUP13 DUP15 0xC6 SDIV 0xCA 0xC4 0xD5 SSTORE SHR 0xE JUMPDEST 0xCE 0xC8 0xB1 SWAP11 0xE 0x29 PUSH25 0xB701DCF06B0D64736F6C634300081A00330000000000000000 ",
							"sourceMap": "393:1105:2:-:0;;;587:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;650:42;625:68;;;;;;;;;;765:6;757:14;;;;;;;;;;587:191;393:1105;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;393:1105:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH9_151": {
									"entryPoint": 974,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_176": {
									"entryPoint": null,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapETHForToken_235": {
									"entryPoint": 240,
									"id": 235,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapRouter_146": {
									"entryPoint": 998,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_148": {
									"entryPoint": 1034,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$113_to_t_address": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8402:3",
										"nodeType": "YulBlock",
										"src": "0:8402:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:32:3",
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nativeSrc": "389:16:3",
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:3",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nativeSrc": "460:79:3",
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:3",
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:3",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:3",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nativeSrc": "519:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nativeSrc": "519:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nativeSrc": "490:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nativeSrc": "480:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nativeSrc": "473:43:3",
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nativeSrc": "470:63:3",
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:3",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nativeSrc": "597:87:3",
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nativeSrc": "607:29:3",
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nativeSrc": "616:20:3",
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nativeSrc": "645:33:3",
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nativeSrc": "645:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:3",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:3",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:3",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nativeSrc": "756:263:3",
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:3",
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nativeSrc": "804:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nativeSrc": "804:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nativeSrc": "773:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:3",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nativeSrc": "769:32:3",
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nativeSrc": "766:119:3",
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nativeSrc": "895:117:3",
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nativeSrc": "910:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:3",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:3",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:3",
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nativeSrc": "970:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nativeSrc": "949:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:3",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:3",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:3",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nativeSrc": "1070:81:3",
													"nodeType": "YulBlock",
													"src": "1070:81:3",
													"statements": [
														{
															"nativeSrc": "1080:65:3",
															"nodeType": "YulAssignment",
															"src": "1080:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:3"
																},
																"nativeSrc": "1091:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:3",
														"nodeType": "YulTypedName",
														"src": "1052:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:3",
														"nodeType": "YulTypedName",
														"src": "1062:7:3",
														"type": ""
													}
												],
												"src": "1025:126:3"
											},
											{
												"body": {
													"nativeSrc": "1202:51:3",
													"nodeType": "YulBlock",
													"src": "1202:51:3",
													"statements": [
														{
															"nativeSrc": "1212:35:3",
															"nodeType": "YulAssignment",
															"src": "1212:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:3"
																},
																"nativeSrc": "1223:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:3",
														"nodeType": "YulTypedName",
														"src": "1184:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:3",
														"nodeType": "YulTypedName",
														"src": "1194:7:3",
														"type": ""
													}
												],
												"src": "1157:96:3"
											},
											{
												"body": {
													"nativeSrc": "1324:53:3",
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nativeSrc": "1346:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nativeSrc": "1334:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nativeSrc": "1334:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:3",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:3",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nativeSrc": "1481:124:3",
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nativeSrc": "1491:26:3",
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nativeSrc": "1499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nativeSrc": "1580:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1527:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nativeSrc": "1527:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nativeSrc": "1527:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1383:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:3",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:3",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:3",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nativeSrc": "1643:28:3",
													"nodeType": "YulBlock",
													"src": "1643:28:3",
													"statements": [
														{
															"nativeSrc": "1653:12:3",
															"nodeType": "YulAssignment",
															"src": "1653:12:3",
															"value": {
																"name": "value",
																"nativeSrc": "1660:5:3",
																"nodeType": "YulIdentifier",
																"src": "1660:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1653:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1653:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1611:60:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1629:5:3",
														"nodeType": "YulTypedName",
														"src": "1629:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1639:3:3",
														"nodeType": "YulTypedName",
														"src": "1639:3:3",
														"type": ""
													}
												],
												"src": "1611:60:3"
											},
											{
												"body": {
													"nativeSrc": "1737:82:3",
													"nodeType": "YulBlock",
													"src": "1737:82:3",
													"statements": [
														{
															"nativeSrc": "1747:66:3",
															"nodeType": "YulAssignment",
															"src": "1747:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1805:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1805:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1787:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1787:17:3"
																				},
																				"nativeSrc": "1787:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1787:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1778:8:3",
																			"nodeType": "YulIdentifier",
																			"src": "1778:8:3"
																		},
																		"nativeSrc": "1778:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1760:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1760:17:3"
																},
																"nativeSrc": "1760:53:3",
																"nodeType": "YulFunctionCall",
																"src": "1760:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1747:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1677:142:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1717:5:3",
														"nodeType": "YulTypedName",
														"src": "1717:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1727:9:3",
														"nodeType": "YulTypedName",
														"src": "1727:9:3",
														"type": ""
													}
												],
												"src": "1677:142:3"
											},
											{
												"body": {
													"nativeSrc": "1885:66:3",
													"nodeType": "YulBlock",
													"src": "1885:66:3",
													"statements": [
														{
															"nativeSrc": "1895:50:3",
															"nodeType": "YulAssignment",
															"src": "1895:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1939:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1939:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1908:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "1908:30:3"
																},
																"nativeSrc": "1908:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1908:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1895:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "1895:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1825:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1865:5:3",
														"nodeType": "YulTypedName",
														"src": "1865:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1875:9:3",
														"nodeType": "YulTypedName",
														"src": "1875:9:3",
														"type": ""
													}
												],
												"src": "1825:126:3"
											},
											{
												"body": {
													"nativeSrc": "2036:66:3",
													"nodeType": "YulBlock",
													"src": "2036:66:3",
													"statements": [
														{
															"nativeSrc": "2046:50:3",
															"nodeType": "YulAssignment",
															"src": "2046:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2090:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2090:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2059:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "2059:30:3"
																},
																"nativeSrc": "2059:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2059:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2046:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "2046:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$113_to_t_address",
												"nativeSrc": "1957:145:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2016:5:3",
														"nodeType": "YulTypedName",
														"src": "2016:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2026:9:3",
														"nodeType": "YulTypedName",
														"src": "2026:9:3",
														"type": ""
													}
												],
												"src": "1957:145:3"
											},
											{
												"body": {
													"nativeSrc": "2192:85:3",
													"nodeType": "YulBlock",
													"src": "2192:85:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2209:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2264:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2264:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$113_to_t_address",
																			"nativeSrc": "2214:49:3",
																			"nodeType": "YulIdentifier",
																			"src": "2214:49:3"
																		},
																		"nativeSrc": "2214:56:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2214:56:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2202:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:3"
																},
																"nativeSrc": "2202:69:3",
																"nodeType": "YulFunctionCall",
																"src": "2202:69:3"
															},
															"nativeSrc": "2202:69:3",
															"nodeType": "YulExpressionStatement",
															"src": "2202:69:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack",
												"nativeSrc": "2108:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2180:5:3",
														"nodeType": "YulTypedName",
														"src": "2180:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2187:3:3",
														"nodeType": "YulTypedName",
														"src": "2187:3:3",
														"type": ""
													}
												],
												"src": "2108:169:3"
											},
											{
												"body": {
													"nativeSrc": "2400:143:3",
													"nodeType": "YulBlock",
													"src": "2400:143:3",
													"statements": [
														{
															"nativeSrc": "2410:26:3",
															"nodeType": "YulAssignment",
															"src": "2410:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2422:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2433:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2433:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2418:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2418:3:3"
																},
																"nativeSrc": "2418:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2418:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2410:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2410:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2509:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2522:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2522:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2533:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2533:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2518:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:3"
																		},
																		"nativeSrc": "2518:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack",
																	"nativeSrc": "2446:62:3",
																	"nodeType": "YulIdentifier",
																	"src": "2446:62:3"
																},
																"nativeSrc": "2446:90:3",
																"nodeType": "YulFunctionCall",
																"src": "2446:90:3"
															},
															"nativeSrc": "2446:90:3",
															"nodeType": "YulExpressionStatement",
															"src": "2446:90:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed",
												"nativeSrc": "2283:260:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2372:9:3",
														"nodeType": "YulTypedName",
														"src": "2372:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2384:6:3",
														"nodeType": "YulTypedName",
														"src": "2384:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2395:4:3",
														"nodeType": "YulTypedName",
														"src": "2395:4:3",
														"type": ""
													}
												],
												"src": "2283:260:3"
											},
											{
												"body": {
													"nativeSrc": "2645:73:3",
													"nodeType": "YulBlock",
													"src": "2645:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2662:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2662:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2667:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2667:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2655:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:3"
																},
																"nativeSrc": "2655:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2655:19:3"
															},
															"nativeSrc": "2655:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2655:19:3"
														},
														{
															"nativeSrc": "2683:29:3",
															"nodeType": "YulAssignment",
															"src": "2683:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2702:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2702:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2707:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2707:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2698:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2698:3:3"
																},
																"nativeSrc": "2698:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2698:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2683:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2683:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2549:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2617:3:3",
														"nodeType": "YulTypedName",
														"src": "2617:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2622:6:3",
														"nodeType": "YulTypedName",
														"src": "2622:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2633:11:3",
														"nodeType": "YulTypedName",
														"src": "2633:11:3",
														"type": ""
													}
												],
												"src": "2549:169:3"
											},
											{
												"body": {
													"nativeSrc": "2830:57:3",
													"nodeType": "YulBlock",
													"src": "2830:57:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2852:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2848:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:3"
																		},
																		"nativeSrc": "2848:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:14:3"
																	},
																	{
																		"hexValue": "4d7573742073656e6420455448",
																		"kind": "string",
																		"nativeSrc": "2864:15:3",
																		"nodeType": "YulLiteral",
																		"src": "2864:15:3",
																		"type": "",
																		"value": "Must send ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2841:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:3"
																},
																"nativeSrc": "2841:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2841:39:3"
															},
															"nativeSrc": "2841:39:3",
															"nodeType": "YulExpressionStatement",
															"src": "2841:39:3"
														}
													]
												},
												"name": "store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
												"nativeSrc": "2724:163:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2822:6:3",
														"nodeType": "YulTypedName",
														"src": "2822:6:3",
														"type": ""
													}
												],
												"src": "2724:163:3"
											},
											{
												"body": {
													"nativeSrc": "3039:220:3",
													"nodeType": "YulBlock",
													"src": "3039:220:3",
													"statements": [
														{
															"nativeSrc": "3049:74:3",
															"nodeType": "YulAssignment",
															"src": "3049:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3115:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3115:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3120:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3120:2:3",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3056:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3056:58:3"
																},
																"nativeSrc": "3056:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3056:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3049:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3221:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3221:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																	"nativeSrc": "3132:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3132:88:3"
																},
																"nativeSrc": "3132:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3132:93:3"
															},
															"nativeSrc": "3132:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3132:93:3"
														},
														{
															"nativeSrc": "3234:19:3",
															"nodeType": "YulAssignment",
															"src": "3234:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3245:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3250:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3250:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3241:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:3"
																},
																"nativeSrc": "3241:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3241:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3234:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3234:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2893:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3027:3:3",
														"nodeType": "YulTypedName",
														"src": "3027:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3035:3:3",
														"nodeType": "YulTypedName",
														"src": "3035:3:3",
														"type": ""
													}
												],
												"src": "2893:366:3"
											},
											{
												"body": {
													"nativeSrc": "3436:248:3",
													"nodeType": "YulBlock",
													"src": "3436:248:3",
													"statements": [
														{
															"nativeSrc": "3446:26:3",
															"nodeType": "YulAssignment",
															"src": "3446:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3458:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3458:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3469:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3454:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:3"
																},
																"nativeSrc": "3454:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3454:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3446:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3446:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3493:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3493:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3504:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3504:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3489:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3489:3:3"
																		},
																		"nativeSrc": "3489:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3489:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3512:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3512:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3518:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3518:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3508:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:3"
																		},
																		"nativeSrc": "3508:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3508:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3482:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3482:6:3"
																},
																"nativeSrc": "3482:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3482:47:3"
															},
															"nativeSrc": "3482:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3482:47:3"
														},
														{
															"nativeSrc": "3538:139:3",
															"nodeType": "YulAssignment",
															"src": "3538:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3672:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3672:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3546:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "3546:124:3"
																},
																"nativeSrc": "3546:131:3",
																"nodeType": "YulFunctionCall",
																"src": "3546:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3538:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3538:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3265:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3416:9:3",
														"nodeType": "YulTypedName",
														"src": "3416:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3431:4:3",
														"nodeType": "YulTypedName",
														"src": "3431:4:3",
														"type": ""
													}
												],
												"src": "3265:419:3"
											},
											{
												"body": {
													"nativeSrc": "3755:53:3",
													"nodeType": "YulBlock",
													"src": "3755:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3772:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3772:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3795:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3795:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3777:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3777:17:3"
																		},
																		"nativeSrc": "3777:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3777:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3765:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3765:6:3"
																},
																"nativeSrc": "3765:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3765:37:3"
															},
															"nativeSrc": "3765:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3765:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3690:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3743:5:3",
														"nodeType": "YulTypedName",
														"src": "3743:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3750:3:3",
														"nodeType": "YulTypedName",
														"src": "3750:3:3",
														"type": ""
													}
												],
												"src": "3690:118:3"
											},
											{
												"body": {
													"nativeSrc": "3940:206:3",
													"nodeType": "YulBlock",
													"src": "3940:206:3",
													"statements": [
														{
															"nativeSrc": "3950:26:3",
															"nodeType": "YulAssignment",
															"src": "3950:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3962:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3962:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3973:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3973:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3958:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3958:3:3"
																},
																"nativeSrc": "3958:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3958:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3950:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3950:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4030:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4030:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4043:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4054:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4054:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4039:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:3"
																		},
																		"nativeSrc": "4039:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3986:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3986:43:3"
																},
																"nativeSrc": "3986:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3986:71:3"
															},
															"nativeSrc": "3986:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3986:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4111:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4111:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4124:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4135:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4135:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4120:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:3"
																		},
																		"nativeSrc": "4120:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4067:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4067:43:3"
																},
																"nativeSrc": "4067:72:3",
																"nodeType": "YulFunctionCall",
																"src": "4067:72:3"
															},
															"nativeSrc": "4067:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "4067:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3814:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3904:9:3",
														"nodeType": "YulTypedName",
														"src": "3904:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3916:6:3",
														"nodeType": "YulTypedName",
														"src": "3916:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3924:6:3",
														"nodeType": "YulTypedName",
														"src": "3924:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3935:4:3",
														"nodeType": "YulTypedName",
														"src": "3935:4:3",
														"type": ""
													}
												],
												"src": "3814:332:3"
											},
											{
												"body": {
													"nativeSrc": "4194:48:3",
													"nodeType": "YulBlock",
													"src": "4194:48:3",
													"statements": [
														{
															"nativeSrc": "4204:32:3",
															"nodeType": "YulAssignment",
															"src": "4204:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4229:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4229:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4222:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4222:6:3"
																		},
																		"nativeSrc": "4222:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4222:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4215:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4215:6:3"
																},
																"nativeSrc": "4215:21:3",
																"nodeType": "YulFunctionCall",
																"src": "4215:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4204:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "4204:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4152:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4176:5:3",
														"nodeType": "YulTypedName",
														"src": "4176:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4186:7:3",
														"nodeType": "YulTypedName",
														"src": "4186:7:3",
														"type": ""
													}
												],
												"src": "4152:90:3"
											},
											{
												"body": {
													"nativeSrc": "4288:76:3",
													"nodeType": "YulBlock",
													"src": "4288:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4342:16:3",
																"nodeType": "YulBlock",
																"src": "4342:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4351:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4351:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4354:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4354:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4344:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4344:6:3"
																			},
																			"nativeSrc": "4344:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4344:12:3"
																		},
																		"nativeSrc": "4344:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4344:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4311:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4311:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4333:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4333:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4318:14:3",
																					"nodeType": "YulIdentifier",
																					"src": "4318:14:3"
																				},
																				"nativeSrc": "4318:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4318:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4308:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4308:2:3"
																		},
																		"nativeSrc": "4308:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4308:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4301:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:3"
																},
																"nativeSrc": "4301:40:3",
																"nodeType": "YulFunctionCall",
																"src": "4301:40:3"
															},
															"nativeSrc": "4298:60:3",
															"nodeType": "YulIf",
															"src": "4298:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4248:116:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4281:5:3",
														"nodeType": "YulTypedName",
														"src": "4281:5:3",
														"type": ""
													}
												],
												"src": "4248:116:3"
											},
											{
												"body": {
													"nativeSrc": "4430:77:3",
													"nodeType": "YulBlock",
													"src": "4430:77:3",
													"statements": [
														{
															"nativeSrc": "4440:22:3",
															"nodeType": "YulAssignment",
															"src": "4440:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4455:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4455:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4449:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4449:5:3"
																},
																"nativeSrc": "4449:13:3",
																"nodeType": "YulFunctionCall",
																"src": "4449:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4440:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4440:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4495:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4495:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4471:23:3",
																	"nodeType": "YulIdentifier",
																	"src": "4471:23:3"
																},
																"nativeSrc": "4471:30:3",
																"nodeType": "YulFunctionCall",
																"src": "4471:30:3"
															},
															"nativeSrc": "4471:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "4471:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4370:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4408:6:3",
														"nodeType": "YulTypedName",
														"src": "4408:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4416:3:3",
														"nodeType": "YulTypedName",
														"src": "4416:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4424:5:3",
														"nodeType": "YulTypedName",
														"src": "4424:5:3",
														"type": ""
													}
												],
												"src": "4370:137:3"
											},
											{
												"body": {
													"nativeSrc": "4587:271:3",
													"nodeType": "YulBlock",
													"src": "4587:271:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4633:83:3",
																"nodeType": "YulBlock",
																"src": "4633:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4635:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "4635:77:3"
																			},
																			"nativeSrc": "4635:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4635:79:3"
																		},
																		"nativeSrc": "4635:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4635:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4608:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4608:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4617:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4617:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4604:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4604:3:3"
																		},
																		"nativeSrc": "4604:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4604:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4629:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4600:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:3"
																},
																"nativeSrc": "4600:32:3",
																"nodeType": "YulFunctionCall",
																"src": "4600:32:3"
															},
															"nativeSrc": "4597:119:3",
															"nodeType": "YulIf",
															"src": "4597:119:3"
														},
														{
															"nativeSrc": "4726:125:3",
															"nodeType": "YulBlock",
															"src": "4726:125:3",
															"statements": [
																{
																	"nativeSrc": "4741:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4741:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4755:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4755:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4745:6:3",
																			"nodeType": "YulTypedName",
																			"src": "4745:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4770:71:3",
																	"nodeType": "YulAssignment",
																	"src": "4770:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4813:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "4813:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4824:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4824:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4809:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4809:3:3"
																				},
																				"nativeSrc": "4809:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4809:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4780:28:3",
																			"nodeType": "YulIdentifier",
																			"src": "4780:28:3"
																		},
																		"nativeSrc": "4780:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4780:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4770:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4770:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4513:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4557:9:3",
														"nodeType": "YulTypedName",
														"src": "4557:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4568:7:3",
														"nodeType": "YulTypedName",
														"src": "4568:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4580:6:3",
														"nodeType": "YulTypedName",
														"src": "4580:6:3",
														"type": ""
													}
												],
												"src": "4513:345:3"
											},
											{
												"body": {
													"nativeSrc": "4892:152:3",
													"nodeType": "YulBlock",
													"src": "4892:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4909:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4909:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4912:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4902:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:3"
																},
																"nativeSrc": "4902:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4902:88:3"
															},
															"nativeSrc": "4902:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4902:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5006:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5006:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5009:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5009:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4999:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:3"
																},
																"nativeSrc": "4999:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4999:15:3"
															},
															"nativeSrc": "4999:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4999:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5030:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5030:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5033:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5033:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5023:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:3"
																},
																"nativeSrc": "5023:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5023:15:3"
															},
															"nativeSrc": "5023:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5023:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4864:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4864:180:3"
											},
											{
												"body": {
													"nativeSrc": "5094:147:3",
													"nodeType": "YulBlock",
													"src": "5094:147:3",
													"statements": [
														{
															"nativeSrc": "5104:25:3",
															"nodeType": "YulAssignment",
															"src": "5104:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5127:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5127:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5109:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5109:17:3"
																},
																"nativeSrc": "5109:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5109:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5104:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5104:1:3"
																}
															]
														},
														{
															"nativeSrc": "5138:25:3",
															"nodeType": "YulAssignment",
															"src": "5138:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5161:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5161:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:3"
																},
																"nativeSrc": "5143:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5143:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5138:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5138:1:3"
																}
															]
														},
														{
															"nativeSrc": "5172:16:3",
															"nodeType": "YulAssignment",
															"src": "5172:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5183:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5183:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5186:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5186:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5179:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5179:3:3"
																},
																"nativeSrc": "5179:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5179:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5172:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5172:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5212:22:3",
																"nodeType": "YulBlock",
																"src": "5212:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5214:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5214:16:3"
																			},
																			"nativeSrc": "5214:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5214:18:3"
																		},
																		"nativeSrc": "5214:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5214:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5204:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5204:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5207:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5207:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5201:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5201:2:3"
																},
																"nativeSrc": "5201:10:3",
																"nodeType": "YulFunctionCall",
																"src": "5201:10:3"
															},
															"nativeSrc": "5198:36:3",
															"nodeType": "YulIf",
															"src": "5198:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5050:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5081:1:3",
														"nodeType": "YulTypedName",
														"src": "5081:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5084:1:3",
														"nodeType": "YulTypedName",
														"src": "5084:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5090:3:3",
														"nodeType": "YulTypedName",
														"src": "5090:3:3",
														"type": ""
													}
												],
												"src": "5050:191:3"
											},
											{
												"body": {
													"nativeSrc": "5302:53:3",
													"nodeType": "YulBlock",
													"src": "5302:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5319:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5319:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5342:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5342:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5324:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "5324:17:3"
																		},
																		"nativeSrc": "5324:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5324:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5312:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:3"
																},
																"nativeSrc": "5312:37:3",
																"nodeType": "YulFunctionCall",
																"src": "5312:37:3"
															},
															"nativeSrc": "5312:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "5312:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "5247:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5290:5:3",
														"nodeType": "YulTypedName",
														"src": "5290:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5297:3:3",
														"nodeType": "YulTypedName",
														"src": "5297:3:3",
														"type": ""
													}
												],
												"src": "5247:108:3"
											},
											{
												"body": {
													"nativeSrc": "5405:47:3",
													"nodeType": "YulBlock",
													"src": "5405:47:3",
													"statements": [
														{
															"nativeSrc": "5415:31:3",
															"nodeType": "YulAssignment",
															"src": "5415:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5430:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "5430:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5437:8:3",
																		"nodeType": "YulLiteral",
																		"src": "5437:8:3",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5426:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5426:3:3"
																},
																"nativeSrc": "5426:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5426:20:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5415:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "5415:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "5361:91:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5387:5:3",
														"nodeType": "YulTypedName",
														"src": "5387:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5397:7:3",
														"nodeType": "YulTypedName",
														"src": "5397:7:3",
														"type": ""
													}
												],
												"src": "5361:91:3"
											},
											{
												"body": {
													"nativeSrc": "5511:52:3",
													"nodeType": "YulBlock",
													"src": "5511:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5528:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5528:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5550:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5550:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "5533:16:3",
																			"nodeType": "YulIdentifier",
																			"src": "5533:16:3"
																		},
																		"nativeSrc": "5533:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5521:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:3"
																},
																"nativeSrc": "5521:36:3",
																"nodeType": "YulFunctionCall",
																"src": "5521:36:3"
															},
															"nativeSrc": "5521:36:3",
															"nodeType": "YulExpressionStatement",
															"src": "5521:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "5458:105:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5499:5:3",
														"nodeType": "YulTypedName",
														"src": "5499:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5506:3:3",
														"nodeType": "YulTypedName",
														"src": "5506:3:3",
														"type": ""
													}
												],
												"src": "5458:105:3"
											},
											{
												"body": {
													"nativeSrc": "5624:53:3",
													"nodeType": "YulBlock",
													"src": "5624:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5641:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5641:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5664:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5664:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5646:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "5646:17:3"
																		},
																		"nativeSrc": "5646:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5646:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5634:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:3"
																},
																"nativeSrc": "5634:37:3",
																"nodeType": "YulFunctionCall",
																"src": "5634:37:3"
															},
															"nativeSrc": "5634:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "5634:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "5569:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5612:5:3",
														"nodeType": "YulTypedName",
														"src": "5612:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5619:3:3",
														"nodeType": "YulTypedName",
														"src": "5619:3:3",
														"type": ""
													}
												],
												"src": "5569:108:3"
											},
											{
												"body": {
													"nativeSrc": "5738:53:3",
													"nodeType": "YulBlock",
													"src": "5738:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5755:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5755:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5778:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5778:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "5760:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "5760:17:3"
																		},
																		"nativeSrc": "5760:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5760:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5748:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5748:6:3"
																},
																"nativeSrc": "5748:37:3",
																"nodeType": "YulFunctionCall",
																"src": "5748:37:3"
															},
															"nativeSrc": "5748:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "5748:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "5683:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5726:5:3",
														"nodeType": "YulTypedName",
														"src": "5726:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5733:3:3",
														"nodeType": "YulTypedName",
														"src": "5733:3:3",
														"type": ""
													}
												],
												"src": "5683:108:3"
											},
											{
												"body": {
													"nativeSrc": "6033:1479:3",
													"nodeType": "YulBlock",
													"src": "6033:1479:3",
													"statements": [
														{
															"nativeSrc": "6043:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "6043:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6059:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6059:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6064:6:3",
																		"nodeType": "YulLiteral",
																		"src": "6064:6:3",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6055:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6055:3:3"
																},
																"nativeSrc": "6055:16:3",
																"nodeType": "YulFunctionCall",
																"src": "6055:16:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6047:4:3",
																	"nodeType": "YulTypedName",
																	"src": "6047:4:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6081:167:3",
															"nodeType": "YulBlock",
															"src": "6081:167:3",
															"statements": [
																{
																	"nativeSrc": "6119:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6119:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6149:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6149:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6156:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6156:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6145:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6145:3:3"
																				},
																				"nativeSrc": "6145:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6145:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6139:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6139:5:3"
																		},
																		"nativeSrc": "6139:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6139:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6123:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6123:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6209:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6209:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6227:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6227:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6232:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6232:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6223:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6223:3:3"
																				},
																				"nativeSrc": "6223:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6223:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6175:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "6175:33:3"
																		},
																		"nativeSrc": "6175:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6175:63:3"
																	},
																	"nativeSrc": "6175:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6175:63:3"
																}
															]
														},
														{
															"nativeSrc": "6258:168:3",
															"nodeType": "YulBlock",
															"src": "6258:168:3",
															"statements": [
																{
																	"nativeSrc": "6297:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6297:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6327:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6327:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6334:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6334:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6323:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6323:3:3"
																				},
																				"nativeSrc": "6323:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6323:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6317:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6317:5:3"
																		},
																		"nativeSrc": "6317:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6317:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6301:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6301:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6387:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6387:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6405:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6405:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6410:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6410:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6401:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6401:3:3"
																				},
																				"nativeSrc": "6401:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6401:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6353:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "6353:33:3"
																		},
																		"nativeSrc": "6353:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6353:63:3"
																	},
																	"nativeSrc": "6353:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6353:63:3"
																}
															]
														},
														{
															"nativeSrc": "6436:161:3",
															"nodeType": "YulBlock",
															"src": "6436:161:3",
															"statements": [
																{
																	"nativeSrc": "6470:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6470:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6500:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6500:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6507:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6507:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6496:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6496:3:3"
																				},
																				"nativeSrc": "6496:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6496:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6490:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6490:5:3"
																		},
																		"nativeSrc": "6490:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6490:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6474:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6474:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6558:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6558:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6576:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6576:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6581:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6581:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6572:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6572:3:3"
																				},
																				"nativeSrc": "6572:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6572:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "6526:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "6526:31:3"
																		},
																		"nativeSrc": "6526:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6526:61:3"
																	},
																	"nativeSrc": "6526:61:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6526:61:3"
																}
															]
														},
														{
															"nativeSrc": "6607:169:3",
															"nodeType": "YulBlock",
															"src": "6607:169:3",
															"statements": [
																{
																	"nativeSrc": "6647:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6647:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6677:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6677:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6684:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6684:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6673:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6673:3:3"
																				},
																				"nativeSrc": "6673:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6673:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6667:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6667:5:3"
																		},
																		"nativeSrc": "6667:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6667:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6651:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6651:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6737:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6737:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6755:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6755:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6760:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6760:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6751:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6751:3:3"
																				},
																				"nativeSrc": "6751:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6751:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6703:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "6703:33:3"
																		},
																		"nativeSrc": "6703:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6703:63:3"
																	},
																	"nativeSrc": "6703:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6703:63:3"
																}
															]
														},
														{
															"nativeSrc": "6786:168:3",
															"nodeType": "YulBlock",
															"src": "6786:168:3",
															"statements": [
																{
																	"nativeSrc": "6825:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6825:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6855:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6855:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6862:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6862:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6851:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6851:3:3"
																				},
																				"nativeSrc": "6851:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6851:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6845:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6845:5:3"
																		},
																		"nativeSrc": "6845:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6845:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6829:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6829:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6915:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6915:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6933:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6933:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6938:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6938:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6929:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6929:3:3"
																				},
																				"nativeSrc": "6929:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6929:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6881:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "6881:33:3"
																		},
																		"nativeSrc": "6881:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6881:63:3"
																	},
																	"nativeSrc": "6881:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6881:63:3"
																}
															]
														},
														{
															"nativeSrc": "6964:168:3",
															"nodeType": "YulBlock",
															"src": "6964:168:3",
															"statements": [
																{
																	"nativeSrc": "7003:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7003:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7033:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "7033:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7040:4:3",
																						"nodeType": "YulLiteral",
																						"src": "7040:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7029:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7029:3:3"
																				},
																				"nativeSrc": "7029:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7029:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7023:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "7023:5:3"
																		},
																		"nativeSrc": "7023:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7023:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7007:12:3",
																			"nodeType": "YulTypedName",
																			"src": "7007:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7093:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "7093:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7111:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "7111:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7116:4:3",
																						"nodeType": "YulLiteral",
																						"src": "7116:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7107:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7107:3:3"
																				},
																				"nativeSrc": "7107:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7107:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7059:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "7059:33:3"
																		},
																		"nativeSrc": "7059:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:63:3"
																	},
																	"nativeSrc": "7059:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "7059:63:3"
																}
															]
														},
														{
															"nativeSrc": "7142:176:3",
															"nodeType": "YulBlock",
															"src": "7142:176:3",
															"statements": [
																{
																	"nativeSrc": "7189:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7189:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7219:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "7219:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7226:4:3",
																						"nodeType": "YulLiteral",
																						"src": "7226:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7215:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7215:3:3"
																				},
																				"nativeSrc": "7215:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7215:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7209:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "7209:5:3"
																		},
																		"nativeSrc": "7209:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7209:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7193:12:3",
																			"nodeType": "YulTypedName",
																			"src": "7193:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7279:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "7279:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7297:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "7297:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7302:4:3",
																						"nodeType": "YulLiteral",
																						"src": "7302:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7293:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7293:3:3"
																				},
																				"nativeSrc": "7293:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7293:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7245:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "7245:33:3"
																		},
																		"nativeSrc": "7245:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7245:63:3"
																	},
																	"nativeSrc": "7245:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "7245:63:3"
																}
															]
														},
														{
															"nativeSrc": "7328:177:3",
															"nodeType": "YulBlock",
															"src": "7328:177:3",
															"statements": [
																{
																	"nativeSrc": "7376:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7376:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7406:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "7406:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7413:4:3",
																						"nodeType": "YulLiteral",
																						"src": "7413:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7402:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7402:3:3"
																				},
																				"nativeSrc": "7402:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7402:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7396:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "7396:5:3"
																		},
																		"nativeSrc": "7396:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7396:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7380:12:3",
																			"nodeType": "YulTypedName",
																			"src": "7380:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7466:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "7466:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7484:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "7484:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7489:4:3",
																						"nodeType": "YulLiteral",
																						"src": "7489:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7480:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7480:3:3"
																				},
																				"nativeSrc": "7480:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7480:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "7432:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "7432:33:3"
																		},
																		"nativeSrc": "7432:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7432:63:3"
																	},
																	"nativeSrc": "7432:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "7432:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack",
												"nativeSrc": "5891:1621:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6020:5:3",
														"nodeType": "YulTypedName",
														"src": "6020:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6027:3:3",
														"nodeType": "YulTypedName",
														"src": "6027:3:3",
														"type": ""
													}
												],
												"src": "5891:1621:3"
											},
											{
												"body": {
													"nativeSrc": "7692:201:3",
													"nodeType": "YulBlock",
													"src": "7692:201:3",
													"statements": [
														{
															"nativeSrc": "7702:27:3",
															"nodeType": "YulAssignment",
															"src": "7702:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7714:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7714:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7725:3:3",
																		"nodeType": "YulLiteral",
																		"src": "7725:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7710:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7710:3:3"
																},
																"nativeSrc": "7710:19:3",
																"nodeType": "YulFunctionCall",
																"src": "7710:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7702:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7702:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7859:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7859:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7872:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7872:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7883:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7883:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7868:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7868:3:3"
																		},
																		"nativeSrc": "7868:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7868:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack",
																	"nativeSrc": "7739:119:3",
																	"nodeType": "YulIdentifier",
																	"src": "7739:119:3"
																},
																"nativeSrc": "7739:147:3",
																"nodeType": "YulFunctionCall",
																"src": "7739:147:3"
															},
															"nativeSrc": "7739:147:3",
															"nodeType": "YulExpressionStatement",
															"src": "7739:147:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed",
												"nativeSrc": "7518:375:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7664:9:3",
														"nodeType": "YulTypedName",
														"src": "7664:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7676:6:3",
														"nodeType": "YulTypedName",
														"src": "7676:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7687:4:3",
														"nodeType": "YulTypedName",
														"src": "7687:4:3",
														"type": ""
													}
												],
												"src": "7518:375:3"
											},
											{
												"body": {
													"nativeSrc": "7962:80:3",
													"nodeType": "YulBlock",
													"src": "7962:80:3",
													"statements": [
														{
															"nativeSrc": "7972:22:3",
															"nodeType": "YulAssignment",
															"src": "7972:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7987:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7987:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7981:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "7981:5:3"
																},
																"nativeSrc": "7981:13:3",
																"nodeType": "YulFunctionCall",
																"src": "7981:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7972:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "7972:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8030:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "8030:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8003:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "8003:26:3"
																},
																"nativeSrc": "8003:33:3",
																"nodeType": "YulFunctionCall",
																"src": "8003:33:3"
															},
															"nativeSrc": "8003:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "8003:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7899:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7940:6:3",
														"nodeType": "YulTypedName",
														"src": "7940:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7948:3:3",
														"nodeType": "YulTypedName",
														"src": "7948:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7956:5:3",
														"nodeType": "YulTypedName",
														"src": "7956:5:3",
														"type": ""
													}
												],
												"src": "7899:143:3"
											},
											{
												"body": {
													"nativeSrc": "8125:274:3",
													"nodeType": "YulBlock",
													"src": "8125:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "8171:83:3",
																"nodeType": "YulBlock",
																"src": "8171:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8173:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "8173:77:3"
																			},
																			"nativeSrc": "8173:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8173:79:3"
																		},
																		"nativeSrc": "8173:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8173:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8146:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "8146:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8155:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8155:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8142:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8142:3:3"
																		},
																		"nativeSrc": "8142:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8142:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8167:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8167:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8138:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8138:3:3"
																},
																"nativeSrc": "8138:32:3",
																"nodeType": "YulFunctionCall",
																"src": "8138:32:3"
															},
															"nativeSrc": "8135:119:3",
															"nodeType": "YulIf",
															"src": "8135:119:3"
														},
														{
															"nativeSrc": "8264:128:3",
															"nodeType": "YulBlock",
															"src": "8264:128:3",
															"statements": [
																{
																	"nativeSrc": "8279:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8279:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8293:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8293:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8283:6:3",
																			"nodeType": "YulTypedName",
																			"src": "8283:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8308:74:3",
																	"nodeType": "YulAssignment",
																	"src": "8308:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8354:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "8354:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8365:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "8365:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8350:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "8350:3:3"
																				},
																				"nativeSrc": "8350:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8350:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8374:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "8374:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8318:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "8318:31:3"
																		},
																		"nativeSrc": "8318:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8308:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "8308:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8048:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8095:9:3",
														"nodeType": "YulTypedName",
														"src": "8095:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8106:7:3",
														"nodeType": "YulTypedName",
														"src": "8106:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8118:6:3",
														"nodeType": "YulTypedName",
														"src": "8118:6:3",
														"type": ""
													}
												],
												"src": "8048:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$113_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$113_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"146": [
									{
										"length": 32,
										"start": 469
									},
									{
										"length": 32,
										"start": 818
									},
									{
										"length": 32,
										"start": 1000
									}
								],
								"148": [
									{
										"length": 32,
										"start": 658
									},
									{
										"length": 32,
										"start": 1036
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610042575f3560e01c80631b3d2cb3146100565780634aa4a4fc14610072578063c31c9c071461009c578063fc0c546a146100c657610052565b3661005257610050346100f0565b005b5f80fd5b610070600480360381019061006b9190610465565b6100f0565b005b34801561007d575f80fd5b506100866103ce565b60405161009391906104cf565b60405180910390f35b3480156100a7575f80fd5b506100b06103e6565b6040516100bd9190610543565b60405180910390f35b3480156100d1575f80fd5b506100da61040a565b6040516100e791906104cf565b60405180910390f35b5f8111610132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610129906105b6565b60405180910390fd5b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b15801561018c575f80fd5b505af115801561019e573d5f803e3d5ffd5b505050505073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016102129291906105e3565b6020604051808303815f875af115801561022e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610252919061063f565b505f60405180610100016040528073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200161012c426103039190610697565b81526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161038991906107b4565b6020604051808303815f875af11580156103a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c991906107e2565b505050565b73420000000000000000000000000000000000000681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f819050919050565b61044481610432565b811461044e575f80fd5b50565b5f8135905061045f8161043b565b92915050565b5f6020828403121561047a5761047961042e565b5b5f61048784828501610451565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104b982610490565b9050919050565b6104c9816104af565b82525050565b5f6020820190506104e25f8301846104c0565b92915050565b5f819050919050565b5f61050b61050661050184610490565b6104e8565b610490565b9050919050565b5f61051c826104f1565b9050919050565b5f61052d82610512565b9050919050565b61053d81610523565b82525050565b5f6020820190506105565f830184610534565b92915050565b5f82825260208201905092915050565b7f4d7573742073656e6420455448000000000000000000000000000000000000005f82015250565b5f6105a0600d8361055c565b91506105ab8261056c565b602082019050919050565b5f6020820190508181035f8301526105cd81610594565b9050919050565b6105dd81610432565b82525050565b5f6040820190506105f65f8301856104c0565b61060360208301846105d4565b9392505050565b5f8115159050919050565b61061e8161060a565b8114610628575f80fd5b50565b5f8151905061063981610615565b92915050565b5f602082840312156106545761065361042e565b5b5f6106618482850161062b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106a182610432565b91506106ac83610432565b92508282019050808211156106c4576106c361066a565b5b92915050565b6106d3816104af565b82525050565b5f62ffffff82169050919050565b6106f0816106d9565b82525050565b6106ff81610432565b82525050565b61070e81610490565b82525050565b61010082015f8201516107295f8501826106ca565b50602082015161073c60208501826106ca565b50604082015161074f60408501826106e7565b50606082015161076260608501826106ca565b50608082015161077560808501826106f6565b5060a082015161078860a08501826106f6565b5060c082015161079b60c08501826106f6565b5060e08201516107ae60e0850182610705565b50505050565b5f610100820190506107c85f830184610714565b92915050565b5f815190506107dc8161043b565b92915050565b5f602082840312156107f7576107f661042e565b5b5f610804848285016107ce565b9150509291505056fea26469706673582212201f8b86fefcd014378c8ec605cac4d5551c0e5bcec8b19a0e2978b701dcf06b0d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B3D2CB3 EQ PUSH2 0x56 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xC6 JUMPI PUSH2 0x52 JUMP JUMPDEST CALLDATASIZE PUSH2 0x52 JUMPI PUSH2 0x50 CALLVALUE PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x465 JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 GT PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP3 SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C TIMESTAMP PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x444 DUP2 PUSH2 0x432 JUMP JUMPDEST DUP2 EQ PUSH2 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x45F DUP2 PUSH2 0x43B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47A JUMPI PUSH2 0x479 PUSH2 0x42E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x487 DUP5 DUP3 DUP6 ADD PUSH2 0x451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B9 DUP3 PUSH2 0x490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0x4AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x50B PUSH2 0x506 PUSH2 0x501 DUP5 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51C DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x52D DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53D DUP2 PUSH2 0x523 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x556 PUSH0 DUP4 ADD DUP5 PUSH2 0x534 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A0 PUSH1 0xD DUP4 PUSH2 0x55C JUMP JUMPDEST SWAP2 POP PUSH2 0x5AB DUP3 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5CD DUP2 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x432 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH0 DUP4 ADD DUP6 PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x603 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x60A JUMP JUMPDEST DUP2 EQ PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x639 DUP2 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0x42E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x661 DUP5 DUP3 DUP6 ADD PUSH2 0x62B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6A1 DUP3 PUSH2 0x432 JUMP JUMPDEST SWAP2 POP PUSH2 0x6AC DUP4 PUSH2 0x432 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6C4 JUMPI PUSH2 0x6C3 PUSH2 0x66A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D3 DUP2 PUSH2 0x4AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F0 DUP2 PUSH2 0x6D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FF DUP2 PUSH2 0x432 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x70E DUP2 PUSH2 0x490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x729 PUSH0 DUP6 ADD DUP3 PUSH2 0x6CA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x73C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6CA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x74F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6E7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x762 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6CA JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x775 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6F6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x788 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6F6 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x79B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6F6 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7AE PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x705 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x7C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7DC DUP2 PUSH2 0x43B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0x42E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x804 DUP5 DUP3 DUP6 ADD PUSH2 0x7CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP12 DUP7 INVALID 0xFC 0xD0 EQ CALLDATACOPY DUP13 DUP15 0xC6 SDIV 0xCA 0xC4 0xD5 SSTORE SHR 0xE JUMPDEST 0xCE 0xC8 0xB1 SWAP11 0xE 0x29 PUSH25 0xB701DCF06B0D64736F6C634300081A00330000000000000000 ",
							"sourceMap": "393:1105:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:26;837:9;821:15;:26::i;:::-;393:1105;;;;;860:636;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;506:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;425:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;860:636;943:1;934:6;:10;926:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;538:42;972:21;;;1001:6;972:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:42;1029:21;;;1059:10;1072:6;1029:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1089:48;1140:303;;;;;;;;538:42;1140:303;;;;;;1227:5;1140:303;;;;;;1251:4;1140:303;;;;;;1280:10;1140:303;;;;;;1332:3;1314:15;:21;;;;:::i;:::-;1140:303;;;;1359:6;1140:303;;;;1397:1;1140:303;;;;1431:1;1140:303;;;;;1089:354;;1454:10;:27;;;1482:6;1454:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;916:580;860:636;:::o;506:74::-;538:42;506:74;:::o;425:39::-;;;:::o;470:30::-;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:60::-;1639:3;1660:5;1653:12;;1611:60;;;:::o;1677:142::-;1727:9;1760:53;1778:34;1787:24;1805:5;1787:24;:::i;:::-;1778:34;:::i;:::-;1760:53;:::i;:::-;1747:66;;1677:142;;;:::o;1825:126::-;1875:9;1908:37;1939:5;1908:37;:::i;:::-;1895:50;;1825:126;;;:::o;1957:145::-;2026:9;2059:37;2090:5;2059:37;:::i;:::-;2046:50;;1957:145;;;:::o;2108:169::-;2214:56;2264:5;2214:56;:::i;:::-;2209:3;2202:69;2108:169;;:::o;2283:260::-;2395:4;2433:2;2422:9;2418:18;2410:26;;2446:90;2533:1;2522:9;2518:17;2509:6;2446:90;:::i;:::-;2283:260;;;;:::o;2549:169::-;2633:11;2667:6;2662:3;2655:19;2707:4;2702:3;2698:14;2683:29;;2549:169;;;;:::o;2724:163::-;2864:15;2860:1;2852:6;2848:14;2841:39;2724:163;:::o;2893:366::-;3035:3;3056:67;3120:2;3115:3;3056:67;:::i;:::-;3049:74;;3132:93;3221:3;3132:93;:::i;:::-;3250:2;3245:3;3241:12;3234:19;;2893:366;;;:::o;3265:419::-;3431:4;3469:2;3458:9;3454:18;3446:26;;3518:9;3512:4;3508:20;3504:1;3493:9;3489:17;3482:47;3546:131;3672:4;3546:131;:::i;:::-;3538:139;;3265:419;;;:::o;3690:118::-;3777:24;3795:5;3777:24;:::i;:::-;3772:3;3765:37;3690:118;;:::o;3814:332::-;3935:4;3973:2;3962:9;3958:18;3950:26;;3986:71;4054:1;4043:9;4039:17;4030:6;3986:71;:::i;:::-;4067:72;4135:2;4124:9;4120:18;4111:6;4067:72;:::i;:::-;3814:332;;;;;:::o;4152:90::-;4186:7;4229:5;4222:13;4215:21;4204:32;;4152:90;;;:::o;4248:116::-;4318:21;4333:5;4318:21;:::i;:::-;4311:5;4308:32;4298:60;;4354:1;4351;4344:12;4298:60;4248:116;:::o;4370:137::-;4424:5;4455:6;4449:13;4440:22;;4471:30;4495:5;4471:30;:::i;:::-;4370:137;;;;:::o;4513:345::-;4580:6;4629:2;4617:9;4608:7;4604:23;4600:32;4597:119;;;4635:79;;:::i;:::-;4597:119;4755:1;4780:61;4833:7;4824:6;4813:9;4809:22;4780:61;:::i;:::-;4770:71;;4726:125;4513:345;;;;:::o;4864:180::-;4912:77;4909:1;4902:88;5009:4;5006:1;4999:15;5033:4;5030:1;5023:15;5050:191;5090:3;5109:20;5127:1;5109:20;:::i;:::-;5104:25;;5143:20;5161:1;5143:20;:::i;:::-;5138:25;;5186:1;5183;5179:9;5172:16;;5207:3;5204:1;5201:10;5198:36;;;5214:18;;:::i;:::-;5198:36;5050:191;;;;:::o;5247:108::-;5324:24;5342:5;5324:24;:::i;:::-;5319:3;5312:37;5247:108;;:::o;5361:91::-;5397:7;5437:8;5430:5;5426:20;5415:31;;5361:91;;;:::o;5458:105::-;5533:23;5550:5;5533:23;:::i;:::-;5528:3;5521:36;5458:105;;:::o;5569:108::-;5646:24;5664:5;5646:24;:::i;:::-;5641:3;5634:37;5569:108;;:::o;5683:::-;5760:24;5778:5;5760:24;:::i;:::-;5755:3;5748:37;5683:108;;:::o;5891:1621::-;6064:6;6059:3;6055:16;6156:4;6149:5;6145:16;6139:23;6175:63;6232:4;6227:3;6223:14;6209:12;6175:63;:::i;:::-;6081:167;6334:4;6327:5;6323:16;6317:23;6353:63;6410:4;6405:3;6401:14;6387:12;6353:63;:::i;:::-;6258:168;6507:4;6500:5;6496:16;6490:23;6526:61;6581:4;6576:3;6572:14;6558:12;6526:61;:::i;:::-;6436:161;6684:4;6677:5;6673:16;6667:23;6703:63;6760:4;6755:3;6751:14;6737:12;6703:63;:::i;:::-;6607:169;6862:4;6855:5;6851:16;6845:23;6881:63;6938:4;6933:3;6929:14;6915:12;6881:63;:::i;:::-;6786:168;7040:4;7033:5;7029:16;7023:23;7059:63;7116:4;7111:3;7107:14;7093:12;7059:63;:::i;:::-;6964:168;7226:4;7219:5;7215:16;7209:23;7245:63;7302:4;7297:3;7293:14;7279:12;7245:63;:::i;:::-;7142:176;7413:4;7406:5;7402:16;7396:23;7432:63;7489:4;7484:3;7480:14;7466:12;7432:63;:::i;:::-;7328:177;6033:1479;5891:1621;;:::o;7518:375::-;7687:4;7725:3;7714:9;7710:19;7702:27;;7739:147;7883:1;7872:9;7868:17;7859:6;7739:147;:::i;:::-;7518:375;;;;:::o;7899:143::-;7956:5;7987:6;7981:13;7972:22;;8003:33;8030:5;8003:33;:::i;:::-;7899:143;;;;:::o;8048:351::-;8118:6;8167:2;8155:9;8146:7;8142:23;8138:32;8135:119;;;8173:79;;:::i;:::-;8135:119;8293:1;8318:64;8374:7;8365:6;8354:9;8350:22;8318:64;:::i;:::-;8308:74;;8264:128;8048:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "423000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "373",
								"swapETHForToken(uint256)": "infinite",
								"swapRouter()": "infinite",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 778,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 778,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 778,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 587,
									"end": 778,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 587,
									"end": 778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 587,
									"end": 778,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 587,
									"end": 778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 587,
									"end": 778,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 650,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "94CC0AAC535CCDB3C01D6787D6413C739AE12BC4"
								},
								{
									"begin": 625,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 625,
									"end": 693,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 625,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 625,
									"end": 693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 625,
									"end": 693,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 625,
									"end": 693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 693,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 693,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 625,
									"end": 693,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 765,
									"end": 771,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 757,
									"end": 771,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 757,
									"end": 771,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 757,
									"end": 771,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 757,
									"end": 771,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 757,
									"end": 771,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 757,
									"end": 771,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 757,
									"end": 771,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 757,
									"end": 771,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 757,
									"end": 771,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 757,
									"end": 771,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 587,
									"end": 778,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "148"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 1498,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f8b86fefcd014378c8ec605cac4d5551c0e5bcec8b19a0e2978b701dcf06b0d64736f6c634300081a0033",
									".code": [
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "1B3D2CB3"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "4AA4A4FC"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "C31C9C07"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "FC0C546A"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 821,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 821,
											"end": 847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 821,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 1498,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 860,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 860,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 506,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 506,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 425,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 425,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 470,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 470,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 943,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 940,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 944,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 926,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 926,
											"end": 962,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 926,
											"end": 962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 972,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 972,
											"end": 993,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 972,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 1001,
											"end": 1007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 538,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 1029,
											"end": 1050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1029,
											"end": 1050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1050,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1059,
											"end": 1069,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1029,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 538,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1232,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1314,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "PUSH",
											"source": 2,
											"value": "414BF389"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1454,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 916,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 1496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 506,
											"end": 580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 506,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 425,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1787,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1760,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1908,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2102,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1957,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2059,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2059,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2264,
											"end": 2269,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2214,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2270,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2214,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2271,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2283,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2533,
											"end": 2534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2446,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2536,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2446,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2718,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2549,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2705,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2718,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2887,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2724,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "4D7573742073656E642045544800000000000000000000000000000000000000"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 3259,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2893,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3120,
											"end": 3122,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 3115,
											"end": 3118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3056,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3123,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3056,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3123,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3221,
											"end": 3224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3132,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3225,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3132,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3252,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 3259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 3259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 3259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3684,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3265,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3435,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3672,
											"end": 3676,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3546,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3677,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3546,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3808,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3690,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3795,
											"end": 3800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3777,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3801,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3777,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 4146,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3814,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 3939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4052,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4036,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3986,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4057,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3986,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4067,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 4146,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 4146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 4146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 4146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 4146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4242,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4152,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4235,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4215,
											"end": 4236,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4248,
											"end": 4364,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4248,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4333,
											"end": 4338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4318,
											"end": 4339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4339,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4318,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4340,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4298,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4298,
											"end": 4358,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4344,
											"end": 4356,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4298,
											"end": 4358,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4298,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4248,
											"end": 4364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4248,
											"end": 4364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4370,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4449,
											"end": 4462,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4440,
											"end": 4462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4440,
											"end": 4462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4471,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4471,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4471,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4471,
											"end": 4501,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4471,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4507,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4858,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4513,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 4615,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4627,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4716,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4597,
											"end": 4716,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4635,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4635,
											"end": 4714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4714,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4635,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4716,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4597,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4755,
											"end": 4756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4824,
											"end": 4830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4822,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4780,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4841,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4780,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4858,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 5044,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4864,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4912,
											"end": 4989,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4990,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4999,
											"end": 5014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5037,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5241,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5050,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5109,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5109,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5129,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5143,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5163,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5179,
											"end": 5188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5210,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5211,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 5214,
											"end": 5232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5241,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5355,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5247,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5324,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5342,
											"end": 5347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5324,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5324,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5324,
											"end": 5348,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5324,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5319,
											"end": 5322,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5349,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5452,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5361,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5445,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 5430,
											"end": 5435,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5446,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5458,
											"end": 5563,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5458,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5550,
											"end": 5555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5533,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5458,
											"end": 5563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5458,
											"end": 5563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5458,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5677,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5569,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5664,
											"end": 5669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5646,
											"end": 5670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5670,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5646,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5634,
											"end": 5671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5791,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5683,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5778,
											"end": 5783,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5760,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5891,
											"end": 7512,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5891,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6064,
											"end": 6070,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6059,
											"end": 6062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6055,
											"end": 6071,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6162,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6230,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6221,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6175,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6338,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6327,
											"end": 6332,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6323,
											"end": 6339,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6410,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6405,
											"end": 6408,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6401,
											"end": 6415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6353,
											"end": 6416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6500,
											"end": 6505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6526,
											"end": 6587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6587,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6526,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6677,
											"end": 6682,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6760,
											"end": 6764,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6755,
											"end": 6758,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6751,
											"end": 6765,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6703,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6766,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6703,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 6866,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6855,
											"end": 6860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6851,
											"end": 6867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6845,
											"end": 6868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6938,
											"end": 6942,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6933,
											"end": 6936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6881,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 6944,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6881,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6786,
											"end": 6954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7040,
											"end": 7044,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 7033,
											"end": 7038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7045,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7046,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7116,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7093,
											"end": 7105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7059,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7122,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7059,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6964,
											"end": 7132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7219,
											"end": 7224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7231,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 7302,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7297,
											"end": 7300,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7245,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7417,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7406,
											"end": 7411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7484,
											"end": 7487,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7480,
											"end": 7494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7432,
											"end": 7495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7495,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 7432,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6033,
											"end": 7512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5891,
											"end": 7512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5891,
											"end": 7512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5891,
											"end": 7512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7893,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 7518,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7687,
											"end": 7691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7728,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7714,
											"end": 7723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7710,
											"end": 7729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7702,
											"end": 7729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7702,
											"end": 7729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 7883,
											"end": 7884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7881,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7865,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7739,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7886,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 7739,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7893,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7893,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 8042,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7899,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7956,
											"end": 7961,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7981,
											"end": 7994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7972,
											"end": 7994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7972,
											"end": 7994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8003,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8030,
											"end": 8035,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8003,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 8003,
											"end": 8036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8003,
											"end": 8036,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8003,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 8042,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 8042,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 8042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 8042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 8042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8399,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 8048,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8118,
											"end": 8124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8167,
											"end": 8169,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8155,
											"end": 8164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8153,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8142,
											"end": 8165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8138,
											"end": 8170,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 8173,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8374,
											"end": 8381,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8354,
											"end": 8363,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8350,
											"end": 8372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8318,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 8318,
											"end": 8382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8318,
											"end": 8382,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8318,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8308,
											"end": 8382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8308,
											"end": 8382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8264,
											"end": 8392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8399,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/build_bounty/prototype/auto_swap_build.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"swapETHForToken(uint256)": "1b3d2cb3",
							"swapRouter()": "c31c9c07",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapETHForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/build_bounty/prototype/auto_swap_build.sol\":\"AutoSwapDonation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/build_bounty/prototype/auto_swap_build.sol\":{\"keccak256\":\"0x2d9c42daac295c984bacd57d401cc5a4a921d90baa9b46fc9910bce88efb3c7c\",\"urls\":[\"bzz-raw://b9bd1808b52f69b7f8d307c794f2f7d85b136703ed8e43958602aa04dd354a88\",\"dweb:/ipfs/QmfMGQoBmmyafZs7iVbAjTZRt9jvLLer2a5j55jQrHZ7B2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWETH9": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/build_bounty/prototype/auto_swap_build.sol\":\"IWETH9\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/build_bounty/prototype/auto_swap_build.sol\":{\"keccak256\":\"0x2d9c42daac295c984bacd57d401cc5a4a921d90baa9b46fc9910bce88efb3c7c\",\"urls\":[\"bzz-raw://b9bd1808b52f69b7f8d307c794f2f7d85b136703ed8e43958602aa04dd354a88\",\"dweb:/ipfs/QmfMGQoBmmyafZs7iVbAjTZRt9jvLLer2a5j55jQrHZ7B2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/build_bounty/prototype/auto_swap_build.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 14,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1197:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1226:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 13,
									"src": "1157:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "215:1077:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:0"
				},
				"id": 0
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 114,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 16,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 114,
							"sourceUnit": 14,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "305:22:1"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:1"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113,
								13
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "374:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "399:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "425:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 25,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "445:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "472:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "498:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "524:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "558:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 35,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "334:256:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "877:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 40,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 39,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 37,
														"src": "877:22:1"
													},
													"referencedDeclaration": 37,
													"src": "877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:1"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "943:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:1"
									},
									"scope": 113,
									"src": "851:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 57,
									"members": [
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1002:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 47,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1022:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 49,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1049:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 51,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1075:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 53,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1101:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 55,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "968:164:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1436:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$57_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 60,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 59,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 57,
														"src": "1436:16:1"
													},
													"referencedDeclaration": 57,
													"src": "1436:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$57_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1496:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:1"
									},
									"scope": 113,
									"src": "1416:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 83,
									"members": [
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1562:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 67,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1587:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 69,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1613:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 71,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1633:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 73,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1660:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1686:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1713:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 79,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1746:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 81,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "1521:257:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2066:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 86,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 85,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "2066:23:1"
													},
													"referencedDeclaration": 83,
													"src": "2066:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2133:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:1"
									},
									"scope": 113,
									"src": "2039:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 103,
									"members": [
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2192:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 93,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2212:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 95,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2239:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2265:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2292:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "2157:165:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2638:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$103_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 105,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 103,
														"src": "2638:17:1"
													},
													"referencedDeclaration": 103,
													"src": "2638:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$103_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2699:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:1"
									},
									"scope": 113,
									"src": "2617:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "280:2439:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:1"
				},
				"id": 1
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"ast": {
					"absolutePath": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"exportedSymbols": {
						"AutoSwapDonation": [
							236
						],
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						],
						"IWETH9": [
							143
						]
					},
					"id": 237,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 237,
							"sourceUnit": 114,
							"src": "58:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "IWETH9",
							"nameLocation": "138:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "160:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:2"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:2"
									},
									"scope": 143,
									"src": "151:36:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "201:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "210:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:9:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:0:2"
									},
									"scope": 143,
									"src": "192:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "242:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "258:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "250:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "275:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "267:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "249:33:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "301:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:6:2"
									},
									"scope": 143,
									"src": "233:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "321:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "338:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "330:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "357:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "349:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:35:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "383:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:6:2"
									},
									"scope": 143,
									"src": "312:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 237,
							"src": "128:263:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutoSwapDonation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 236,
							"linearizedBaseContracts": [
								236
							],
							"name": "AutoSwapDonation",
							"nameLocation": "402:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 146,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "454:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "425:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$113",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 145,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 144,
											"name": "ISwapRouter",
											"nameLocations": [
												"425:11:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 113,
											"src": "425:11:2"
										},
										"referencedDeclaration": 113,
										"src": "425:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$113",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 148,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "495:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "470:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 147,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4aa4a4fc",
									"id": 151,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "530:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "506:74:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 149,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "506:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
										"id": 150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "538:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4200000000000000000000000000000000000006"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "615:163:2",
										"statements": [
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 156,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "625:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$113",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307839346343304161433533354343444233433031643637383744363431334337333961653132626334",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "650:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 157,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "638:55:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$113",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "625:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$113",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "625:68:2"
											},
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 162,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "757:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 163,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "765:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "757:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "757:14:2"
											}
										]
									},
									"id": 167,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "607:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "599:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:16:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:0:2"
									},
									"scope": 236,
									"src": "587:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "811:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "837:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "841:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "837:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 170,
														"name": "swapETHForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "821:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "821:26:2"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:2:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:2"
									},
									"scope": 236,
									"src": "784:70:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "916:580:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "934:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "943:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "934:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e6420455448",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "946:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																"typeString": "literal_string \"Must send ETH\""
															},
															"value": "Must send ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																"typeString": "literal_string \"Must send ETH\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "926:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "926:36:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 189,
																		"name": "WETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "979:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 188,
																	"name": "IWETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "972:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH9_$143_$",
																		"typeString": "type(contract IWETH9)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "972:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH9_$143",
																	"typeString": "contract IWETH9"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "986:7:2",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "972:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1001:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "972:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "972:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 202,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1059:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 200,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1051:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 197,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "1036:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 196,
																"name": "IWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1029:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH9_$143_$",
																	"typeString": "type(contract IWETH9)"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1029:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$143",
																"typeString": "contract IWETH9"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1043:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "1029:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1029:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1029:50:2"
											},
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1131:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 234,
														"src": "1089:48:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 210,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 209,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1089:11:2",
																	"1101:22:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 37,
																"src": "1089:34:2"
															},
															"referencedDeclaration": 37,
															"src": "1089:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"id": 214,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1198:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1227:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"expression": {
																"id": 217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1280:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1284:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1280:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 219,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1314:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1320:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1314:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333030",
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1332:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "1314:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 223,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1359:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1397:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1431:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 212,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1140:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1152:22:2",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "1140:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$37_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1189:7:2",
														"1217:8:2",
														"1246:3:2",
														"1269:9:2",
														"1304:8:2",
														"1349:8:2",
														"1379:16:2",
														"1412:17:2"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1140:303:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1089:354:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1482:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 228,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "1454:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$113",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1465:16:2",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "1454:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$37_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "1454:35:2"
											}
										]
									},
									"functionSelector": "1b3d2cb3",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForToken",
									"nameLocation": "869:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "893:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "885:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:16:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:2"
									},
									"scope": 236,
									"src": "860:636:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 237,
							"src": "393:1105:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1467:2"
				},
				"id": 2
			}
		}
	}
}