{
	"id": "38e15d9cf5403726f26c032c4b61adba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"content": "//SPDX-License-Identfier:UNLICENSED;\n/*\npragma solidity >=0.8.0;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\ncontract AutoSwapDonation{\n\n    ISwapRouter public immutable swapRouter;\n    address public immutable token;\n    address public constant WETH9 = 0x4200000000000000000000000000000000000006;\n    constructor( address _token) {\n        swapRouter = ISwapRouter(0x050E797f3625EC8785265e1d9BDd4799b97528A1);\n        token = _token;\n    }\n\n    receive() external payable {\n        swapETHForToken(msg.value);\n    }\n\n    function swapETHForToken(uint256 amount) internal {\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: WETH9,\n            tokenOut: token,\n            fee: 3000,\n            recipient: msg.sender,\n            deadline: block.timestamp + 300,\n            amountIn: amount,\n            amountOutMinimum: 0,\n            sqrtPriceLimitX96: 0\n        });\n\n        swapRouter.exactInputSingle{value: amount}(params);\n    }\n\n\n} */\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol\";\nimport \"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol\";\n\ncontract LiquidityContract{\n\n   \n    address public constant UNISWAP_V2_ROUTER =\n        0x050E797f3625EC8785265e1d9BDd4799b97528A1;\n\n    address public constant UNISWAP_V2_FACTORY = 0x9fBFa493EC98694256D171171487B9D47D849Ba9;\n\n    error MustSendETH();\n    error MustSpecifyTokenAmount();\n\n    address public memeToken = 0x0a0E0FccC2c799845214E8E5583E44479EC02a23;\n    address public pair;\n    address public weth;\n    IUniswapV2Router public uniswapRouter;\n\n    constructor(address _token) {\n        // deploy the meme token\n        memeToken = _token;\n        uniswapRouter = IUniswapV2Router(UNISWAP_V2_ROUTER);\n\n        weth = uniswapRouter.WETH();\n\n        IERC20(memeToken).approve(UNISWAP_V2_ROUTER, type(uint256).max);\n\n        pair = IUniswapV2Factory(UNISWAP_V2_FACTORY).createPair(memeToken, weth);\n    }\n\n    // Swap ETH for Meme Token\n    function swapETHForMeme() external payable {\n        if (msg.value <= 0) revert MustSendETH();\n\n        address[] memory path;\n        path = new address[](2);\n\n        path[0] = weth; // ModeETH address\n        path[1] = memeToken; // Meme token address\n\n        uniswapRouter.swapExactETHForTokens{value: msg.value}(\n            0,\n            path,\n            msg.sender, // Send Meme tokens to the user\n            block.timestamp + 360\n        );\n    }\n\n    function getTokenAddress() external view returns (address) {\n        return memeToken;\n    }\n\n    // Swap Meme Token for ETH\n    function swapMemeForETH(\n        uint256 amountIn\n    ) external {\n        if (amountIn <= 0) revert MustSpecifyTokenAmount();\n\n        address[] memory path;\n        path = new address[](2);\n\n        path[0] = memeToken; // Meme token address\n        path[1] = weth; // WETH address\n\n        // Transfer Meme tokens from user to this contract\n        IERC20(memeToken).transferFrom(msg.sender, address(this), amountIn);\n\n        // Perform the swap\n        uniswapRouter.swapExactTokensForETH(\n            amountIn,\n            0,\n            path,\n            msg.sender, // Send ETH to the user\n            block.timestamp + 360\n        );\n    }\n\n    // Add liquidity to the Meme Token and ETH pool\n    function addLiquidityETH(\n        uint256 amountTokenDesired\n    ) external payable {\n        if (msg.value <= 0) revert MustSendETH();\n\n        if (amountTokenDesired <= 0) revert MustSpecifyTokenAmount();\n\n        // Transfer Meme tokens from user to this contract\n        IERC20(memeToken).transferFrom(msg.sender, address(this), amountTokenDesired);\n\n        // Add liquidity\n        uniswapRouter.addLiquidityETH{value: msg.value}(\n            memeToken,\n            amountTokenDesired,\n            0,\n            0,\n            msg.sender, // LP tokens sent to the user\n            block.timestamp + 360\n        );\n    }\n\n    // Receive function to accept ETH\n    receive() external payable {}\n\n\n    /* error MustSendETH();\n    error MustSpecifyTokenAmount();\n    function AddLiquidity(uint256 amountTokenDesired) external payable {\n         if (msg.value <= 0) revert MustSendETH();\n\n        if (amountTokenDesired <= 0) revert MustSpecifyTokenAmount();\n\n        // Transfer Meme tokens from user to this contract\n        IERC20(memeToken).transferFrom(msg.sender, address(this), amountTokenDesired);\n\n        // Add liquidity\n        uniswapRouter.addLiquidityETH{value: msg.value}(\n            memeToken,\n            amountTokenDesired,\n            0,\n            0,\n            msg.sender, // LP tokens sent to the user\n            block.timestamp + 360\n        );\n    } */\n}"
			},
			"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(\n      address indexed token0,\n      address indexed token1,\n      address pair,\n      uint\n    );\n\n    function getPair(\n      address tokenA,\n      address tokenB\n    ) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) external returns (address pair);\n}\n"
			},
			"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\ninterface IUniswapV2Router {\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 dealine\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function getAmountsOut(\n        uint256 amountIn,\n        address[] calldata path\n    ) external view returns (uint256[] memory amounts);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\n\n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\n\n    function WETH() external view returns (address wethAddress);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"LiquidityContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "MustSendETH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MustSpecifyTokenAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UNISWAP_V2_FACTORY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNISWAP_V2_ROUTER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "memeToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapETHForMeme",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapMemeForETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1391:4927  contract LiquidityContract{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1712:1754  0x0a0E0FccC2c799845214E8E5583E44479EC02a23 */\n  0x0a0e0fccc2c799845214e8e5583e44479ec02a23\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1685:1754  address public memeToken = 0x0a0E0FccC2c799845214E8E5583E44479EC02a23 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1854:2206  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1937:1943  _token */\n  dup1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1925:1934  memeToken */\n  0x00\n  dup1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1925:1943  memeToken = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1480:1522  0x050E797f3625EC8785265e1d9BDd4799b97528A1 */\n  0x050e797f3625ec8785265e1d9bdd4799b97528a1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1953:1966  uniswapRouter */\n  0x03\n  0x00\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1953:2004  uniswapRouter = IUniswapV2Router(UNISWAP_V2_ROUTER) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2022:2035  uniswapRouter */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2022:2040  uniswapRouter.WETH */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xad5c4648\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2022:2042  uniswapRouter.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_8:\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2015:2019  weth */\n  0x02\n  0x00\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2015:2042  weth = uniswapRouter.WETH() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2060:2069  memeToken */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2053:2078  IERC20(memeToken).approve */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x095ea7b3\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1480:1522  0x050E797f3625EC8785265e1d9BDd4799b97528A1 */\n  0x050e797f3625ec8785265e1d9bdd4799b97528a1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2098:2115  type(uint256).max */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2053:2116  IERC20(memeToken).approve(UNISWAP_V2_ROUTER, type(uint256).max) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_12\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_12:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1574:1616  0x9fBFa493EC98694256D171171487B9D47D849Ba9 */\n  0x9fbfa493ec98694256d171171487b9d47d849ba9\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2134:2182  IUniswapV2Factory(UNISWAP_V2_FACTORY).createPair */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc9c65396\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2183:2192  memeToken */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2194:2198  weth */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2134:2199  IUniswapV2Factory(UNISWAP_V2_FACTORY).createPair(memeToken, weth) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap3\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_18\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_18:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_19:\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2127:2131  pair */\n  0x01\n  0x00\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2127:2199  pair = IUniswapV2Factory(UNISWAP_V2_FACTORY).createPair(memeToken, weth) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1854:2206  constructor(address _token) {... */\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1391:4927  contract LiquidityContract{... */\n  jump(tag_20)\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_40\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_42\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_43:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_45\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_48\n  tag_22\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":932:1051   */\ntag_47:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_49\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_27\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_28:\n    /* \"#utility.yul\":1289:1313   */\n  tag_51\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1403   */\ntag_29:\n    /* \"#utility.yul\":1363:1370   */\n  0x00\n    /* \"#utility.yul\":1392:1397   */\n  dup2\n    /* \"#utility.yul\":1381:1397   */\n  swap1\n  pop\n    /* \"#utility.yul\":1326:1403   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1527   */\ntag_30:\n    /* \"#utility.yul\":1496:1520   */\n  tag_54\n    /* \"#utility.yul\":1514:1519   */\n  dup2\n    /* \"#utility.yul\":1496:1520   */\n  tag_29\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1491:1494   */\n  dup3\n    /* \"#utility.yul\":1484:1521   */\n  mstore\n    /* \"#utility.yul\":1409:1527   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1865   */\ntag_10:\n    /* \"#utility.yul\":1654:1658   */\n  0x00\n    /* \"#utility.yul\":1692:1694   */\n  0x40\n    /* \"#utility.yul\":1681:1690   */\n  dup3\n    /* \"#utility.yul\":1677:1695   */\n  add\n    /* \"#utility.yul\":1669:1695   */\n  swap1\n  pop\n    /* \"#utility.yul\":1705:1776   */\n  tag_56\n    /* \"#utility.yul\":1773:1774   */\n  0x00\n    /* \"#utility.yul\":1762:1771   */\n  dup4\n    /* \"#utility.yul\":1758:1775   */\n  add\n    /* \"#utility.yul\":1749:1755   */\n  dup6\n    /* \"#utility.yul\":1705:1776   */\n  tag_28\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1786:1858   */\n  tag_57\n    /* \"#utility.yul\":1854:1856   */\n  0x20\n    /* \"#utility.yul\":1843:1852   */\n  dup4\n    /* \"#utility.yul\":1839:1857   */\n  add\n    /* \"#utility.yul\":1830:1836   */\n  dup5\n    /* \"#utility.yul\":1786:1858   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1533:1865   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1871:1961   */\ntag_31:\n    /* \"#utility.yul\":1905:1912   */\n  0x00\n    /* \"#utility.yul\":1948:1953   */\n  dup2\n    /* \"#utility.yul\":1941:1954   */\n  iszero\n    /* \"#utility.yul\":1934:1955   */\n  iszero\n    /* \"#utility.yul\":1923:1955   */\n  swap1\n  pop\n    /* \"#utility.yul\":1871:1961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1967:2083   */\ntag_32:\n    /* \"#utility.yul\":2037:2058   */\n  tag_60\n    /* \"#utility.yul\":2052:2057   */\n  dup2\n    /* \"#utility.yul\":2037:2058   */\n  tag_31\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2030:2035   */\n  dup2\n    /* \"#utility.yul\":2027:2059   */\n  eq\n    /* \"#utility.yul\":2017:2077   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2073:2074   */\n  0x00\n    /* \"#utility.yul\":2070:2071   */\n  dup1\n    /* \"#utility.yul\":2063:2075   */\n  revert\n    /* \"#utility.yul\":2017:2077   */\ntag_61:\n    /* \"#utility.yul\":1967:2083   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2089:2226   */\ntag_33:\n    /* \"#utility.yul\":2143:2148   */\n  0x00\n    /* \"#utility.yul\":2174:2180   */\n  dup2\n    /* \"#utility.yul\":2168:2181   */\n  mload\n    /* \"#utility.yul\":2159:2181   */\n  swap1\n  pop\n    /* \"#utility.yul\":2190:2220   */\n  tag_63\n    /* \"#utility.yul\":2214:2219   */\n  dup2\n    /* \"#utility.yul\":2190:2220   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2089:2226   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2232:2577   */\ntag_14:\n    /* \"#utility.yul\":2299:2305   */\n  0x00\n    /* \"#utility.yul\":2348:2350   */\n  0x20\n    /* \"#utility.yul\":2336:2345   */\n  dup3\n    /* \"#utility.yul\":2327:2334   */\n  dup5\n    /* \"#utility.yul\":2323:2346   */\n  sub\n    /* \"#utility.yul\":2319:2351   */\n  slt\n    /* \"#utility.yul\":2316:2435   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2354:2433   */\n  tag_66\n  tag_22\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2316:2435   */\ntag_65:\n    /* \"#utility.yul\":2474:2475   */\n  0x00\n    /* \"#utility.yul\":2499:2560   */\n  tag_67\n    /* \"#utility.yul\":2552:2559   */\n  dup5\n    /* \"#utility.yul\":2543:2549   */\n  dup3\n    /* \"#utility.yul\":2532:2541   */\n  dup6\n    /* \"#utility.yul\":2528:2550   */\n  add\n    /* \"#utility.yul\":2499:2560   */\n  tag_33\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2489:2560   */\n  swap2\n  pop\n    /* \"#utility.yul\":2445:2570   */\n  pop\n    /* \"#utility.yul\":2232:2577   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2583:2915   */\ntag_16:\n    /* \"#utility.yul\":2704:2708   */\n  0x00\n    /* \"#utility.yul\":2742:2744   */\n  0x40\n    /* \"#utility.yul\":2731:2740   */\n  dup3\n    /* \"#utility.yul\":2727:2745   */\n  add\n    /* \"#utility.yul\":2719:2745   */\n  swap1\n  pop\n    /* \"#utility.yul\":2755:2826   */\n  tag_69\n    /* \"#utility.yul\":2823:2824   */\n  0x00\n    /* \"#utility.yul\":2812:2821   */\n  dup4\n    /* \"#utility.yul\":2808:2825   */\n  add\n    /* \"#utility.yul\":2799:2805   */\n  dup6\n    /* \"#utility.yul\":2755:2826   */\n  tag_28\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2836:2908   */\n  tag_70\n    /* \"#utility.yul\":2904:2906   */\n  0x20\n    /* \"#utility.yul\":2893:2902   */\n  dup4\n    /* \"#utility.yul\":2889:2907   */\n  add\n    /* \"#utility.yul\":2880:2886   */\n  dup5\n    /* \"#utility.yul\":2836:2908   */\n  tag_28\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2583:2915   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1391:4927  contract LiquidityContract{... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1391:4927  contract LiquidityContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x97b3d8ca\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x97b3d8ca\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x99d8fae3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa82ed9ec\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa8aa1b31\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd06d04cc\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x10fe9ae8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3fc8cef3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x66dc34a7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x972598e7\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2707:2799  function getTokenAddress() external view returns (address) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1785:1804  address public weth */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2836:3484  function swapMemeForETH(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1810:1847  IUniswapV2Router public uniswapRouter */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1685:1754  address public memeToken = 0x0a0E0FccC2c799845214E8E5583E44479EC02a23 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2243:2701  function swapETHForMeme() external payable {... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1529:1616  address public constant UNISWAP_V2_FACTORY = 0x9fBFa493EC98694256D171171487B9D47D849Ba9 */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1428:1522  address public constant UNISWAP_V2_ROUTER =... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1760:1779  address public pair */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3542:4168  function addLiquidityETH(... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2707:2799  function getTokenAddress() external view returns (address) {... */\n    tag_18:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2757:2764  address */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2783:2792  memeToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2776:2792  return memeToken */\n      swap1\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2707:2799  function getTokenAddress() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1785:1804  address public weth */\n    tag_23:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2836:3484  function swapMemeForETH(... */\n    tag_29:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2927:2928  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2915:2923  amountIn */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2915:2928  amountIn <= 0 */\n      gt\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2911:2961  if (amountIn <= 0) revert MustSpecifyTokenAmount() */\n      tag_58\n      jumpi\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2937:2961  MustSpecifyTokenAmount() */\n      mload(0x40)\n      0xd8767d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2911:2961  if (amountIn <= 0) revert MustSpecifyTokenAmount() */\n    tag_58:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2972:2993  address[] memory path */\n      0x60\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3024:3025  2 */\n      0x02\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3010:3026  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_59\n      jumpi\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n    tag_59:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_62:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3003:3026  path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3047:3056  memeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3037:3041  path */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3042:3043  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3037:3044  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_63\n      jumpi\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n    tag_63:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3037:3056  path[0] = memeToken */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3098:3102  weth */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3088:3092  path */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3093:3094  1 */\n      0x01\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3088:3095  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_66\n      jumpi\n      tag_67\n      tag_65\n      jump\t// in\n    tag_67:\n    tag_66:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3088:3102  path[1] = weth */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3195:3204  memeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3188:3218  IERC20(memeToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3219:3229  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3239:3243  this */\n      address\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3246:3254  amountIn */\n      dup6\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3188:3255  IERC20(memeToken).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3294:3307  uniswapRouter */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3294:3329  uniswapRouter.swapExactTokensForETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18cbafe5\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3343:3351  amountIn */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3365:3366  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3380:3384  path */\n      dup5\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3398:3408  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3464:3467  360 */\n      0x0168\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3446:3461  block.timestamp */\n      timestamp\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3446:3467  block.timestamp + 360 */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3294:3477  uniswapRouter.swapExactTokensForETH(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2901:3484  {... */\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2836:3484  function swapMemeForETH(... */\n      pop\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1810:1847  IUniswapV2Router public uniswapRouter */\n    tag_32:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1685:1754  address public memeToken = 0x0a0E0FccC2c799845214E8E5583E44479EC02a23 */\n    tag_37:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2243:2701  function swapETHForMeme() external payable {... */\n    tag_40:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2313:2314  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2300:2309  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2300:2314  msg.value <= 0 */\n      gt\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2296:2336  if (msg.value <= 0) revert MustSendETH() */\n      tag_83\n      jumpi\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2323:2336  MustSendETH() */\n      mload(0x40)\n      0xd73ab2e100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2296:2336  if (msg.value <= 0) revert MustSendETH() */\n    tag_83:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2347:2368  address[] memory path */\n      0x60\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2399:2400  2 */\n      0x02\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2385:2401  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_61\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_86:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2378:2401  path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2422:2426  weth */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2412:2416  path */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2417:2418  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2412:2419  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_87\n      jumpi\n      tag_88\n      tag_65\n      jump\t// in\n    tag_88:\n    tag_87:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2412:2426  path[0] = weth */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2465:2474  memeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2455:2459  path */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2460:2461  1 */\n      0x01\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2455:2462  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_89\n      jumpi\n      tag_90\n      tag_65\n      jump\t// in\n    tag_90:\n    tag_89:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2455:2474  path[1] = memeToken */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2507:2520  uniswapRouter */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2507:2542  uniswapRouter.swapExactETHForTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7ff36ab5\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2550:2559  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2574:2575  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2589:2593  path */\n      dup5\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2607:2617  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2681:2684  360 */\n      0x0168\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2663:2678  block.timestamp */\n      timestamp\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2663:2684  block.timestamp + 360 */\n      tag_91\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_91:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2507:2694  uniswapRouter.swapExactETHForTokens{value: msg.value}(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_96:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2286:2701  {... */\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2243:2701  function swapETHForMeme() external payable {... */\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1529:1616  address public constant UNISWAP_V2_FACTORY = 0x9fBFa493EC98694256D171171487B9D47D849Ba9 */\n    tag_43:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1574:1616  0x9fBFa493EC98694256D171171487B9D47D849Ba9 */\n      0x9fbfa493ec98694256d171171487b9d47d849ba9\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1529:1616  address public constant UNISWAP_V2_FACTORY = 0x9fBFa493EC98694256D171171487B9D47D849Ba9 */\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1428:1522  address public constant UNISWAP_V2_ROUTER =... */\n    tag_47:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1480:1522  0x050E797f3625EC8785265e1d9BDd4799b97528A1 */\n      0x050e797f3625ec8785265e1d9bdd4799b97528a1\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1428:1522  address public constant UNISWAP_V2_ROUTER =... */\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1760:1779  address public pair */\n    tag_51:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3542:4168  function addLiquidityETH(... */\n    tag_55:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3653:3654  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3640:3649  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3640:3654  msg.value <= 0 */\n      gt\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3636:3676  if (msg.value <= 0) revert MustSendETH() */\n      tag_98\n      jumpi\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3663:3676  MustSendETH() */\n      mload(0x40)\n      0xd73ab2e100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3636:3676  if (msg.value <= 0) revert MustSendETH() */\n    tag_98:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3713:3714  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3691:3709  amountTokenDesired */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3691:3714  amountTokenDesired <= 0 */\n      gt\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3687:3747  if (amountTokenDesired <= 0) revert MustSpecifyTokenAmount() */\n      tag_99\n      jumpi\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3723:3747  MustSpecifyTokenAmount() */\n      mload(0x40)\n      0xd8767d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3687:3747  if (amountTokenDesired <= 0) revert MustSpecifyTokenAmount() */\n    tag_99:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3824:3833  memeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3817:3847  IERC20(memeToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3848:3858  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3868:3872  this */\n      address\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3875:3893  amountTokenDesired */\n      dup5\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3817:3894  IERC20(memeToken).transferFrom(msg.sender, address(this), amountTokenDesired) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_103:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3930:3943  uniswapRouter */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3930:3959  uniswapRouter.addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3967:3976  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3991:4000  memeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":4014:4032  amountTokenDesired */\n      dup5\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":4046:4047  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":4061:4062  0 */\n      dup1\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":4076:4086  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":4148:4151  360 */\n      0x0168\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":4130:4145  block.timestamp */\n      timestamp\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":4130:4151  block.timestamp + 360 */\n      tag_104\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_104:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3930:4161  uniswapRouter.addLiquidityETH{value: msg.value}(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      pop\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":3542:4168  function addLiquidityETH(... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_111:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_112:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_152\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_111\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_113:\n        /* \"#utility.yul\":328:352   */\n      tag_154\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_112\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_20:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_156\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_113\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:668   */\n    tag_114:\n        /* \"#utility.yul\":626:632   */\n      0x00\n        /* \"#utility.yul\":659:661   */\n      0x40\n        /* \"#utility.yul\":653:662   */\n      mload\n        /* \"#utility.yul\":643:662   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:668   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_115:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":797:914   */\n    tag_116:\n        /* \"#utility.yul\":906:907   */\n      0x00\n        /* \"#utility.yul\":903:904   */\n      dup1\n        /* \"#utility.yul\":896:908   */\n      revert\n        /* \"#utility.yul\":920:997   */\n    tag_117:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":975:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_118:\n        /* \"#utility.yul\":1076:1100   */\n      tag_162\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_117\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_163:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_119:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_165\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_118\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_28:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_168\n      tag_115\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1352:1471   */\n    tag_167:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_169\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_119\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1671   */\n    tag_120:\n        /* \"#utility.yul\":1639:1642   */\n      0x00\n        /* \"#utility.yul\":1660:1665   */\n      dup2\n        /* \"#utility.yul\":1653:1665   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1819   */\n    tag_121:\n        /* \"#utility.yul\":1727:1736   */\n      0x00\n        /* \"#utility.yul\":1760:1813   */\n      tag_172\n        /* \"#utility.yul\":1778:1812   */\n      tag_173\n        /* \"#utility.yul\":1787:1811   */\n      tag_174\n        /* \"#utility.yul\":1805:1810   */\n      dup5\n        /* \"#utility.yul\":1787:1811   */\n      tag_111\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1778:1812   */\n      tag_120\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1760:1813   */\n      tag_111\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1747:1813   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:1951   */\n    tag_122:\n        /* \"#utility.yul\":1875:1884   */\n      0x00\n        /* \"#utility.yul\":1908:1945   */\n      tag_176\n        /* \"#utility.yul\":1939:1944   */\n      dup3\n        /* \"#utility.yul\":1908:1945   */\n      tag_121\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1895:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1825:1951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2108   */\n    tag_123:\n        /* \"#utility.yul\":2032:2041   */\n      0x00\n        /* \"#utility.yul\":2065:2102   */\n      tag_178\n        /* \"#utility.yul\":2096:2101   */\n      dup3\n        /* \"#utility.yul\":2065:2102   */\n      tag_122\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2052:2102   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2114:2295   */\n    tag_124:\n        /* \"#utility.yul\":2226:2288   */\n      tag_180\n        /* \"#utility.yul\":2282:2287   */\n      dup2\n        /* \"#utility.yul\":2226:2288   */\n      tag_123\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2221:2224   */\n      dup3\n        /* \"#utility.yul\":2214:2289   */\n      mstore\n        /* \"#utility.yul\":2114:2295   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2573   */\n    tag_34:\n        /* \"#utility.yul\":2419:2423   */\n      0x00\n        /* \"#utility.yul\":2457:2459   */\n      0x20\n        /* \"#utility.yul\":2446:2455   */\n      dup3\n        /* \"#utility.yul\":2442:2460   */\n      add\n        /* \"#utility.yul\":2434:2460   */\n      swap1\n      pop\n        /* \"#utility.yul\":2470:2566   */\n      tag_182\n        /* \"#utility.yul\":2563:2564   */\n      0x00\n        /* \"#utility.yul\":2552:2561   */\n      dup4\n        /* \"#utility.yul\":2548:2565   */\n      add\n        /* \"#utility.yul\":2539:2545   */\n      dup5\n        /* \"#utility.yul\":2470:2566   */\n      tag_124\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2301:2573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2759   */\n    tag_61:\n        /* \"#utility.yul\":2627:2704   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2624:2625   */\n      0x00\n        /* \"#utility.yul\":2617:2705   */\n      mstore\n        /* \"#utility.yul\":2724:2728   */\n      0x41\n        /* \"#utility.yul\":2721:2722   */\n      0x04\n        /* \"#utility.yul\":2714:2729   */\n      mstore\n        /* \"#utility.yul\":2748:2752   */\n      0x24\n        /* \"#utility.yul\":2745:2746   */\n      0x00\n        /* \"#utility.yul\":2738:2753   */\n      revert\n        /* \"#utility.yul\":2765:2945   */\n    tag_65:\n        /* \"#utility.yul\":2813:2890   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2891   */\n      mstore\n        /* \"#utility.yul\":2910:2914   */\n      0x32\n        /* \"#utility.yul\":2907:2908   */\n      0x04\n        /* \"#utility.yul\":2900:2915   */\n      mstore\n        /* \"#utility.yul\":2934:2938   */\n      0x24\n        /* \"#utility.yul\":2931:2932   */\n      0x00\n        /* \"#utility.yul\":2924:2939   */\n      revert\n        /* \"#utility.yul\":2951:3069   */\n    tag_125:\n        /* \"#utility.yul\":3038:3062   */\n      tag_186\n        /* \"#utility.yul\":3056:3061   */\n      dup2\n        /* \"#utility.yul\":3038:3062   */\n      tag_117\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3033:3036   */\n      dup3\n        /* \"#utility.yul\":3026:3063   */\n      mstore\n        /* \"#utility.yul\":2951:3069   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3075:3517   */\n    tag_69:\n        /* \"#utility.yul\":3224:3228   */\n      0x00\n        /* \"#utility.yul\":3262:3264   */\n      0x60\n        /* \"#utility.yul\":3251:3260   */\n      dup3\n        /* \"#utility.yul\":3247:3265   */\n      add\n        /* \"#utility.yul\":3239:3265   */\n      swap1\n      pop\n        /* \"#utility.yul\":3275:3346   */\n      tag_188\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3332:3341   */\n      dup4\n        /* \"#utility.yul\":3328:3345   */\n      add\n        /* \"#utility.yul\":3319:3325   */\n      dup7\n        /* \"#utility.yul\":3275:3346   */\n      tag_113\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3356:3428   */\n      tag_189\n        /* \"#utility.yul\":3424:3426   */\n      0x20\n        /* \"#utility.yul\":3413:3422   */\n      dup4\n        /* \"#utility.yul\":3409:3427   */\n      add\n        /* \"#utility.yul\":3400:3406   */\n      dup6\n        /* \"#utility.yul\":3356:3428   */\n      tag_113\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3438:3510   */\n      tag_190\n        /* \"#utility.yul\":3506:3508   */\n      0x40\n        /* \"#utility.yul\":3495:3504   */\n      dup4\n        /* \"#utility.yul\":3491:3509   */\n      add\n        /* \"#utility.yul\":3482:3488   */\n      dup5\n        /* \"#utility.yul\":3438:3510   */\n      tag_125\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3075:3517   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3523:3613   */\n    tag_126:\n        /* \"#utility.yul\":3557:3564   */\n      0x00\n        /* \"#utility.yul\":3600:3605   */\n      dup2\n        /* \"#utility.yul\":3593:3606   */\n      iszero\n        /* \"#utility.yul\":3586:3607   */\n      iszero\n        /* \"#utility.yul\":3575:3607   */\n      swap1\n      pop\n        /* \"#utility.yul\":3523:3613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3619:3735   */\n    tag_127:\n        /* \"#utility.yul\":3689:3710   */\n      tag_193\n        /* \"#utility.yul\":3704:3709   */\n      dup2\n        /* \"#utility.yul\":3689:3710   */\n      tag_126\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3682:3687   */\n      dup2\n        /* \"#utility.yul\":3679:3711   */\n      eq\n        /* \"#utility.yul\":3669:3729   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":3725:3726   */\n      0x00\n        /* \"#utility.yul\":3722:3723   */\n      dup1\n        /* \"#utility.yul\":3715:3727   */\n      revert\n        /* \"#utility.yul\":3669:3729   */\n    tag_194:\n        /* \"#utility.yul\":3619:3735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3741:3878   */\n    tag_128:\n        /* \"#utility.yul\":3795:3800   */\n      0x00\n        /* \"#utility.yul\":3826:3832   */\n      dup2\n        /* \"#utility.yul\":3820:3833   */\n      mload\n        /* \"#utility.yul\":3811:3833   */\n      swap1\n      pop\n        /* \"#utility.yul\":3842:3872   */\n      tag_196\n        /* \"#utility.yul\":3866:3871   */\n      dup2\n        /* \"#utility.yul\":3842:3872   */\n      tag_127\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3741:3878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3884:4229   */\n    tag_73:\n        /* \"#utility.yul\":3951:3957   */\n      0x00\n        /* \"#utility.yul\":4000:4002   */\n      0x20\n        /* \"#utility.yul\":3988:3997   */\n      dup3\n        /* \"#utility.yul\":3979:3986   */\n      dup5\n        /* \"#utility.yul\":3975:3998   */\n      sub\n        /* \"#utility.yul\":3971:4003   */\n      slt\n        /* \"#utility.yul\":3968:4087   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":4006:4085   */\n      tag_199\n      tag_115\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3968:4087   */\n    tag_198:\n        /* \"#utility.yul\":4126:4127   */\n      0x00\n        /* \"#utility.yul\":4151:4212   */\n      tag_200\n        /* \"#utility.yul\":4204:4211   */\n      dup5\n        /* \"#utility.yul\":4195:4201   */\n      dup3\n        /* \"#utility.yul\":4184:4193   */\n      dup6\n        /* \"#utility.yul\":4180:4202   */\n      add\n        /* \"#utility.yul\":4151:4212   */\n      tag_128\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4141:4212   */\n      swap2\n      pop\n        /* \"#utility.yul\":4097:4222   */\n      pop\n        /* \"#utility.yul\":3884:4229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4235:4415   */\n    tag_129:\n        /* \"#utility.yul\":4283:4360   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4280:4281   */\n      0x00\n        /* \"#utility.yul\":4273:4361   */\n      mstore\n        /* \"#utility.yul\":4380:4384   */\n      0x11\n        /* \"#utility.yul\":4377:4378   */\n      0x04\n        /* \"#utility.yul\":4370:4385   */\n      mstore\n        /* \"#utility.yul\":4404:4408   */\n      0x24\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4394:4409   */\n      revert\n        /* \"#utility.yul\":4421:4612   */\n    tag_75:\n        /* \"#utility.yul\":4461:4464   */\n      0x00\n        /* \"#utility.yul\":4480:4500   */\n      tag_203\n        /* \"#utility.yul\":4498:4499   */\n      dup3\n        /* \"#utility.yul\":4480:4500   */\n      tag_117\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4475:4500   */\n      swap2\n      pop\n        /* \"#utility.yul\":4514:4534   */\n      tag_204\n        /* \"#utility.yul\":4532:4533   */\n      dup4\n        /* \"#utility.yul\":4514:4534   */\n      tag_117\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4509:4534   */\n      swap3\n      pop\n        /* \"#utility.yul\":4557:4558   */\n      dup3\n        /* \"#utility.yul\":4554:4555   */\n      dup3\n        /* \"#utility.yul\":4550:4559   */\n      add\n        /* \"#utility.yul\":4543:4559   */\n      swap1\n      pop\n        /* \"#utility.yul\":4578:4581   */\n      dup1\n        /* \"#utility.yul\":4575:4576   */\n      dup3\n        /* \"#utility.yul\":4572:4582   */\n      gt\n        /* \"#utility.yul\":4569:4605   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":4585:4603   */\n      tag_206\n      tag_129\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4569:4605   */\n    tag_205:\n        /* \"#utility.yul\":4421:4612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4618:4703   */\n    tag_130:\n        /* \"#utility.yul\":4663:4670   */\n      0x00\n        /* \"#utility.yul\":4692:4697   */\n      dup2\n        /* \"#utility.yul\":4681:4697   */\n      swap1\n      pop\n        /* \"#utility.yul\":4618:4703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4709:4867   */\n    tag_131:\n        /* \"#utility.yul\":4767:4776   */\n      0x00\n        /* \"#utility.yul\":4800:4861   */\n      tag_209\n        /* \"#utility.yul\":4818:4860   */\n      tag_210\n        /* \"#utility.yul\":4827:4859   */\n      tag_211\n        /* \"#utility.yul\":4853:4858   */\n      dup5\n        /* \"#utility.yul\":4827:4859   */\n      tag_130\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4818:4860   */\n      tag_120\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4800:4861   */\n      tag_117\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4787:4861   */\n      swap1\n      pop\n        /* \"#utility.yul\":4709:4867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4873:5020   */\n    tag_132:\n        /* \"#utility.yul\":4968:5013   */\n      tag_213\n        /* \"#utility.yul\":5007:5012   */\n      dup2\n        /* \"#utility.yul\":4968:5013   */\n      tag_131\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4963:4966   */\n      dup3\n        /* \"#utility.yul\":4956:5014   */\n      mstore\n        /* \"#utility.yul\":4873:5020   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5026:5140   */\n    tag_133:\n        /* \"#utility.yul\":5093:5099   */\n      0x00\n        /* \"#utility.yul\":5127:5132   */\n      dup2\n        /* \"#utility.yul\":5121:5133   */\n      mload\n        /* \"#utility.yul\":5111:5133   */\n      swap1\n      pop\n        /* \"#utility.yul\":5026:5140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5146:5330   */\n    tag_134:\n        /* \"#utility.yul\":5245:5256   */\n      0x00\n        /* \"#utility.yul\":5279:5285   */\n      dup3\n        /* \"#utility.yul\":5274:5277   */\n      dup3\n        /* \"#utility.yul\":5267:5286   */\n      mstore\n        /* \"#utility.yul\":5319:5323   */\n      0x20\n        /* \"#utility.yul\":5314:5317   */\n      dup3\n        /* \"#utility.yul\":5310:5324   */\n      add\n        /* \"#utility.yul\":5295:5324   */\n      swap1\n      pop\n        /* \"#utility.yul\":5146:5330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5336:5468   */\n    tag_135:\n        /* \"#utility.yul\":5403:5407   */\n      0x00\n        /* \"#utility.yul\":5426:5429   */\n      dup2\n        /* \"#utility.yul\":5418:5429   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5460   */\n      0x20\n        /* \"#utility.yul\":5451:5454   */\n      dup3\n        /* \"#utility.yul\":5447:5461   */\n      add\n        /* \"#utility.yul\":5439:5461   */\n      swap1\n      pop\n        /* \"#utility.yul\":5336:5468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5474:5582   */\n    tag_136:\n        /* \"#utility.yul\":5551:5575   */\n      tag_218\n        /* \"#utility.yul\":5569:5574   */\n      dup2\n        /* \"#utility.yul\":5551:5575   */\n      tag_112\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5546:5549   */\n      dup3\n        /* \"#utility.yul\":5539:5576   */\n      mstore\n        /* \"#utility.yul\":5474:5582   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5588:5767   */\n    tag_137:\n        /* \"#utility.yul\":5657:5667   */\n      0x00\n        /* \"#utility.yul\":5678:5724   */\n      tag_220\n        /* \"#utility.yul\":5720:5723   */\n      dup4\n        /* \"#utility.yul\":5712:5718   */\n      dup4\n        /* \"#utility.yul\":5678:5724   */\n      tag_136\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5756:5760   */\n      0x20\n        /* \"#utility.yul\":5751:5754   */\n      dup4\n        /* \"#utility.yul\":5747:5761   */\n      add\n        /* \"#utility.yul\":5733:5761   */\n      swap1\n      pop\n        /* \"#utility.yul\":5588:5767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5773:5886   */\n    tag_138:\n        /* \"#utility.yul\":5843:5847   */\n      0x00\n        /* \"#utility.yul\":5875:5879   */\n      0x20\n        /* \"#utility.yul\":5870:5873   */\n      dup3\n        /* \"#utility.yul\":5866:5880   */\n      add\n        /* \"#utility.yul\":5858:5880   */\n      swap1\n      pop\n        /* \"#utility.yul\":5773:5886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5922:6654   */\n    tag_139:\n        /* \"#utility.yul\":6041:6044   */\n      0x00\n        /* \"#utility.yul\":6070:6124   */\n      tag_223\n        /* \"#utility.yul\":6118:6123   */\n      dup3\n        /* \"#utility.yul\":6070:6124   */\n      tag_133\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6140:6226   */\n      tag_224\n        /* \"#utility.yul\":6219:6225   */\n      dup2\n        /* \"#utility.yul\":6214:6217   */\n      dup6\n        /* \"#utility.yul\":6140:6226   */\n      tag_134\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6133:6226   */\n      swap4\n      pop\n        /* \"#utility.yul\":6250:6306   */\n      tag_225\n        /* \"#utility.yul\":6300:6305   */\n      dup4\n        /* \"#utility.yul\":6250:6306   */\n      tag_135\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6329:6336   */\n      dup1\n        /* \"#utility.yul\":6360:6361   */\n      0x00\n        /* \"#utility.yul\":6345:6629   */\n    tag_226:\n        /* \"#utility.yul\":6370:6376   */\n      dup4\n        /* \"#utility.yul\":6367:6368   */\n      dup2\n        /* \"#utility.yul\":6364:6377   */\n      lt\n        /* \"#utility.yul\":6345:6629   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":6446:6452   */\n      dup2\n        /* \"#utility.yul\":6440:6453   */\n      mload\n        /* \"#utility.yul\":6473:6536   */\n      tag_229\n        /* \"#utility.yul\":6532:6535   */\n      dup9\n        /* \"#utility.yul\":6517:6530   */\n      dup3\n        /* \"#utility.yul\":6473:6536   */\n      tag_137\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6466:6536   */\n      swap8\n      pop\n        /* \"#utility.yul\":6559:6619   */\n      tag_230\n        /* \"#utility.yul\":6612:6618   */\n      dup4\n        /* \"#utility.yul\":6559:6619   */\n      tag_138\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6549:6619   */\n      swap3\n      pop\n        /* \"#utility.yul\":6405:6629   */\n      pop\n        /* \"#utility.yul\":6392:6393   */\n      0x01\n        /* \"#utility.yul\":6389:6390   */\n      dup2\n        /* \"#utility.yul\":6385:6394   */\n      add\n        /* \"#utility.yul\":6380:6394   */\n      swap1\n      pop\n        /* \"#utility.yul\":6345:6629   */\n      jump(tag_226)\n    tag_228:\n        /* \"#utility.yul\":6349:6363   */\n      pop\n        /* \"#utility.yul\":6645:6648   */\n      dup6\n        /* \"#utility.yul\":6638:6648   */\n      swap4\n      pop\n        /* \"#utility.yul\":6046:6654   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5922:6654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6660:7491   */\n    tag_77:\n        /* \"#utility.yul\":6923:6927   */\n      0x00\n        /* \"#utility.yul\":6961:6964   */\n      0xa0\n        /* \"#utility.yul\":6950:6959   */\n      dup3\n        /* \"#utility.yul\":6946:6965   */\n      add\n        /* \"#utility.yul\":6938:6965   */\n      swap1\n      pop\n        /* \"#utility.yul\":6975:7046   */\n      tag_232\n        /* \"#utility.yul\":7043:7044   */\n      0x00\n        /* \"#utility.yul\":7032:7041   */\n      dup4\n        /* \"#utility.yul\":7028:7045   */\n      add\n        /* \"#utility.yul\":7019:7025   */\n      dup9\n        /* \"#utility.yul\":6975:7046   */\n      tag_125\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7056:7136   */\n      tag_233\n        /* \"#utility.yul\":7132:7134   */\n      0x20\n        /* \"#utility.yul\":7121:7130   */\n      dup4\n        /* \"#utility.yul\":7117:7135   */\n      add\n        /* \"#utility.yul\":7108:7114   */\n      dup8\n        /* \"#utility.yul\":7056:7136   */\n      tag_132\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7183:7192   */\n      dup2\n        /* \"#utility.yul\":7177:7181   */\n      dup2\n        /* \"#utility.yul\":7173:7193   */\n      sub\n        /* \"#utility.yul\":7168:7170   */\n      0x40\n        /* \"#utility.yul\":7157:7166   */\n      dup4\n        /* \"#utility.yul\":7153:7171   */\n      add\n        /* \"#utility.yul\":7146:7194   */\n      mstore\n        /* \"#utility.yul\":7211:7319   */\n      tag_234\n        /* \"#utility.yul\":7314:7318   */\n      dup2\n        /* \"#utility.yul\":7305:7311   */\n      dup7\n        /* \"#utility.yul\":7211:7319   */\n      tag_139\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7203:7319   */\n      swap1\n      pop\n        /* \"#utility.yul\":7329:7401   */\n      tag_235\n        /* \"#utility.yul\":7397:7399   */\n      0x60\n        /* \"#utility.yul\":7386:7395   */\n      dup4\n        /* \"#utility.yul\":7382:7400   */\n      add\n        /* \"#utility.yul\":7373:7379   */\n      dup6\n        /* \"#utility.yul\":7329:7401   */\n      tag_113\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7411:7484   */\n      tag_236\n        /* \"#utility.yul\":7479:7482   */\n      0x80\n        /* \"#utility.yul\":7468:7477   */\n      dup4\n        /* \"#utility.yul\":7464:7483   */\n      add\n        /* \"#utility.yul\":7455:7461   */\n      dup5\n        /* \"#utility.yul\":7411:7484   */\n      tag_125\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6660:7491   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7497:7614   */\n    tag_140:\n        /* \"#utility.yul\":7606:7607   */\n      0x00\n        /* \"#utility.yul\":7603:7604   */\n      dup1\n        /* \"#utility.yul\":7596:7608   */\n      revert\n        /* \"#utility.yul\":7620:7722   */\n    tag_141:\n        /* \"#utility.yul\":7661:7667   */\n      0x00\n        /* \"#utility.yul\":7712:7714   */\n      0x1f\n        /* \"#utility.yul\":7708:7715   */\n      not\n        /* \"#utility.yul\":7703:7705   */\n      0x1f\n        /* \"#utility.yul\":7696:7701   */\n      dup4\n        /* \"#utility.yul\":7692:7706   */\n      add\n        /* \"#utility.yul\":7688:7716   */\n      and\n        /* \"#utility.yul\":7678:7716   */\n      swap1\n      pop\n        /* \"#utility.yul\":7620:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:8009   */\n    tag_142:\n        /* \"#utility.yul\":7811:7838   */\n      tag_240\n        /* \"#utility.yul\":7833:7837   */\n      dup3\n        /* \"#utility.yul\":7811:7838   */\n      tag_141\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7803:7809   */\n      dup2\n        /* \"#utility.yul\":7799:7839   */\n      add\n        /* \"#utility.yul\":7941:7947   */\n      dup2\n        /* \"#utility.yul\":7929:7939   */\n      dup2\n        /* \"#utility.yul\":7926:7948   */\n      lt\n        /* \"#utility.yul\":7905:7923   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7893:7903   */\n      dup3\n        /* \"#utility.yul\":7890:7924   */\n      gt\n        /* \"#utility.yul\":7887:7949   */\n      or\n        /* \"#utility.yul\":7884:7972   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":7952:7970   */\n      tag_242\n      tag_61\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7884:7972   */\n    tag_241:\n        /* \"#utility.yul\":7992:8002   */\n      dup1\n        /* \"#utility.yul\":7988:7990   */\n      0x40\n        /* \"#utility.yul\":7981:8003   */\n      mstore\n        /* \"#utility.yul\":7771:8009   */\n      pop\n        /* \"#utility.yul\":7728:8009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:8144   */\n    tag_143:\n        /* \"#utility.yul\":8049:8055   */\n      0x00\n        /* \"#utility.yul\":8076:8096   */\n      tag_244\n      tag_114\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8066:8096   */\n      swap1\n      pop\n        /* \"#utility.yul\":8105:8138   */\n      tag_245\n        /* \"#utility.yul\":8133:8137   */\n      dup3\n        /* \"#utility.yul\":8125:8131   */\n      dup3\n        /* \"#utility.yul\":8105:8138   */\n      tag_142\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8015:8144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8150:8461   */\n    tag_144:\n        /* \"#utility.yul\":8227:8231   */\n      0x00\n        /* \"#utility.yul\":8317:8335   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8309:8315   */\n      dup3\n        /* \"#utility.yul\":8306:8336   */\n      gt\n        /* \"#utility.yul\":8303:8359   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":8339:8357   */\n      tag_248\n      tag_61\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8303:8359   */\n    tag_247:\n        /* \"#utility.yul\":8389:8393   */\n      0x20\n        /* \"#utility.yul\":8381:8387   */\n      dup3\n        /* \"#utility.yul\":8377:8394   */\n      mul\n        /* \"#utility.yul\":8369:8394   */\n      swap1\n      pop\n        /* \"#utility.yul\":8449:8453   */\n      0x20\n        /* \"#utility.yul\":8443:8447   */\n      dup2\n        /* \"#utility.yul\":8439:8454   */\n      add\n        /* \"#utility.yul\":8431:8454   */\n      swap1\n      pop\n        /* \"#utility.yul\":8150:8461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8467:8584   */\n    tag_145:\n        /* \"#utility.yul\":8576:8577   */\n      0x00\n        /* \"#utility.yul\":8573:8574   */\n      dup1\n        /* \"#utility.yul\":8566:8578   */\n      revert\n        /* \"#utility.yul\":8590:8733   */\n    tag_146:\n        /* \"#utility.yul\":8647:8652   */\n      0x00\n        /* \"#utility.yul\":8678:8684   */\n      dup2\n        /* \"#utility.yul\":8672:8685   */\n      mload\n        /* \"#utility.yul\":8663:8685   */\n      swap1\n      pop\n        /* \"#utility.yul\":8694:8727   */\n      tag_251\n        /* \"#utility.yul\":8721:8726   */\n      dup2\n        /* \"#utility.yul\":8694:8727   */\n      tag_118\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8590:8733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8756:9488   */\n    tag_147:\n        /* \"#utility.yul\":8863:8868   */\n      0x00\n        /* \"#utility.yul\":8888:8969   */\n      tag_253\n        /* \"#utility.yul\":8904:8968   */\n      tag_254\n        /* \"#utility.yul\":8961:8967   */\n      dup5\n        /* \"#utility.yul\":8904:8968   */\n      tag_144\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8888:8969   */\n      tag_143\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8879:8969   */\n      swap1\n      pop\n        /* \"#utility.yul\":8989:8994   */\n      dup1\n        /* \"#utility.yul\":9018:9024   */\n      dup4\n        /* \"#utility.yul\":9011:9016   */\n      dup3\n        /* \"#utility.yul\":9004:9025   */\n      mstore\n        /* \"#utility.yul\":9052:9056   */\n      0x20\n        /* \"#utility.yul\":9045:9050   */\n      dup3\n        /* \"#utility.yul\":9041:9057   */\n      add\n        /* \"#utility.yul\":9034:9057   */\n      swap1\n      pop\n        /* \"#utility.yul\":9105:9109   */\n      0x20\n        /* \"#utility.yul\":9097:9103   */\n      dup5\n        /* \"#utility.yul\":9093:9110   */\n      mul\n        /* \"#utility.yul\":9085:9091   */\n      dup4\n        /* \"#utility.yul\":9081:9111   */\n      add\n        /* \"#utility.yul\":9134:9137   */\n      dup6\n        /* \"#utility.yul\":9126:9132   */\n      dup2\n        /* \"#utility.yul\":9123:9138   */\n      gt\n        /* \"#utility.yul\":9120:9242   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":9153:9232   */\n      tag_256\n      tag_145\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9120:9242   */\n    tag_255:\n        /* \"#utility.yul\":9268:9274   */\n      dup4\n        /* \"#utility.yul\":9251:9482   */\n    tag_257:\n        /* \"#utility.yul\":9285:9291   */\n      dup2\n        /* \"#utility.yul\":9280:9283   */\n      dup2\n        /* \"#utility.yul\":9277:9292   */\n      lt\n        /* \"#utility.yul\":9251:9482   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":9360:9363   */\n      dup1\n        /* \"#utility.yul\":9389:9437   */\n      tag_260\n        /* \"#utility.yul\":9433:9436   */\n      dup9\n        /* \"#utility.yul\":9421:9431   */\n      dup3\n        /* \"#utility.yul\":9389:9437   */\n      tag_146\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9384:9387   */\n      dup5\n        /* \"#utility.yul\":9377:9438   */\n      mstore\n        /* \"#utility.yul\":9467:9471   */\n      0x20\n        /* \"#utility.yul\":9462:9465   */\n      dup5\n        /* \"#utility.yul\":9458:9472   */\n      add\n        /* \"#utility.yul\":9451:9472   */\n      swap4\n      pop\n        /* \"#utility.yul\":9327:9482   */\n      pop\n        /* \"#utility.yul\":9311:9315   */\n      0x20\n        /* \"#utility.yul\":9306:9309   */\n      dup2\n        /* \"#utility.yul\":9302:9316   */\n      add\n        /* \"#utility.yul\":9295:9316   */\n      swap1\n      pop\n        /* \"#utility.yul\":9251:9482   */\n      jump(tag_257)\n    tag_259:\n        /* \"#utility.yul\":9255:9276   */\n      pop\n        /* \"#utility.yul\":8869:9488   */\n      pop\n      pop\n        /* \"#utility.yul\":8756:9488   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9511:9896   */\n    tag_148:\n        /* \"#utility.yul\":9593:9598   */\n      0x00\n        /* \"#utility.yul\":9642:9645   */\n      dup3\n        /* \"#utility.yul\":9635:9639   */\n      0x1f\n        /* \"#utility.yul\":9627:9633   */\n      dup4\n        /* \"#utility.yul\":9623:9640   */\n      add\n        /* \"#utility.yul\":9619:9646   */\n      slt\n        /* \"#utility.yul\":9609:9731   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":9650:9729   */\n      tag_263\n      tag_140\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9609:9731   */\n    tag_262:\n        /* \"#utility.yul\":9760:9766   */\n      dup2\n        /* \"#utility.yul\":9754:9767   */\n      mload\n        /* \"#utility.yul\":9785:9890   */\n      tag_264\n        /* \"#utility.yul\":9886:9889   */\n      dup5\n        /* \"#utility.yul\":9878:9884   */\n      dup3\n        /* \"#utility.yul\":9871:9875   */\n      0x20\n        /* \"#utility.yul\":9863:9869   */\n      dup7\n        /* \"#utility.yul\":9859:9876   */\n      add\n        /* \"#utility.yul\":9785:9890   */\n      tag_147\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9776:9890   */\n      swap2\n      pop\n        /* \"#utility.yul\":9599:9896   */\n      pop\n        /* \"#utility.yul\":9511:9896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9902:10456   */\n    tag_81:\n        /* \"#utility.yul\":9997:10003   */\n      0x00\n        /* \"#utility.yul\":10046:10048   */\n      0x20\n        /* \"#utility.yul\":10034:10043   */\n      dup3\n        /* \"#utility.yul\":10025:10032   */\n      dup5\n        /* \"#utility.yul\":10021:10044   */\n      sub\n        /* \"#utility.yul\":10017:10049   */\n      slt\n        /* \"#utility.yul\":10014:10133   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":10052:10131   */\n      tag_267\n      tag_115\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10014:10133   */\n    tag_266:\n        /* \"#utility.yul\":10193:10194   */\n      0x00\n        /* \"#utility.yul\":10182:10191   */\n      dup3\n        /* \"#utility.yul\":10178:10195   */\n      add\n        /* \"#utility.yul\":10172:10196   */\n      mload\n        /* \"#utility.yul\":10223:10241   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10215:10221   */\n      dup2\n        /* \"#utility.yul\":10212:10242   */\n      gt\n        /* \"#utility.yul\":10209:10326   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":10245:10324   */\n      tag_269\n      tag_116\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10209:10326   */\n    tag_268:\n        /* \"#utility.yul\":10350:10439   */\n      tag_270\n        /* \"#utility.yul\":10431:10438   */\n      dup5\n        /* \"#utility.yul\":10422:10428   */\n      dup3\n        /* \"#utility.yul\":10411:10420   */\n      dup6\n        /* \"#utility.yul\":10407:10429   */\n      add\n        /* \"#utility.yul\":10350:10439   */\n      tag_148\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10340:10439   */\n      swap2\n      pop\n        /* \"#utility.yul\":10143:10449   */\n      pop\n        /* \"#utility.yul\":9902:10456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10462:11182   */\n    tag_93:\n        /* \"#utility.yul\":10697:10701   */\n      0x00\n        /* \"#utility.yul\":10735:10738   */\n      0x80\n        /* \"#utility.yul\":10724:10733   */\n      dup3\n        /* \"#utility.yul\":10720:10739   */\n      add\n        /* \"#utility.yul\":10712:10739   */\n      swap1\n      pop\n        /* \"#utility.yul\":10749:10828   */\n      tag_272\n        /* \"#utility.yul\":10825:10826   */\n      0x00\n        /* \"#utility.yul\":10814:10823   */\n      dup4\n        /* \"#utility.yul\":10810:10827   */\n      add\n        /* \"#utility.yul\":10801:10807   */\n      dup8\n        /* \"#utility.yul\":10749:10828   */\n      tag_132\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10875:10884   */\n      dup2\n        /* \"#utility.yul\":10869:10873   */\n      dup2\n        /* \"#utility.yul\":10865:10885   */\n      sub\n        /* \"#utility.yul\":10860:10862   */\n      0x20\n        /* \"#utility.yul\":10849:10858   */\n      dup4\n        /* \"#utility.yul\":10845:10863   */\n      add\n        /* \"#utility.yul\":10838:10886   */\n      mstore\n        /* \"#utility.yul\":10903:11011   */\n      tag_273\n        /* \"#utility.yul\":11006:11010   */\n      dup2\n        /* \"#utility.yul\":10997:11003   */\n      dup7\n        /* \"#utility.yul\":10903:11011   */\n      tag_139\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10895:11011   */\n      swap1\n      pop\n        /* \"#utility.yul\":11021:11093   */\n      tag_274\n        /* \"#utility.yul\":11089:11091   */\n      0x40\n        /* \"#utility.yul\":11078:11087   */\n      dup4\n        /* \"#utility.yul\":11074:11092   */\n      add\n        /* \"#utility.yul\":11065:11071   */\n      dup6\n        /* \"#utility.yul\":11021:11093   */\n      tag_113\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":11103:11175   */\n      tag_275\n        /* \"#utility.yul\":11171:11173   */\n      0x60\n        /* \"#utility.yul\":11160:11169   */\n      dup4\n        /* \"#utility.yul\":11156:11174   */\n      add\n        /* \"#utility.yul\":11147:11153   */\n      dup5\n        /* \"#utility.yul\":11103:11175   */\n      tag_125\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10462:11182   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11188:11995   */\n    tag_106:\n        /* \"#utility.yul\":11437:11441   */\n      0x00\n        /* \"#utility.yul\":11475:11478   */\n      0xc0\n        /* \"#utility.yul\":11464:11473   */\n      dup3\n        /* \"#utility.yul\":11460:11479   */\n      add\n        /* \"#utility.yul\":11452:11479   */\n      swap1\n      pop\n        /* \"#utility.yul\":11489:11560   */\n      tag_277\n        /* \"#utility.yul\":11557:11558   */\n      0x00\n        /* \"#utility.yul\":11546:11555   */\n      dup4\n        /* \"#utility.yul\":11542:11559   */\n      add\n        /* \"#utility.yul\":11533:11539   */\n      dup10\n        /* \"#utility.yul\":11489:11560   */\n      tag_113\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11570:11642   */\n      tag_278\n        /* \"#utility.yul\":11638:11640   */\n      0x20\n        /* \"#utility.yul\":11627:11636   */\n      dup4\n        /* \"#utility.yul\":11623:11641   */\n      add\n        /* \"#utility.yul\":11614:11620   */\n      dup9\n        /* \"#utility.yul\":11570:11642   */\n      tag_125\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":11652:11732   */\n      tag_279\n        /* \"#utility.yul\":11728:11730   */\n      0x40\n        /* \"#utility.yul\":11717:11726   */\n      dup4\n        /* \"#utility.yul\":11713:11731   */\n      add\n        /* \"#utility.yul\":11704:11710   */\n      dup8\n        /* \"#utility.yul\":11652:11732   */\n      tag_132\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11742:11822   */\n      tag_280\n        /* \"#utility.yul\":11818:11820   */\n      0x60\n        /* \"#utility.yul\":11807:11816   */\n      dup4\n        /* \"#utility.yul\":11803:11821   */\n      add\n        /* \"#utility.yul\":11794:11800   */\n      dup7\n        /* \"#utility.yul\":11742:11822   */\n      tag_132\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11832:11905   */\n      tag_281\n        /* \"#utility.yul\":11900:11903   */\n      0x80\n        /* \"#utility.yul\":11889:11898   */\n      dup4\n        /* \"#utility.yul\":11885:11904   */\n      add\n        /* \"#utility.yul\":11876:11882   */\n      dup6\n        /* \"#utility.yul\":11832:11905   */\n      tag_113\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11915:11988   */\n      tag_282\n        /* \"#utility.yul\":11983:11986   */\n      0xa0\n        /* \"#utility.yul\":11972:11981   */\n      dup4\n        /* \"#utility.yul\":11968:11987   */\n      add\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11915:11988   */\n      tag_125\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11188:11995   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12001:12664   */\n    tag_110:\n        /* \"#utility.yul\":12089:12095   */\n      0x00\n        /* \"#utility.yul\":12097:12103   */\n      dup1\n        /* \"#utility.yul\":12105:12111   */\n      0x00\n        /* \"#utility.yul\":12154:12156   */\n      0x60\n        /* \"#utility.yul\":12142:12151   */\n      dup5\n        /* \"#utility.yul\":12133:12140   */\n      dup7\n        /* \"#utility.yul\":12129:12152   */\n      sub\n        /* \"#utility.yul\":12125:12157   */\n      slt\n        /* \"#utility.yul\":12122:12241   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":12160:12239   */\n      tag_285\n      tag_115\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12122:12241   */\n    tag_284:\n        /* \"#utility.yul\":12280:12281   */\n      0x00\n        /* \"#utility.yul\":12305:12369   */\n      tag_286\n        /* \"#utility.yul\":12361:12368   */\n      dup7\n        /* \"#utility.yul\":12352:12358   */\n      dup3\n        /* \"#utility.yul\":12341:12350   */\n      dup8\n        /* \"#utility.yul\":12337:12359   */\n      add\n        /* \"#utility.yul\":12305:12369   */\n      tag_146\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12295:12369   */\n      swap4\n      pop\n        /* \"#utility.yul\":12251:12379   */\n      pop\n        /* \"#utility.yul\":12418:12420   */\n      0x20\n        /* \"#utility.yul\":12444:12508   */\n      tag_287\n        /* \"#utility.yul\":12500:12507   */\n      dup7\n        /* \"#utility.yul\":12491:12497   */\n      dup3\n        /* \"#utility.yul\":12480:12489   */\n      dup8\n        /* \"#utility.yul\":12476:12498   */\n      add\n        /* \"#utility.yul\":12444:12508   */\n      tag_146\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12434:12508   */\n      swap3\n      pop\n        /* \"#utility.yul\":12389:12518   */\n      pop\n        /* \"#utility.yul\":12557:12559   */\n      0x40\n        /* \"#utility.yul\":12583:12647   */\n      tag_288\n        /* \"#utility.yul\":12639:12646   */\n      dup7\n        /* \"#utility.yul\":12630:12636   */\n      dup3\n        /* \"#utility.yul\":12619:12628   */\n      dup8\n        /* \"#utility.yul\":12615:12637   */\n      add\n        /* \"#utility.yul\":12583:12647   */\n      tag_146\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12573:12647   */\n      swap2\n      pop\n        /* \"#utility.yul\":12528:12657   */\n      pop\n        /* \"#utility.yul\":12001:12664   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a16287be9ecce31a1f22f4c1a5ad5a264410ac271462dc42b9148558b918e1da64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2918:8",
										"nodeType": "YulBlock",
										"src": "0:2918:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "922:274:8",
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:8",
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nativeSrc": "970:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nativeSrc": "970:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nativeSrc": "939:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nativeSrc": "935:32:8",
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nativeSrc": "932:119:8",
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nativeSrc": "1061:128:8",
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nativeSrc": "1076:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nativeSrc": "1147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nativeSrc": "1115:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:8",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:8",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:8",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											},
											{
												"body": {
													"nativeSrc": "1267:53:8",
													"nodeType": "YulBlock",
													"src": "1267:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:8"
																		},
																		"nativeSrc": "1289:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:8"
																},
																"nativeSrc": "1277:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:8"
															},
															"nativeSrc": "1277:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:8",
														"nodeType": "YulTypedName",
														"src": "1255:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:8",
														"nodeType": "YulTypedName",
														"src": "1262:3:8",
														"type": ""
													}
												],
												"src": "1202:118:8"
											},
											{
												"body": {
													"nativeSrc": "1371:32:8",
													"nodeType": "YulBlock",
													"src": "1371:32:8",
													"statements": [
														{
															"nativeSrc": "1381:16:8",
															"nodeType": "YulAssignment",
															"src": "1381:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1392:5:8",
																"nodeType": "YulIdentifier",
																"src": "1392:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1381:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1381:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1326:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1353:5:8",
														"nodeType": "YulTypedName",
														"src": "1353:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1363:7:8",
														"nodeType": "YulTypedName",
														"src": "1363:7:8",
														"type": ""
													}
												],
												"src": "1326:77:8"
											},
											{
												"body": {
													"nativeSrc": "1474:53:8",
													"nodeType": "YulBlock",
													"src": "1474:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1491:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1514:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1514:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1496:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1496:17:8"
																		},
																		"nativeSrc": "1496:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1496:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1484:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:8"
																},
																"nativeSrc": "1484:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1484:37:8"
															},
															"nativeSrc": "1484:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1484:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1409:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1462:5:8",
														"nodeType": "YulTypedName",
														"src": "1462:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1469:3:8",
														"nodeType": "YulTypedName",
														"src": "1469:3:8",
														"type": ""
													}
												],
												"src": "1409:118:8"
											},
											{
												"body": {
													"nativeSrc": "1659:206:8",
													"nodeType": "YulBlock",
													"src": "1659:206:8",
													"statements": [
														{
															"nativeSrc": "1669:26:8",
															"nodeType": "YulAssignment",
															"src": "1669:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1681:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1692:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1692:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1677:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:8"
																},
																"nativeSrc": "1677:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1677:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1669:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1669:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1749:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1749:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1762:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1762:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1773:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1773:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1758:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1758:3:8"
																		},
																		"nativeSrc": "1758:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1758:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1705:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1705:43:8"
																},
																"nativeSrc": "1705:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1705:71:8"
															},
															"nativeSrc": "1705:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1705:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1830:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1830:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1843:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1843:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1854:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1854:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1839:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1839:3:8"
																		},
																		"nativeSrc": "1839:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1839:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1786:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1786:43:8"
																},
																"nativeSrc": "1786:72:8",
																"nodeType": "YulFunctionCall",
																"src": "1786:72:8"
															},
															"nativeSrc": "1786:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "1786:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1533:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1623:9:8",
														"nodeType": "YulTypedName",
														"src": "1623:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1635:6:8",
														"nodeType": "YulTypedName",
														"src": "1635:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1643:6:8",
														"nodeType": "YulTypedName",
														"src": "1643:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1654:4:8",
														"nodeType": "YulTypedName",
														"src": "1654:4:8",
														"type": ""
													}
												],
												"src": "1533:332:8"
											},
											{
												"body": {
													"nativeSrc": "1913:48:8",
													"nodeType": "YulBlock",
													"src": "1913:48:8",
													"statements": [
														{
															"nativeSrc": "1923:32:8",
															"nodeType": "YulAssignment",
															"src": "1923:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1948:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1948:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1941:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1941:6:8"
																		},
																		"nativeSrc": "1941:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1941:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1934:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1934:6:8"
																},
																"nativeSrc": "1934:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1934:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1923:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1923:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1871:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1895:5:8",
														"nodeType": "YulTypedName",
														"src": "1895:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1905:7:8",
														"nodeType": "YulTypedName",
														"src": "1905:7:8",
														"type": ""
													}
												],
												"src": "1871:90:8"
											},
											{
												"body": {
													"nativeSrc": "2007:76:8",
													"nodeType": "YulBlock",
													"src": "2007:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2061:16:8",
																"nodeType": "YulBlock",
																"src": "2061:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2070:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2073:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2063:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2063:6:8"
																			},
																			"nativeSrc": "2063:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2063:12:8"
																		},
																		"nativeSrc": "2063:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2030:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2030:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2052:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2052:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2037:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "2037:14:8"
																				},
																				"nativeSrc": "2037:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2037:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2027:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2027:2:8"
																		},
																		"nativeSrc": "2027:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2027:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2020:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:8"
																},
																"nativeSrc": "2020:40:8",
																"nodeType": "YulFunctionCall",
																"src": "2020:40:8"
															},
															"nativeSrc": "2017:60:8",
															"nodeType": "YulIf",
															"src": "2017:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "1967:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2000:5:8",
														"nodeType": "YulTypedName",
														"src": "2000:5:8",
														"type": ""
													}
												],
												"src": "1967:116:8"
											},
											{
												"body": {
													"nativeSrc": "2149:77:8",
													"nodeType": "YulBlock",
													"src": "2149:77:8",
													"statements": [
														{
															"nativeSrc": "2159:22:8",
															"nodeType": "YulAssignment",
															"src": "2159:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2174:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2168:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2168:5:8"
																},
																"nativeSrc": "2168:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2168:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2159:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2159:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2214:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2214:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2190:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "2190:23:8"
																},
																"nativeSrc": "2190:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2190:30:8"
															},
															"nativeSrc": "2190:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "2190:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2089:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2127:6:8",
														"nodeType": "YulTypedName",
														"src": "2127:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2135:3:8",
														"nodeType": "YulTypedName",
														"src": "2135:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2143:5:8",
														"nodeType": "YulTypedName",
														"src": "2143:5:8",
														"type": ""
													}
												],
												"src": "2089:137:8"
											},
											{
												"body": {
													"nativeSrc": "2306:271:8",
													"nodeType": "YulBlock",
													"src": "2306:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2352:83:8",
																"nodeType": "YulBlock",
																"src": "2352:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2354:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2354:77:8"
																			},
																			"nativeSrc": "2354:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2354:79:8"
																		},
																		"nativeSrc": "2354:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2354:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2327:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2327:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2336:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2336:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2323:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2323:3:8"
																		},
																		"nativeSrc": "2323:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2323:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2348:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2348:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2319:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:8"
																},
																"nativeSrc": "2319:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2319:32:8"
															},
															"nativeSrc": "2316:119:8",
															"nodeType": "YulIf",
															"src": "2316:119:8"
														},
														{
															"nativeSrc": "2445:125:8",
															"nodeType": "YulBlock",
															"src": "2445:125:8",
															"statements": [
																{
																	"nativeSrc": "2460:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2460:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2474:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2474:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2464:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2464:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2489:71:8",
																	"nodeType": "YulAssignment",
																	"src": "2489:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2532:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2532:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2543:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2543:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2528:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2528:3:8"
																				},
																				"nativeSrc": "2528:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2528:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2552:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2552:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "2499:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "2499:28:8"
																		},
																		"nativeSrc": "2499:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2489:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2489:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2232:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2276:9:8",
														"nodeType": "YulTypedName",
														"src": "2276:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2287:7:8",
														"nodeType": "YulTypedName",
														"src": "2287:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2299:6:8",
														"nodeType": "YulTypedName",
														"src": "2299:6:8",
														"type": ""
													}
												],
												"src": "2232:345:8"
											},
											{
												"body": {
													"nativeSrc": "2709:206:8",
													"nodeType": "YulBlock",
													"src": "2709:206:8",
													"statements": [
														{
															"nativeSrc": "2719:26:8",
															"nodeType": "YulAssignment",
															"src": "2719:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2731:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2731:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2742:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2742:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2727:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2727:3:8"
																},
																"nativeSrc": "2727:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2727:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2719:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2719:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2799:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2799:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2812:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2823:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2823:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:8"
																		},
																		"nativeSrc": "2808:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2755:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2755:43:8"
																},
																"nativeSrc": "2755:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2755:71:8"
															},
															"nativeSrc": "2755:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "2755:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2880:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2880:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2893:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2904:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2904:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2889:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2889:3:8"
																		},
																		"nativeSrc": "2889:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2889:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2836:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2836:43:8"
																},
																"nativeSrc": "2836:72:8",
																"nodeType": "YulFunctionCall",
																"src": "2836:72:8"
															},
															"nativeSrc": "2836:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "2836:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "2583:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2673:9:8",
														"nodeType": "YulTypedName",
														"src": "2673:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2685:6:8",
														"nodeType": "YulTypedName",
														"src": "2685:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2693:6:8",
														"nodeType": "YulTypedName",
														"src": "2693:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2704:4:8",
														"nodeType": "YulTypedName",
														"src": "2704:4:8",
														"type": ""
													}
												],
												"src": "2583:332:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052730a0e0fccc2c799845214e8e5583e44479ec02a235f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015610062575f80fd5b5060405161157338038061157383398181016040528101906100849190610425565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073050e797f3625ec8785265e1d9bdd4799b97528a160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610181573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101a59190610425565b60025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b373050e797f3625ec8785265e1d9bdd4799b97528a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610272929190610477565b6020604051808303815f875af115801561028e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102b291906104d3565b50739fbfa493ec98694256d171171487b9d47d849ba973ffffffffffffffffffffffffffffffffffffffff1663c9c653965f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016103429291906104fe565b6020604051808303815f875af115801561035e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103829190610425565b60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610525565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103f4826103cb565b9050919050565b610404816103ea565b811461040e575f80fd5b50565b5f8151905061041f816103fb565b92915050565b5f6020828403121561043a576104396103c7565b5b5f61044784828501610411565b91505092915050565b610459816103ea565b82525050565b5f819050919050565b6104718161045f565b82525050565b5f60408201905061048a5f830185610450565b6104976020830184610468565b9392505050565b5f8115159050919050565b6104b28161049e565b81146104bc575f80fd5b50565b5f815190506104cd816104a9565b92915050565b5f602082840312156104e8576104e76103c7565b5b5f6104f5848285016104bf565b91505092915050565b5f6040820190506105115f830185610450565b61051e6020830184610450565b9392505050565b611041806105325f395ff3fe608060405260043610610094575f3560e01c806397b3d8ca1161005857806397b3d8ca1461016f57806399d8fae314610179578063a82ed9ec146101a3578063a8aa1b31146101cd578063d06d04cc146101f75761009b565b806310fe9ae81461009f5780633fc8cef3146100c957806366dc34a7146100f3578063735de9f71461011b578063972598e7146101455761009b565b3661009b57005b5f80fd5b3480156100aa575f80fd5b506100b3610213565b6040516100c091906109f2565b60405180910390f35b3480156100d4575f80fd5b506100dd61023a565b6040516100ea91906109f2565b60405180910390f35b3480156100fe575f80fd5b5061011960048036038101906101149190610a4f565b61025f565b005b348015610126575f80fd5b5061012f610516565b60405161013c9190610ad5565b60405180910390f35b348015610150575f80fd5b5061015961053b565b60405161016691906109f2565b60405180910390f35b61017761055e565b005b348015610184575f80fd5b5061018d610778565b60405161019a91906109f2565b60405180910390f35b3480156101ae575f80fd5b506101b7610790565b6040516101c491906109f2565b60405180910390f35b3480156101d8575f80fd5b506101e16107a8565b6040516101ee91906109f2565b60405180910390f35b610211600480360381019061020c9190610a4f565b6107cd565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610297576040517ed8767d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060600267ffffffffffffffff8111156102b4576102b3610aee565b5b6040519080825280602002602001820160405280156102e25781602001602082028036833780820191505090505b5090505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f8151811061031857610317610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061038857610387610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161041e93929190610b57565b6020604051808303815f875af115801561043a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045e9190610bc1565b5060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318cbafe5835f8433610168426104ae9190610c19565b6040518663ffffffff1660e01b81526004016104ce959493929190610d3c565b5f604051808303815f875af11580156104e9573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906105119190610ecb565b505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f3411610597576040517fd73ab2e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060600267ffffffffffffffff8111156105b4576105b3610aee565b5b6040519080825280602002602001820160405280156105e25781602001602082028036833780820191505090505b50905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f8151811061061a57610619610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061068857610687610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5345f8433610168426107119190610c19565b6040518663ffffffff1660e01b81526004016107309493929190610f12565b5f6040518083038185885af115801561074b573d5f803e3d5ffd5b50505050506040513d5f823e3d601f19601f820116820180604052508101906107749190610ecb565b5050565b739fbfa493ec98694256d171171487b9d47d849ba981565b73050e797f3625ec8785265e1d9bdd4799b97528a181565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f3411610806576040517fd73ab2e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f811161083e576040517ed8767d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161089a93929190610b57565b6020604051808303815f875af11580156108b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108da9190610bc1565b5060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d719345f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16845f80336101684261094b9190610c19565b6040518863ffffffff1660e01b815260040161096c96959493929190610f5c565b60606040518083038185885af1158015610988573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906109ad9190610fbb565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109dc826109b3565b9050919050565b6109ec816109d2565b82525050565b5f602082019050610a055f8301846109e3565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610a2e81610a1c565b8114610a38575f80fd5b50565b5f81359050610a4981610a25565b92915050565b5f60208284031215610a6457610a63610a14565b5b5f610a7184828501610a3b565b91505092915050565b5f819050919050565b5f610a9d610a98610a93846109b3565b610a7a565b6109b3565b9050919050565b5f610aae82610a83565b9050919050565b5f610abf82610aa4565b9050919050565b610acf81610ab5565b82525050565b5f602082019050610ae85f830184610ac6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b610b5181610a1c565b82525050565b5f606082019050610b6a5f8301866109e3565b610b7760208301856109e3565b610b846040830184610b48565b949350505050565b5f8115159050919050565b610ba081610b8c565b8114610baa575f80fd5b50565b5f81519050610bbb81610b97565b92915050565b5f60208284031215610bd657610bd5610a14565b5b5f610be384828501610bad565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c2382610a1c565b9150610c2e83610a1c565b9250828201905080821115610c4657610c45610bec565b5b92915050565b5f819050919050565b5f610c6f610c6a610c6584610c4c565b610a7a565b610a1c565b9050919050565b610c7f81610c55565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610cb7816109d2565b82525050565b5f610cc88383610cae565b60208301905092915050565b5f602082019050919050565b5f610cea82610c85565b610cf48185610c8f565b9350610cff83610c9f565b805f5b83811015610d2f578151610d168882610cbd565b9750610d2183610cd4565b925050600181019050610d02565b5085935050505092915050565b5f60a082019050610d4f5f830188610b48565b610d5c6020830187610c76565b8181036040830152610d6e8186610ce0565b9050610d7d60608301856109e3565b610d8a6080830184610b48565b9695505050505050565b5f80fd5b5f601f19601f8301169050919050565b610db182610d98565b810181811067ffffffffffffffff82111715610dd057610dcf610aee565b5b80604052505050565b5f610de2610a0b565b9050610dee8282610da8565b919050565b5f67ffffffffffffffff821115610e0d57610e0c610aee565b5b602082029050602081019050919050565b5f80fd5b5f81519050610e3081610a25565b92915050565b5f610e48610e4384610df3565b610dd9565b90508083825260208201905060208402830185811115610e6b57610e6a610e1e565b5b835b81811015610e945780610e808882610e22565b845260208401935050602081019050610e6d565b5050509392505050565b5f82601f830112610eb257610eb1610d94565b5b8151610ec2848260208601610e36565b91505092915050565b5f60208284031215610ee057610edf610a14565b5b5f82015167ffffffffffffffff811115610efd57610efc610a18565b5b610f0984828501610e9e565b91505092915050565b5f608082019050610f255f830187610c76565b8181036020830152610f378186610ce0565b9050610f4660408301856109e3565b610f536060830184610b48565b95945050505050565b5f60c082019050610f6f5f8301896109e3565b610f7c6020830188610b48565b610f896040830187610c76565b610f966060830186610c76565b610fa360808301856109e3565b610fb060a0830184610b48565b979650505050505050565b5f805f60608486031215610fd257610fd1610a14565b5b5f610fdf86828701610e22565b9350506020610ff086828701610e22565b925050604061100186828701610e22565b915050925092509256fea2646970667358221220a16287be9ecce31a1f22f4c1a5ad5a264410ac271462dc42b9148558b918e1da64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xA0E0FCCC2C799845214E8E5583E44479EC02A23 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1573 CODESIZE SUB DUP1 PUSH2 0x1573 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x50E797F3625EC8785265E1D9BDD4799B97528A1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0x50E797F3625EC8785265E1D9BDD4799B97528A1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP3 SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x4D3 JUMP JUMPDEST POP PUSH20 0x9FBFA493EC98694256D171171487B9D47D849BA9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP3 SWAP2 SWAP1 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x525 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F4 DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x3EA JUMP JUMPDEST DUP2 EQ PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x41F DUP2 PUSH2 0x3FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x3C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x447 DUP5 DUP3 DUP6 ADD PUSH2 0x411 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x459 DUP2 PUSH2 0x3EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x45F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x48A PUSH0 DUP4 ADD DUP6 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x497 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x468 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B2 DUP2 PUSH2 0x49E JUMP JUMPDEST DUP2 EQ PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4CD DUP2 PUSH2 0x4A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0x3C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4F5 DUP5 DUP3 DUP6 ADD PUSH2 0x4BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x511 PUSH0 DUP4 ADD DUP6 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x51E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x450 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1041 DUP1 PUSH2 0x532 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97B3D8CA GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x97B3D8CA EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x99D8FAE3 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xD06D04CC EQ PUSH2 0x1F7 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x66DC34A7 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x972598E7 EQ PUSH2 0x145 JUMPI PUSH2 0x9B JUMP JUMPDEST CALLDATASIZE PUSH2 0x9B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x55E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x297 JUMPI PUSH1 0x40 MLOAD PUSH31 0xD8767D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH2 0x2B3 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x318 JUMPI PUSH2 0x317 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x388 JUMPI PUSH2 0x387 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP4 PUSH0 DUP5 CALLER PUSH2 0x168 TIMESTAMP PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x511 SWAP2 SWAP1 PUSH2 0xECB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD73AB2E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B3 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 CALLVALUE PUSH0 DUP5 CALLER PUSH2 0x168 TIMESTAMP PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xECB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0x9FBFA493EC98694256D171171487B9D47D849BA9 DUP2 JUMP JUMPDEST PUSH20 0x50E797F3625EC8785265E1D9BDD4799B97528A1 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD73AB2E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH31 0xD8767D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH0 DUP1 CALLER PUSH2 0x168 TIMESTAMP PUSH2 0x94B SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9DC DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0x9D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA05 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E DUP2 PUSH2 0xA1C JUMP JUMPDEST DUP2 EQ PUSH2 0xA38 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA49 DUP2 PUSH2 0xA25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA64 JUMPI PUSH2 0xA63 PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA71 DUP5 DUP3 DUP6 ADD PUSH2 0xA3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9D PUSH2 0xA98 PUSH2 0xA93 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAE DUP3 PUSH2 0xA83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xABF DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xAB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE8 PUSH0 DUP4 ADD DUP5 PUSH2 0xAC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB51 DUP2 PUSH2 0xA1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB6A PUSH0 DUP4 ADD DUP7 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xB77 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xB84 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA0 DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xBAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBBB DUP2 PUSH2 0xB97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD5 PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE3 DUP5 DUP3 DUP6 ADD PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC23 DUP3 PUSH2 0xA1C JUMP JUMPDEST SWAP2 POP PUSH2 0xC2E DUP4 PUSH2 0xA1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC45 PUSH2 0xBEC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6F PUSH2 0xC6A PUSH2 0xC65 DUP5 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7F DUP2 PUSH2 0xC55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB7 DUP2 PUSH2 0x9D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC8 DUP4 DUP4 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCEA DUP3 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xCF4 DUP2 DUP6 PUSH2 0xC8F JUMP JUMPDEST SWAP4 POP PUSH2 0xCFF DUP4 PUSH2 0xC9F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD2F JUMPI DUP2 MLOAD PUSH2 0xD16 DUP9 DUP3 PUSH2 0xCBD JUMP JUMPDEST SWAP8 POP PUSH2 0xD21 DUP4 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD02 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xD4F PUSH0 DUP4 ADD DUP9 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xD5C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xC76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xD6E DUP2 DUP7 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xD7D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xD8A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB1 DUP3 PUSH2 0xD98 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDD0 JUMPI PUSH2 0xDCF PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDE2 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP PUSH2 0xDEE DUP3 DUP3 PUSH2 0xDA8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE30 DUP2 PUSH2 0xA25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE48 PUSH2 0xE43 DUP5 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xE1E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE94 JUMPI DUP1 PUSH2 0xE80 DUP9 DUP3 PUSH2 0xE22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEB2 JUMPI PUSH2 0xEB1 PUSH2 0xD94 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xEC2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEDF PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFD JUMPI PUSH2 0xEFC PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH2 0xF09 DUP5 DUP3 DUP6 ADD PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF25 PUSH0 DUP4 ADD DUP8 PUSH2 0xC76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF37 DUP2 DUP7 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xF46 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xF53 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xF6F PUSH0 DUP4 ADD DUP10 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xF7C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xF89 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0xF96 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0xFA3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xFB0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD2 JUMPI PUSH2 0xFD1 PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDF DUP7 DUP3 DUP8 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFF0 DUP7 DUP3 DUP8 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1001 DUP7 DUP3 DUP8 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH3 0x87BE9E 0xCC 0xE3 BYTE 0x1F 0x22 DELEGATECALL 0xC1 0xA5 0xAD GAS 0x26 PREVRANDAO LT 0xAC 0x27 EQ PUSH3 0xDC42B9 EQ DUP6 PC 0xB9 XOR 0xE1 0xDA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1391:3536:5:-:0;;;1712:42;1685:69;;;;;;;;;;;;;;;;;;;;1854:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1937:6;1925:9;;:18;;;;;;;;;;;;;;;;;;1480:42;1953:13;;:51;;;;;;;;;;;;;;;;;;2022:13;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2015:4;;:27;;;;;;;;;;;;;;;;;;2060:9;;;;;;;;;;2053:25;;;1480:42;2098:17;2053:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1574:42;2134:48;;;2183:9;;;;;;;;;;2194:4;;;;;;;;;;;2134:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2127:4;;:72;;;;;;;;;;;;;;;;;;1854:352;1391:3536;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:77::-;1363:7;1392:5;1381:16;;1326:77;;;:::o;1409:118::-;1496:24;1514:5;1496:24;:::i;:::-;1491:3;1484:37;1409:118;;:::o;1533:332::-;1654:4;1692:2;1681:9;1677:18;1669:26;;1705:71;1773:1;1762:9;1758:17;1749:6;1705:71;:::i;:::-;1786:72;1854:2;1843:9;1839:18;1830:6;1786:72;:::i;:::-;1533:332;;;;;:::o;1871:90::-;1905:7;1948:5;1941:13;1934:21;1923:32;;1871:90;;;:::o;1967:116::-;2037:21;2052:5;2037:21;:::i;:::-;2030:5;2027:32;2017:60;;2073:1;2070;2063:12;2017:60;1967:116;:::o;2089:137::-;2143:5;2174:6;2168:13;2159:22;;2190:30;2214:5;2190:30;:::i;:::-;2089:137;;;;:::o;2232:345::-;2299:6;2348:2;2336:9;2327:7;2323:23;2319:32;2316:119;;;2354:79;;:::i;:::-;2316:119;2474:1;2499:61;2552:7;2543:6;2532:9;2528:22;2499:61;:::i;:::-;2489:71;;2445:125;2232:345;;;;:::o;2583:332::-;2704:4;2742:2;2731:9;2727:18;2719:26;;2755:71;2823:1;2812:9;2808:17;2799:6;2755:71;:::i;:::-;2836:72;2904:2;2893:9;2889:18;2880:6;2836:72;:::i;:::-;2583:332;;;;;:::o;1391:3536:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UNISWAP_V2_FACTORY_796": {
									"entryPoint": 1912,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNISWAP_V2_ROUTER_793": {
									"entryPoint": 1936,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addLiquidityETH_1034": {
									"entryPoint": 1997,
									"id": 1034,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getTokenAddress_916": {
									"entryPoint": 531,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@memeToken_803": {
									"entryPoint": 1339,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pair_805": {
									"entryPoint": 1960,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapETHForMeme_908": {
									"entryPoint": 1374,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapMemeForETH_982": {
									"entryPoint": 607,
									"id": 982,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapRouter_810": {
									"entryPoint": 1302,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weth_807": {
									"entryPoint": 570,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 3261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IUniswapV2Router_$1206_to_t_address_fromStack": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 3190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router_$1206__to_t_address__fromStack_reversed": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router_$1206_to_t_address": {
									"entryPoint": 2741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bool": {
									"entryPoint": 2967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12667:8",
										"nodeType": "YulBlock",
										"src": "0:12667:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:8",
													"nodeType": "YulBlock",
													"src": "52:81:8",
													"statements": [
														{
															"nativeSrc": "62:65:8",
															"nodeType": "YulAssignment",
															"src": "62:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:8",
																		"nodeType": "YulLiteral",
																		"src": "84:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:8"
																},
																"nativeSrc": "73:54:8",
																"nodeType": "YulFunctionCall",
																"src": "73:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:126:8"
											},
											{
												"body": {
													"nativeSrc": "184:51:8",
													"nodeType": "YulBlock",
													"src": "184:51:8",
													"statements": [
														{
															"nativeSrc": "194:35:8",
															"nodeType": "YulAssignment",
															"src": "194:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:8"
																},
																"nativeSrc": "205:24:8",
																"nodeType": "YulFunctionCall",
																"src": "205:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:8",
														"nodeType": "YulTypedName",
														"src": "166:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:8",
														"nodeType": "YulTypedName",
														"src": "176:7:8",
														"type": ""
													}
												],
												"src": "139:96:8"
											},
											{
												"body": {
													"nativeSrc": "306:53:8",
													"nodeType": "YulBlock",
													"src": "306:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:8"
																		},
																		"nativeSrc": "328:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:8"
																},
																"nativeSrc": "316:37:8",
																"nodeType": "YulFunctionCall",
																"src": "316:37:8"
															},
															"nativeSrc": "316:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:8",
														"nodeType": "YulTypedName",
														"src": "294:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:8",
														"nodeType": "YulTypedName",
														"src": "301:3:8",
														"type": ""
													}
												],
												"src": "241:118:8"
											},
											{
												"body": {
													"nativeSrc": "463:124:8",
													"nodeType": "YulBlock",
													"src": "463:124:8",
													"statements": [
														{
															"nativeSrc": "473:26:8",
															"nodeType": "YulAssignment",
															"src": "473:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:8",
																		"nodeType": "YulLiteral",
																		"src": "496:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:8"
																},
																"nativeSrc": "481:18:8",
																"nodeType": "YulFunctionCall",
																"src": "481:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:8",
																				"nodeType": "YulLiteral",
																				"src": "577:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:8"
																		},
																		"nativeSrc": "562:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:8"
																},
																"nativeSrc": "509:71:8",
																"nodeType": "YulFunctionCall",
																"src": "509:71:8"
															},
															"nativeSrc": "509:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:8",
														"nodeType": "YulTypedName",
														"src": "435:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:8",
														"nodeType": "YulTypedName",
														"src": "447:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:8",
														"nodeType": "YulTypedName",
														"src": "458:4:8",
														"type": ""
													}
												],
												"src": "365:222:8"
											},
											{
												"body": {
													"nativeSrc": "633:35:8",
													"nodeType": "YulBlock",
													"src": "633:35:8",
													"statements": [
														{
															"nativeSrc": "643:19:8",
															"nodeType": "YulAssignment",
															"src": "643:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:8",
																		"nodeType": "YulLiteral",
																		"src": "659:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:8"
																},
																"nativeSrc": "653:9:8",
																"nodeType": "YulFunctionCall",
																"src": "653:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:8",
														"nodeType": "YulTypedName",
														"src": "626:6:8",
														"type": ""
													}
												],
												"src": "593:75:8"
											},
											{
												"body": {
													"nativeSrc": "763:28:8",
													"nodeType": "YulBlock",
													"src": "763:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:8",
																		"nodeType": "YulLiteral",
																		"src": "780:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:8",
																		"nodeType": "YulLiteral",
																		"src": "783:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:8"
																},
																"nativeSrc": "773:12:8",
																"nodeType": "YulFunctionCall",
																"src": "773:12:8"
															},
															"nativeSrc": "773:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:8"
											},
											{
												"body": {
													"nativeSrc": "886:28:8",
													"nodeType": "YulBlock",
													"src": "886:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:8",
																		"nodeType": "YulLiteral",
																		"src": "903:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:8",
																		"nodeType": "YulLiteral",
																		"src": "906:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:8"
																},
																"nativeSrc": "896:12:8",
																"nodeType": "YulFunctionCall",
																"src": "896:12:8"
															},
															"nativeSrc": "896:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:8"
											},
											{
												"body": {
													"nativeSrc": "965:32:8",
													"nodeType": "YulBlock",
													"src": "965:32:8",
													"statements": [
														{
															"nativeSrc": "975:16:8",
															"nodeType": "YulAssignment",
															"src": "975:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "986:5:8",
																"nodeType": "YulIdentifier",
																"src": "986:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "975:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "920:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "947:5:8",
														"nodeType": "YulTypedName",
														"src": "947:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "957:7:8",
														"nodeType": "YulTypedName",
														"src": "957:7:8",
														"type": ""
													}
												],
												"src": "920:77:8"
											},
											{
												"body": {
													"nativeSrc": "1046:79:8",
													"nodeType": "YulBlock",
													"src": "1046:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:8",
																"nodeType": "YulBlock",
																"src": "1103:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:8"
																			},
																			"nativeSrc": "1105:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:8"
																		},
																		"nativeSrc": "1105:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1076:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:8"
																				},
																				"nativeSrc": "1076:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:8"
																		},
																		"nativeSrc": "1066:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:8"
																},
																"nativeSrc": "1059:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:8"
															},
															"nativeSrc": "1056:63:8",
															"nodeType": "YulIf",
															"src": "1056:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1003:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:8",
														"nodeType": "YulTypedName",
														"src": "1039:5:8",
														"type": ""
													}
												],
												"src": "1003:122:8"
											},
											{
												"body": {
													"nativeSrc": "1183:87:8",
													"nodeType": "YulBlock",
													"src": "1183:87:8",
													"statements": [
														{
															"nativeSrc": "1193:29:8",
															"nodeType": "YulAssignment",
															"src": "1193:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:8"
																},
																"nativeSrc": "1202:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1231:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:8"
																},
																"nativeSrc": "1231:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:8"
															},
															"nativeSrc": "1231:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1131:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:8",
														"nodeType": "YulTypedName",
														"src": "1161:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:8",
														"nodeType": "YulTypedName",
														"src": "1169:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:8",
														"nodeType": "YulTypedName",
														"src": "1177:5:8",
														"type": ""
													}
												],
												"src": "1131:139:8"
											},
											{
												"body": {
													"nativeSrc": "1342:263:8",
													"nodeType": "YulBlock",
													"src": "1342:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:8",
																"nodeType": "YulBlock",
																"src": "1388:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:8"
																			},
																			"nativeSrc": "1390:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:8"
																		},
																		"nativeSrc": "1390:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:8"
																		},
																		"nativeSrc": "1359:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:8"
																},
																"nativeSrc": "1355:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:8"
															},
															"nativeSrc": "1352:119:8",
															"nodeType": "YulIf",
															"src": "1352:119:8"
														},
														{
															"nativeSrc": "1481:117:8",
															"nodeType": "YulBlock",
															"src": "1481:117:8",
															"statements": [
																{
																	"nativeSrc": "1496:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:8"
																				},
																				"nativeSrc": "1556:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1535:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:8"
																		},
																		"nativeSrc": "1535:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1276:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:8",
														"nodeType": "YulTypedName",
														"src": "1312:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:8",
														"nodeType": "YulTypedName",
														"src": "1323:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:8",
														"nodeType": "YulTypedName",
														"src": "1335:6:8",
														"type": ""
													}
												],
												"src": "1276:329:8"
											},
											{
												"body": {
													"nativeSrc": "1643:28:8",
													"nodeType": "YulBlock",
													"src": "1643:28:8",
													"statements": [
														{
															"nativeSrc": "1653:12:8",
															"nodeType": "YulAssignment",
															"src": "1653:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1660:5:8",
																"nodeType": "YulIdentifier",
																"src": "1660:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1653:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1653:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1611:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1629:5:8",
														"nodeType": "YulTypedName",
														"src": "1629:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1639:3:8",
														"nodeType": "YulTypedName",
														"src": "1639:3:8",
														"type": ""
													}
												],
												"src": "1611:60:8"
											},
											{
												"body": {
													"nativeSrc": "1737:82:8",
													"nodeType": "YulBlock",
													"src": "1737:82:8",
													"statements": [
														{
															"nativeSrc": "1747:66:8",
															"nodeType": "YulAssignment",
															"src": "1747:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1805:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1805:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1787:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1787:17:8"
																				},
																				"nativeSrc": "1787:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1787:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1778:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "1778:8:8"
																		},
																		"nativeSrc": "1778:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1760:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1760:17:8"
																},
																"nativeSrc": "1760:53:8",
																"nodeType": "YulFunctionCall",
																"src": "1760:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1747:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1677:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1717:5:8",
														"nodeType": "YulTypedName",
														"src": "1717:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1727:9:8",
														"nodeType": "YulTypedName",
														"src": "1727:9:8",
														"type": ""
													}
												],
												"src": "1677:142:8"
											},
											{
												"body": {
													"nativeSrc": "1885:66:8",
													"nodeType": "YulBlock",
													"src": "1885:66:8",
													"statements": [
														{
															"nativeSrc": "1895:50:8",
															"nodeType": "YulAssignment",
															"src": "1895:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1939:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1939:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1908:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "1908:30:8"
																},
																"nativeSrc": "1908:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1908:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1895:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1895:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1825:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1865:5:8",
														"nodeType": "YulTypedName",
														"src": "1865:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1875:9:8",
														"nodeType": "YulTypedName",
														"src": "1875:9:8",
														"type": ""
													}
												],
												"src": "1825:126:8"
											},
											{
												"body": {
													"nativeSrc": "2042:66:8",
													"nodeType": "YulBlock",
													"src": "2042:66:8",
													"statements": [
														{
															"nativeSrc": "2052:50:8",
															"nodeType": "YulAssignment",
															"src": "2052:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2096:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2065:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2065:30:8"
																},
																"nativeSrc": "2065:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2065:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2052:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2052:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router_$1206_to_t_address",
												"nativeSrc": "1957:151:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2022:5:8",
														"nodeType": "YulTypedName",
														"src": "2022:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2032:9:8",
														"nodeType": "YulTypedName",
														"src": "2032:9:8",
														"type": ""
													}
												],
												"src": "1957:151:8"
											},
											{
												"body": {
													"nativeSrc": "2204:91:8",
													"nodeType": "YulBlock",
													"src": "2204:91:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2221:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2221:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2282:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2282:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router_$1206_to_t_address",
																			"nativeSrc": "2226:55:8",
																			"nodeType": "YulIdentifier",
																			"src": "2226:55:8"
																		},
																		"nativeSrc": "2226:62:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2226:62:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2214:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2214:6:8"
																},
																"nativeSrc": "2214:75:8",
																"nodeType": "YulFunctionCall",
																"src": "2214:75:8"
															},
															"nativeSrc": "2214:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "2214:75:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router_$1206_to_t_address_fromStack",
												"nativeSrc": "2114:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2192:5:8",
														"nodeType": "YulTypedName",
														"src": "2192:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2199:3:8",
														"nodeType": "YulTypedName",
														"src": "2199:3:8",
														"type": ""
													}
												],
												"src": "2114:181:8"
											},
											{
												"body": {
													"nativeSrc": "2424:149:8",
													"nodeType": "YulBlock",
													"src": "2424:149:8",
													"statements": [
														{
															"nativeSrc": "2434:26:8",
															"nodeType": "YulAssignment",
															"src": "2434:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2446:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2446:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2457:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2442:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:8"
																},
																"nativeSrc": "2442:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2442:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2434:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2434:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2539:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2539:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2552:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2563:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2563:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2548:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:8"
																		},
																		"nativeSrc": "2548:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2548:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router_$1206_to_t_address_fromStack",
																	"nativeSrc": "2470:68:8",
																	"nodeType": "YulIdentifier",
																	"src": "2470:68:8"
																},
																"nativeSrc": "2470:96:8",
																"nodeType": "YulFunctionCall",
																"src": "2470:96:8"
															},
															"nativeSrc": "2470:96:8",
															"nodeType": "YulExpressionStatement",
															"src": "2470:96:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router_$1206__to_t_address__fromStack_reversed",
												"nativeSrc": "2301:272:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2396:9:8",
														"nodeType": "YulTypedName",
														"src": "2396:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2408:6:8",
														"nodeType": "YulTypedName",
														"src": "2408:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2419:4:8",
														"nodeType": "YulTypedName",
														"src": "2419:4:8",
														"type": ""
													}
												],
												"src": "2301:272:8"
											},
											{
												"body": {
													"nativeSrc": "2607:152:8",
													"nodeType": "YulBlock",
													"src": "2607:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2624:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2624:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2627:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2627:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2617:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2617:6:8"
																},
																"nativeSrc": "2617:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2617:88:8"
															},
															"nativeSrc": "2617:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2617:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2721:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2721:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2724:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2724:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2714:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:8"
																},
																"nativeSrc": "2714:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2714:15:8"
															},
															"nativeSrc": "2714:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2714:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2745:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2745:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2748:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2748:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2738:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2738:6:8"
																},
																"nativeSrc": "2738:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2738:15:8"
															},
															"nativeSrc": "2738:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2738:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2579:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2579:180:8"
											},
											{
												"body": {
													"nativeSrc": "2793:152:8",
													"nodeType": "YulBlock",
													"src": "2793:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2810:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2813:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2813:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2803:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2803:6:8"
																},
																"nativeSrc": "2803:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2803:88:8"
															},
															"nativeSrc": "2803:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2803:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2907:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2907:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2910:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2910:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2900:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2900:6:8"
																},
																"nativeSrc": "2900:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2900:15:8"
															},
															"nativeSrc": "2900:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2900:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2931:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2931:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2934:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2934:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2924:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:8"
																},
																"nativeSrc": "2924:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2924:15:8"
															},
															"nativeSrc": "2924:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2924:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2765:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2765:180:8"
											},
											{
												"body": {
													"nativeSrc": "3016:53:8",
													"nodeType": "YulBlock",
													"src": "3016:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3033:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3033:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3056:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3056:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3038:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3038:17:8"
																		},
																		"nativeSrc": "3038:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3026:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:8"
																},
																"nativeSrc": "3026:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3026:37:8"
															},
															"nativeSrc": "3026:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3026:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2951:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3004:5:8",
														"nodeType": "YulTypedName",
														"src": "3004:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3011:3:8",
														"nodeType": "YulTypedName",
														"src": "3011:3:8",
														"type": ""
													}
												],
												"src": "2951:118:8"
											},
											{
												"body": {
													"nativeSrc": "3229:288:8",
													"nodeType": "YulBlock",
													"src": "3229:288:8",
													"statements": [
														{
															"nativeSrc": "3239:26:8",
															"nodeType": "YulAssignment",
															"src": "3239:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3251:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3251:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3262:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3262:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3247:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3247:3:8"
																},
																"nativeSrc": "3247:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3247:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3239:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3239:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3319:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3319:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3332:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3332:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3343:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3343:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3328:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3328:3:8"
																		},
																		"nativeSrc": "3328:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3328:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3275:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3275:43:8"
																},
																"nativeSrc": "3275:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3275:71:8"
															},
															"nativeSrc": "3275:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3275:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3400:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3400:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3413:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3424:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3424:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3409:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:8"
																		},
																		"nativeSrc": "3409:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3409:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3356:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3356:43:8"
																},
																"nativeSrc": "3356:72:8",
																"nodeType": "YulFunctionCall",
																"src": "3356:72:8"
															},
															"nativeSrc": "3356:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "3356:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3482:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3482:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3495:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3495:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3506:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3506:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3491:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3491:3:8"
																		},
																		"nativeSrc": "3491:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3438:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3438:43:8"
																},
																"nativeSrc": "3438:72:8",
																"nodeType": "YulFunctionCall",
																"src": "3438:72:8"
															},
															"nativeSrc": "3438:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "3438:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3075:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3185:9:8",
														"nodeType": "YulTypedName",
														"src": "3185:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3197:6:8",
														"nodeType": "YulTypedName",
														"src": "3197:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3205:6:8",
														"nodeType": "YulTypedName",
														"src": "3205:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3213:6:8",
														"nodeType": "YulTypedName",
														"src": "3213:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3224:4:8",
														"nodeType": "YulTypedName",
														"src": "3224:4:8",
														"type": ""
													}
												],
												"src": "3075:442:8"
											},
											{
												"body": {
													"nativeSrc": "3565:48:8",
													"nodeType": "YulBlock",
													"src": "3565:48:8",
													"statements": [
														{
															"nativeSrc": "3575:32:8",
															"nodeType": "YulAssignment",
															"src": "3575:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3600:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3600:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3593:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3593:6:8"
																		},
																		"nativeSrc": "3593:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3593:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3586:6:8"
																},
																"nativeSrc": "3586:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3586:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3575:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3575:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3523:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3547:5:8",
														"nodeType": "YulTypedName",
														"src": "3547:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3557:7:8",
														"nodeType": "YulTypedName",
														"src": "3557:7:8",
														"type": ""
													}
												],
												"src": "3523:90:8"
											},
											{
												"body": {
													"nativeSrc": "3659:76:8",
													"nodeType": "YulBlock",
													"src": "3659:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3713:16:8",
																"nodeType": "YulBlock",
																"src": "3713:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3722:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3722:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3725:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3725:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3715:6:8"
																			},
																			"nativeSrc": "3715:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3715:12:8"
																		},
																		"nativeSrc": "3715:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3715:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3682:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3682:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3704:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3704:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3689:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "3689:14:8"
																				},
																				"nativeSrc": "3689:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3689:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3679:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3679:2:8"
																		},
																		"nativeSrc": "3679:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3679:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:8"
																},
																"nativeSrc": "3672:40:8",
																"nodeType": "YulFunctionCall",
																"src": "3672:40:8"
															},
															"nativeSrc": "3669:60:8",
															"nodeType": "YulIf",
															"src": "3669:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3619:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3652:5:8",
														"nodeType": "YulTypedName",
														"src": "3652:5:8",
														"type": ""
													}
												],
												"src": "3619:116:8"
											},
											{
												"body": {
													"nativeSrc": "3801:77:8",
													"nodeType": "YulBlock",
													"src": "3801:77:8",
													"statements": [
														{
															"nativeSrc": "3811:22:8",
															"nodeType": "YulAssignment",
															"src": "3811:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3826:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3826:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3820:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3820:5:8"
																},
																"nativeSrc": "3820:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3820:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3811:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3811:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3866:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3866:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3842:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "3842:23:8"
																},
																"nativeSrc": "3842:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3842:30:8"
															},
															"nativeSrc": "3842:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3842:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "3741:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3779:6:8",
														"nodeType": "YulTypedName",
														"src": "3779:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3787:3:8",
														"nodeType": "YulTypedName",
														"src": "3787:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3795:5:8",
														"nodeType": "YulTypedName",
														"src": "3795:5:8",
														"type": ""
													}
												],
												"src": "3741:137:8"
											},
											{
												"body": {
													"nativeSrc": "3958:271:8",
													"nodeType": "YulBlock",
													"src": "3958:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4004:83:8",
																"nodeType": "YulBlock",
																"src": "4004:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4006:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4006:77:8"
																			},
																			"nativeSrc": "4006:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:79:8"
																		},
																		"nativeSrc": "4006:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3979:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3979:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3988:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3988:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3975:3:8"
																		},
																		"nativeSrc": "3975:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3975:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4000:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4000:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3971:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3971:3:8"
																},
																"nativeSrc": "3971:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3971:32:8"
															},
															"nativeSrc": "3968:119:8",
															"nodeType": "YulIf",
															"src": "3968:119:8"
														},
														{
															"nativeSrc": "4097:125:8",
															"nodeType": "YulBlock",
															"src": "4097:125:8",
															"statements": [
																{
																	"nativeSrc": "4112:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4112:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4126:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4126:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4116:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4116:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4141:71:8",
																	"nodeType": "YulAssignment",
																	"src": "4141:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4184:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4184:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4195:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4195:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4180:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4180:3:8"
																				},
																				"nativeSrc": "4180:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4180:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4204:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4204:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4151:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "4151:28:8"
																		},
																		"nativeSrc": "4151:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4151:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4141:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4141:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3884:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3928:9:8",
														"nodeType": "YulTypedName",
														"src": "3928:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3939:7:8",
														"nodeType": "YulTypedName",
														"src": "3939:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3951:6:8",
														"nodeType": "YulTypedName",
														"src": "3951:6:8",
														"type": ""
													}
												],
												"src": "3884:345:8"
											},
											{
												"body": {
													"nativeSrc": "4263:152:8",
													"nodeType": "YulBlock",
													"src": "4263:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4280:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4280:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4283:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4283:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4273:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:8"
																},
																"nativeSrc": "4273:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4273:88:8"
															},
															"nativeSrc": "4273:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4273:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4377:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4377:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4380:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4380:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4370:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:8"
																},
																"nativeSrc": "4370:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4370:15:8"
															},
															"nativeSrc": "4370:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4370:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4401:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4404:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4394:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4394:6:8"
																},
																"nativeSrc": "4394:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4394:15:8"
															},
															"nativeSrc": "4394:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4394:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4235:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4235:180:8"
											},
											{
												"body": {
													"nativeSrc": "4465:147:8",
													"nodeType": "YulBlock",
													"src": "4465:147:8",
													"statements": [
														{
															"nativeSrc": "4475:25:8",
															"nodeType": "YulAssignment",
															"src": "4475:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4498:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4498:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4480:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4480:17:8"
																},
																"nativeSrc": "4480:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4480:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4475:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "4475:1:8"
																}
															]
														},
														{
															"nativeSrc": "4509:25:8",
															"nodeType": "YulAssignment",
															"src": "4509:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4532:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4532:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4514:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4514:17:8"
																},
																"nativeSrc": "4514:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4514:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4509:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "4509:1:8"
																}
															]
														},
														{
															"nativeSrc": "4543:16:8",
															"nodeType": "YulAssignment",
															"src": "4543:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4554:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4554:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4557:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4557:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4550:3:8"
																},
																"nativeSrc": "4550:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4550:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4543:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4543:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4583:22:8",
																"nodeType": "YulBlock",
																"src": "4583:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4585:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4585:16:8"
																			},
																			"nativeSrc": "4585:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4585:18:8"
																		},
																		"nativeSrc": "4585:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4585:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4575:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4575:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4578:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4572:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4572:2:8"
																},
																"nativeSrc": "4572:10:8",
																"nodeType": "YulFunctionCall",
																"src": "4572:10:8"
															},
															"nativeSrc": "4569:36:8",
															"nodeType": "YulIf",
															"src": "4569:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4421:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4452:1:8",
														"nodeType": "YulTypedName",
														"src": "4452:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4455:1:8",
														"nodeType": "YulTypedName",
														"src": "4455:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4461:3:8",
														"nodeType": "YulTypedName",
														"src": "4461:3:8",
														"type": ""
													}
												],
												"src": "4421:191:8"
											},
											{
												"body": {
													"nativeSrc": "4671:32:8",
													"nodeType": "YulBlock",
													"src": "4671:32:8",
													"statements": [
														{
															"nativeSrc": "4681:16:8",
															"nodeType": "YulAssignment",
															"src": "4681:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "4692:5:8",
																"nodeType": "YulIdentifier",
																"src": "4692:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4681:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4681:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "4618:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4653:5:8",
														"nodeType": "YulTypedName",
														"src": "4653:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4663:7:8",
														"nodeType": "YulTypedName",
														"src": "4663:7:8",
														"type": ""
													}
												],
												"src": "4618:85:8"
											},
											{
												"body": {
													"nativeSrc": "4777:90:8",
													"nodeType": "YulBlock",
													"src": "4777:90:8",
													"statements": [
														{
															"nativeSrc": "4787:74:8",
															"nodeType": "YulAssignment",
															"src": "4787:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4853:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4853:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "4827:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "4827:25:8"
																				},
																				"nativeSrc": "4827:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4827:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4818:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "4818:8:8"
																		},
																		"nativeSrc": "4818:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4818:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4800:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4800:17:8"
																},
																"nativeSrc": "4800:61:8",
																"nodeType": "YulFunctionCall",
																"src": "4800:61:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4787:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4787:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "4709:158:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4757:5:8",
														"nodeType": "YulTypedName",
														"src": "4757:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4767:9:8",
														"nodeType": "YulTypedName",
														"src": "4767:9:8",
														"type": ""
													}
												],
												"src": "4709:158:8"
											},
											{
												"body": {
													"nativeSrc": "4946:74:8",
													"nodeType": "YulBlock",
													"src": "4946:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4963:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4963:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5007:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5007:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "4968:38:8",
																			"nodeType": "YulIdentifier",
																			"src": "4968:38:8"
																		},
																		"nativeSrc": "4968:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4968:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4956:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:8"
																},
																"nativeSrc": "4956:58:8",
																"nodeType": "YulFunctionCall",
																"src": "4956:58:8"
															},
															"nativeSrc": "4956:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "4956:58:8"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "4873:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4934:5:8",
														"nodeType": "YulTypedName",
														"src": "4934:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4941:3:8",
														"nodeType": "YulTypedName",
														"src": "4941:3:8",
														"type": ""
													}
												],
												"src": "4873:147:8"
											},
											{
												"body": {
													"nativeSrc": "5100:40:8",
													"nodeType": "YulBlock",
													"src": "5100:40:8",
													"statements": [
														{
															"nativeSrc": "5111:22:8",
															"nodeType": "YulAssignment",
															"src": "5111:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5127:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5127:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5121:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5121:5:8"
																},
																"nativeSrc": "5121:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5121:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5111:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5111:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5026:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5083:5:8",
														"nodeType": "YulTypedName",
														"src": "5083:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5093:6:8",
														"nodeType": "YulTypedName",
														"src": "5093:6:8",
														"type": ""
													}
												],
												"src": "5026:114:8"
											},
											{
												"body": {
													"nativeSrc": "5257:73:8",
													"nodeType": "YulBlock",
													"src": "5257:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5274:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5274:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5279:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5279:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5267:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5267:6:8"
																},
																"nativeSrc": "5267:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5267:19:8"
															},
															"nativeSrc": "5267:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "5267:19:8"
														},
														{
															"nativeSrc": "5295:29:8",
															"nodeType": "YulAssignment",
															"src": "5295:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5314:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5319:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5319:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5310:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:8"
																},
																"nativeSrc": "5310:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5310:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5295:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "5295:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5146:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5229:3:8",
														"nodeType": "YulTypedName",
														"src": "5229:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5234:6:8",
														"nodeType": "YulTypedName",
														"src": "5234:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5245:11:8",
														"nodeType": "YulTypedName",
														"src": "5245:11:8",
														"type": ""
													}
												],
												"src": "5146:184:8"
											},
											{
												"body": {
													"nativeSrc": "5408:60:8",
													"nodeType": "YulBlock",
													"src": "5408:60:8",
													"statements": [
														{
															"nativeSrc": "5418:11:8",
															"nodeType": "YulAssignment",
															"src": "5418:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "5426:3:8",
																"nodeType": "YulIdentifier",
																"src": "5426:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5418:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5418:4:8"
																}
															]
														},
														{
															"nativeSrc": "5439:22:8",
															"nodeType": "YulAssignment",
															"src": "5439:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5451:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5451:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5456:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5456:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5447:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:8"
																},
																"nativeSrc": "5447:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5447:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5439:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5439:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5336:132:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5395:3:8",
														"nodeType": "YulTypedName",
														"src": "5395:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5403:4:8",
														"nodeType": "YulTypedName",
														"src": "5403:4:8",
														"type": ""
													}
												],
												"src": "5336:132:8"
											},
											{
												"body": {
													"nativeSrc": "5529:53:8",
													"nodeType": "YulBlock",
													"src": "5529:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5546:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5546:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5569:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5569:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5551:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5551:17:8"
																		},
																		"nativeSrc": "5551:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5551:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5539:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:8"
																},
																"nativeSrc": "5539:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5539:37:8"
															},
															"nativeSrc": "5539:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5539:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "5474:108:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5517:5:8",
														"nodeType": "YulTypedName",
														"src": "5517:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5524:3:8",
														"nodeType": "YulTypedName",
														"src": "5524:3:8",
														"type": ""
													}
												],
												"src": "5474:108:8"
											},
											{
												"body": {
													"nativeSrc": "5668:99:8",
													"nodeType": "YulBlock",
													"src": "5668:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5712:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5720:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5720:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "5678:33:8",
																	"nodeType": "YulIdentifier",
																	"src": "5678:33:8"
																},
																"nativeSrc": "5678:46:8",
																"nodeType": "YulFunctionCall",
																"src": "5678:46:8"
															},
															"nativeSrc": "5678:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "5678:46:8"
														},
														{
															"nativeSrc": "5733:28:8",
															"nodeType": "YulAssignment",
															"src": "5733:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5751:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5751:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5756:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5756:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5747:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5747:3:8"
																},
																"nativeSrc": "5747:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5747:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "5733:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "5733:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "5588:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "5641:6:8",
														"nodeType": "YulTypedName",
														"src": "5641:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5649:3:8",
														"nodeType": "YulTypedName",
														"src": "5649:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "5657:10:8",
														"nodeType": "YulTypedName",
														"src": "5657:10:8",
														"type": ""
													}
												],
												"src": "5588:179:8"
											},
											{
												"body": {
													"nativeSrc": "5848:38:8",
													"nodeType": "YulBlock",
													"src": "5848:38:8",
													"statements": [
														{
															"nativeSrc": "5858:22:8",
															"nodeType": "YulAssignment",
															"src": "5858:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5870:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5870:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5875:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5866:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5866:3:8"
																},
																"nativeSrc": "5866:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5866:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "5858:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5858:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5773:113:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5835:3:8",
														"nodeType": "YulTypedName",
														"src": "5835:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "5843:4:8",
														"nodeType": "YulTypedName",
														"src": "5843:4:8",
														"type": ""
													}
												],
												"src": "5773:113:8"
											},
											{
												"body": {
													"nativeSrc": "6046:608:8",
													"nodeType": "YulBlock",
													"src": "6046:608:8",
													"statements": [
														{
															"nativeSrc": "6056:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6056:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6118:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6118:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6070:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "6070:47:8"
																},
																"nativeSrc": "6070:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6070:54:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6060:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6060:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6133:93:8",
															"nodeType": "YulAssignment",
															"src": "6133:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6214:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6214:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6219:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6219:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6140:73:8",
																	"nodeType": "YulIdentifier",
																	"src": "6140:73:8"
																},
																"nativeSrc": "6140:86:8",
																"nodeType": "YulFunctionCall",
																"src": "6140:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6133:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6133:3:8"
																}
															]
														},
														{
															"nativeSrc": "6235:71:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6235:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6300:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6300:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6250:49:8",
																	"nodeType": "YulIdentifier",
																	"src": "6250:49:8"
																},
																"nativeSrc": "6250:56:8",
																"nodeType": "YulFunctionCall",
																"src": "6250:56:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6239:7:8",
																	"nodeType": "YulTypedName",
																	"src": "6239:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6315:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6315:21:8",
															"value": {
																"name": "baseRef",
																"nativeSrc": "6329:7:8",
																"nodeType": "YulIdentifier",
																"src": "6329:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6319:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6319:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6405:224:8",
																"nodeType": "YulBlock",
																"src": "6405:224:8",
																"statements": [
																	{
																		"nativeSrc": "6419:34:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6419:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6446:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6446:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6440:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6440:5:8"
																			},
																			"nativeSrc": "6440:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6440:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "6423:13:8",
																				"nodeType": "YulTypedName",
																				"src": "6423:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6466:70:8",
																		"nodeType": "YulAssignment",
																		"src": "6466:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "6517:13:8",
																					"nodeType": "YulIdentifier",
																					"src": "6517:13:8"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "6532:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6532:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "6473:43:8",
																				"nodeType": "YulIdentifier",
																				"src": "6473:43:8"
																			},
																			"nativeSrc": "6473:63:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6473:63:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6466:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6466:3:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6549:70:8",
																		"nodeType": "YulAssignment",
																		"src": "6549:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6612:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6612:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "6559:52:8",
																				"nodeType": "YulIdentifier",
																				"src": "6559:52:8"
																			},
																			"nativeSrc": "6559:60:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6559:60:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6549:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6549:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6367:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6367:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6370:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6370:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6364:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6364:2:8"
																},
																"nativeSrc": "6364:13:8",
																"nodeType": "YulFunctionCall",
																"src": "6364:13:8"
															},
															"nativeSrc": "6345:284:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6378:18:8",
																"nodeType": "YulBlock",
																"src": "6378:18:8",
																"statements": [
																	{
																		"nativeSrc": "6380:14:8",
																		"nodeType": "YulAssignment",
																		"src": "6380:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6389:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "6389:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6392:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6392:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6385:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6385:3:8"
																			},
																			"nativeSrc": "6385:9:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6380:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "6380:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6349:14:8",
																"nodeType": "YulBlock",
																"src": "6349:14:8",
																"statements": [
																	{
																		"nativeSrc": "6351:10:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6351:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6360:1:8",
																			"nodeType": "YulLiteral",
																			"src": "6360:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "6355:1:8",
																				"nodeType": "YulTypedName",
																				"src": "6355:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6345:284:8"
														},
														{
															"nativeSrc": "6638:10:8",
															"nodeType": "YulAssignment",
															"src": "6638:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "6645:3:8",
																"nodeType": "YulIdentifier",
																"src": "6645:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6638:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5922:732:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6025:5:8",
														"nodeType": "YulTypedName",
														"src": "6025:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6032:3:8",
														"nodeType": "YulTypedName",
														"src": "6032:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6041:3:8",
														"nodeType": "YulTypedName",
														"src": "6041:3:8",
														"type": ""
													}
												],
												"src": "5922:732:8"
											},
											{
												"body": {
													"nativeSrc": "6928:563:8",
													"nodeType": "YulBlock",
													"src": "6928:563:8",
													"statements": [
														{
															"nativeSrc": "6938:27:8",
															"nodeType": "YulAssignment",
															"src": "6938:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6950:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6950:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6961:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6961:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6946:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6946:3:8"
																},
																"nativeSrc": "6946:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6946:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6938:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6938:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7019:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7019:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7032:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7032:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7043:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7043:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7028:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7028:3:8"
																		},
																		"nativeSrc": "7028:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7028:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6975:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6975:43:8"
																},
																"nativeSrc": "6975:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6975:71:8"
															},
															"nativeSrc": "6975:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6975:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7108:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7108:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7121:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7121:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7132:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7132:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7117:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7117:3:8"
																		},
																		"nativeSrc": "7117:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7117:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "7056:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "7056:51:8"
																},
																"nativeSrc": "7056:80:8",
																"nodeType": "YulFunctionCall",
																"src": "7056:80:8"
															},
															"nativeSrc": "7056:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "7056:80:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7157:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7157:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7168:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7168:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7153:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:8"
																		},
																		"nativeSrc": "7153:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7177:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7177:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7183:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7183:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7173:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7173:3:8"
																		},
																		"nativeSrc": "7173:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7173:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7146:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7146:6:8"
																},
																"nativeSrc": "7146:48:8",
																"nodeType": "YulFunctionCall",
																"src": "7146:48:8"
															},
															"nativeSrc": "7146:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "7146:48:8"
														},
														{
															"nativeSrc": "7203:116:8",
															"nodeType": "YulAssignment",
															"src": "7203:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7305:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7305:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7314:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7314:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7211:93:8",
																	"nodeType": "YulIdentifier",
																	"src": "7211:93:8"
																},
																"nativeSrc": "7211:108:8",
																"nodeType": "YulFunctionCall",
																"src": "7211:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7203:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7203:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7373:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7373:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7386:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7386:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7397:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7397:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7382:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7382:3:8"
																		},
																		"nativeSrc": "7382:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7382:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7329:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7329:43:8"
																},
																"nativeSrc": "7329:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7329:72:8"
															},
															"nativeSrc": "7329:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7329:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "7455:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7455:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7468:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7468:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7479:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7479:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7464:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:8"
																		},
																		"nativeSrc": "7464:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7464:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7411:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7411:43:8"
																},
																"nativeSrc": "7411:73:8",
																"nodeType": "YulFunctionCall",
																"src": "7411:73:8"
															},
															"nativeSrc": "7411:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "7411:73:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6660:831:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6868:9:8",
														"nodeType": "YulTypedName",
														"src": "6868:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6880:6:8",
														"nodeType": "YulTypedName",
														"src": "6880:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6888:6:8",
														"nodeType": "YulTypedName",
														"src": "6888:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6896:6:8",
														"nodeType": "YulTypedName",
														"src": "6896:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6904:6:8",
														"nodeType": "YulTypedName",
														"src": "6904:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6912:6:8",
														"nodeType": "YulTypedName",
														"src": "6912:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6923:4:8",
														"nodeType": "YulTypedName",
														"src": "6923:4:8",
														"type": ""
													}
												],
												"src": "6660:831:8"
											},
											{
												"body": {
													"nativeSrc": "7586:28:8",
													"nodeType": "YulBlock",
													"src": "7586:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7603:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7603:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7606:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7596:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7596:6:8"
																},
																"nativeSrc": "7596:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7596:12:8"
															},
															"nativeSrc": "7596:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "7596:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7497:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7497:117:8"
											},
											{
												"body": {
													"nativeSrc": "7668:54:8",
													"nodeType": "YulBlock",
													"src": "7668:54:8",
													"statements": [
														{
															"nativeSrc": "7678:38:8",
															"nodeType": "YulAssignment",
															"src": "7678:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7696:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7696:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7703:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7703:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7692:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:8"
																		},
																		"nativeSrc": "7692:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7692:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7712:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7712:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7708:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:8"
																		},
																		"nativeSrc": "7708:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7688:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7688:3:8"
																},
																"nativeSrc": "7688:28:8",
																"nodeType": "YulFunctionCall",
																"src": "7688:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7678:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7678:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "7620:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7651:5:8",
														"nodeType": "YulTypedName",
														"src": "7651:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7661:6:8",
														"nodeType": "YulTypedName",
														"src": "7661:6:8",
														"type": ""
													}
												],
												"src": "7620:102:8"
											},
											{
												"body": {
													"nativeSrc": "7771:238:8",
													"nodeType": "YulBlock",
													"src": "7771:238:8",
													"statements": [
														{
															"nativeSrc": "7781:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7781:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7803:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7803:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7833:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7833:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7811:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "7811:21:8"
																		},
																		"nativeSrc": "7811:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7811:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7799:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7799:3:8"
																},
																"nativeSrc": "7799:40:8",
																"nodeType": "YulFunctionCall",
																"src": "7799:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7785:10:8",
																	"nodeType": "YulTypedName",
																	"src": "7785:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7950:22:8",
																"nodeType": "YulBlock",
																"src": "7950:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7952:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7952:16:8"
																			},
																			"nativeSrc": "7952:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7952:18:8"
																		},
																		"nativeSrc": "7952:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7952:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7893:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "7893:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7905:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7905:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7890:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7890:2:8"
																		},
																		"nativeSrc": "7890:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7890:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7929:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "7929:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7941:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7941:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7926:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7926:2:8"
																		},
																		"nativeSrc": "7926:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7926:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7887:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7887:2:8"
																},
																"nativeSrc": "7887:62:8",
																"nodeType": "YulFunctionCall",
																"src": "7887:62:8"
															},
															"nativeSrc": "7884:88:8",
															"nodeType": "YulIf",
															"src": "7884:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7988:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7988:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7992:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "7992:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7981:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7981:6:8"
																},
																"nativeSrc": "7981:22:8",
																"nodeType": "YulFunctionCall",
																"src": "7981:22:8"
															},
															"nativeSrc": "7981:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "7981:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7728:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7757:6:8",
														"nodeType": "YulTypedName",
														"src": "7757:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7765:4:8",
														"nodeType": "YulTypedName",
														"src": "7765:4:8",
														"type": ""
													}
												],
												"src": "7728:281:8"
											},
											{
												"body": {
													"nativeSrc": "8056:88:8",
													"nodeType": "YulBlock",
													"src": "8056:88:8",
													"statements": [
														{
															"nativeSrc": "8066:30:8",
															"nodeType": "YulAssignment",
															"src": "8066:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8076:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "8076:18:8"
																},
																"nativeSrc": "8076:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8076:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8066:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8066:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8125:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8125:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8133:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8133:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8105:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "8105:19:8"
																},
																"nativeSrc": "8105:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8105:33:8"
															},
															"nativeSrc": "8105:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "8105:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8015:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8040:4:8",
														"nodeType": "YulTypedName",
														"src": "8040:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8049:6:8",
														"nodeType": "YulTypedName",
														"src": "8049:6:8",
														"type": ""
													}
												],
												"src": "8015:129:8"
											},
											{
												"body": {
													"nativeSrc": "8232:229:8",
													"nodeType": "YulBlock",
													"src": "8232:229:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8337:22:8",
																"nodeType": "YulBlock",
																"src": "8337:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8339:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8339:16:8"
																			},
																			"nativeSrc": "8339:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8339:18:8"
																		},
																		"nativeSrc": "8339:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8339:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8309:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8309:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8317:18:8",
																		"nodeType": "YulLiteral",
																		"src": "8317:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8306:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8306:2:8"
																},
																"nativeSrc": "8306:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8306:30:8"
															},
															"nativeSrc": "8303:56:8",
															"nodeType": "YulIf",
															"src": "8303:56:8"
														},
														{
															"nativeSrc": "8369:25:8",
															"nodeType": "YulAssignment",
															"src": "8369:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8381:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8389:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8377:3:8"
																},
																"nativeSrc": "8377:17:8",
																"nodeType": "YulFunctionCall",
																"src": "8377:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8369:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8369:4:8"
																}
															]
														},
														{
															"nativeSrc": "8431:23:8",
															"nodeType": "YulAssignment",
															"src": "8431:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8443:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8443:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8449:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8449:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8439:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8439:3:8"
																},
																"nativeSrc": "8439:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8439:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8431:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8431:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8150:311:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8216:6:8",
														"nodeType": "YulTypedName",
														"src": "8216:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8227:4:8",
														"nodeType": "YulTypedName",
														"src": "8227:4:8",
														"type": ""
													}
												],
												"src": "8150:311:8"
											},
											{
												"body": {
													"nativeSrc": "8556:28:8",
													"nodeType": "YulBlock",
													"src": "8556:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8573:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8573:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8576:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8576:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8566:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8566:6:8"
																},
																"nativeSrc": "8566:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8566:12:8"
															},
															"nativeSrc": "8566:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "8566:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "8467:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8467:117:8"
											},
											{
												"body": {
													"nativeSrc": "8653:80:8",
													"nodeType": "YulBlock",
													"src": "8653:80:8",
													"statements": [
														{
															"nativeSrc": "8663:22:8",
															"nodeType": "YulAssignment",
															"src": "8663:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8678:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8678:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8672:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8672:5:8"
																},
																"nativeSrc": "8672:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8672:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8663:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8663:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8721:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8721:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8694:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "8694:26:8"
																},
																"nativeSrc": "8694:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8694:33:8"
															},
															"nativeSrc": "8694:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "8694:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8590:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8631:6:8",
														"nodeType": "YulTypedName",
														"src": "8631:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8639:3:8",
														"nodeType": "YulTypedName",
														"src": "8639:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8647:5:8",
														"nodeType": "YulTypedName",
														"src": "8647:5:8",
														"type": ""
													}
												],
												"src": "8590:143:8"
											},
											{
												"body": {
													"nativeSrc": "8869:619:8",
													"nodeType": "YulBlock",
													"src": "8869:619:8",
													"statements": [
														{
															"nativeSrc": "8879:90:8",
															"nodeType": "YulAssignment",
															"src": "8879:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8961:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8961:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8904:56:8",
																			"nodeType": "YulIdentifier",
																			"src": "8904:56:8"
																		},
																		"nativeSrc": "8904:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8904:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8888:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "8888:15:8"
																},
																"nativeSrc": "8888:81:8",
																"nodeType": "YulFunctionCall",
																"src": "8888:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8879:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8879:5:8"
																}
															]
														},
														{
															"nativeSrc": "8978:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8978:16:8",
															"value": {
																"name": "array",
																"nativeSrc": "8989:5:8",
																"nodeType": "YulIdentifier",
																"src": "8989:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8982:3:8",
																	"nodeType": "YulTypedName",
																	"src": "8982:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9011:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9011:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9004:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:8"
																},
																"nativeSrc": "9004:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9004:21:8"
															},
															"nativeSrc": "9004:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9004:21:8"
														},
														{
															"nativeSrc": "9034:23:8",
															"nodeType": "YulAssignment",
															"src": "9034:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9045:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9045:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9052:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9052:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9041:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:8"
																},
																"nativeSrc": "9041:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9041:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "9034:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:8"
																}
															]
														},
														{
															"nativeSrc": "9067:44:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9067:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9085:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9085:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9097:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9097:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9105:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9105:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9093:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9093:3:8"
																		},
																		"nativeSrc": "9093:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9093:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9081:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9081:3:8"
																},
																"nativeSrc": "9081:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9081:30:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "9071:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9071:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9139:103:8",
																"nodeType": "YulBlock",
																"src": "9139:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9153:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "9153:77:8"
																			},
																			"nativeSrc": "9153:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9153:79:8"
																		},
																		"nativeSrc": "9153:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9153:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9126:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9126:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9134:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9134:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9123:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9123:2:8"
																},
																"nativeSrc": "9123:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9123:15:8"
															},
															"nativeSrc": "9120:122:8",
															"nodeType": "YulIf",
															"src": "9120:122:8"
														},
														{
															"body": {
																"nativeSrc": "9327:155:8",
																"nodeType": "YulBlock",
																"src": "9327:155:8",
																"statements": [
																	{
																		"nativeSrc": "9342:21:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9342:21:8",
																		"value": {
																			"name": "src",
																			"nativeSrc": "9360:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9360:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "9346:10:8",
																				"nodeType": "YulTypedName",
																				"src": "9346:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9384:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9384:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "9421:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "9421:10:8"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "9433:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9433:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nativeSrc": "9389:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "9389:31:8"
																					},
																					"nativeSrc": "9389:48:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9389:48:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9377:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9377:6:8"
																			},
																			"nativeSrc": "9377:61:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9377:61:8"
																		},
																		"nativeSrc": "9377:61:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9377:61:8"
																	},
																	{
																		"nativeSrc": "9451:21:8",
																		"nodeType": "YulAssignment",
																		"src": "9451:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9462:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9462:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9467:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9467:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9458:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9458:3:8"
																			},
																			"nativeSrc": "9458:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9458:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "9451:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9451:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9280:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9280:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9285:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9285:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9277:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9277:2:8"
																},
																"nativeSrc": "9277:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9277:15:8"
															},
															"nativeSrc": "9251:231:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9293:25:8",
																"nodeType": "YulBlock",
																"src": "9293:25:8",
																"statements": [
																	{
																		"nativeSrc": "9295:21:8",
																		"nodeType": "YulAssignment",
																		"src": "9295:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9306:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9306:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9311:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9311:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9302:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9302:3:8"
																			},
																			"nativeSrc": "9302:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9302:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "9295:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9295:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9255:21:8",
																"nodeType": "YulBlock",
																"src": "9255:21:8",
																"statements": [
																	{
																		"nativeSrc": "9257:17:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9257:17:8",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "9268:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9268:6:8"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "9261:3:8",
																				"nodeType": "YulTypedName",
																				"src": "9261:3:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9251:231:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "8756:732:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8839:6:8",
														"nodeType": "YulTypedName",
														"src": "8839:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8847:6:8",
														"nodeType": "YulTypedName",
														"src": "8847:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8855:3:8",
														"nodeType": "YulTypedName",
														"src": "8855:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8863:5:8",
														"nodeType": "YulTypedName",
														"src": "8863:5:8",
														"type": ""
													}
												],
												"src": "8756:732:8"
											},
											{
												"body": {
													"nativeSrc": "9599:297:8",
													"nodeType": "YulBlock",
													"src": "9599:297:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9648:83:8",
																"nodeType": "YulBlock",
																"src": "9648:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9650:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "9650:77:8"
																			},
																			"nativeSrc": "9650:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9650:79:8"
																		},
																		"nativeSrc": "9650:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9650:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9627:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9627:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9635:4:8",
																						"nodeType": "YulLiteral",
																						"src": "9635:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9623:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9623:3:8"
																				},
																				"nativeSrc": "9623:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9623:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9642:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9642:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9619:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9619:3:8"
																		},
																		"nativeSrc": "9619:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9619:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9612:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9612:6:8"
																},
																"nativeSrc": "9612:35:8",
																"nodeType": "YulFunctionCall",
																"src": "9612:35:8"
															},
															"nativeSrc": "9609:122:8",
															"nodeType": "YulIf",
															"src": "9609:122:8"
														},
														{
															"nativeSrc": "9740:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9740:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9760:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9760:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9754:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9754:5:8"
																},
																"nativeSrc": "9754:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9754:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9744:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9744:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9776:114:8",
															"nodeType": "YulAssignment",
															"src": "9776:114:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9863:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9863:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9871:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9871:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9859:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9859:3:8"
																		},
																		"nativeSrc": "9859:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9878:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9878:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9886:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9886:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "9785:73:8",
																	"nodeType": "YulIdentifier",
																	"src": "9785:73:8"
																},
																"nativeSrc": "9785:105:8",
																"nodeType": "YulFunctionCall",
																"src": "9785:105:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9776:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9776:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "9511:385:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9577:6:8",
														"nodeType": "YulTypedName",
														"src": "9577:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9585:3:8",
														"nodeType": "YulTypedName",
														"src": "9585:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9593:5:8",
														"nodeType": "YulTypedName",
														"src": "9593:5:8",
														"type": ""
													}
												],
												"src": "9511:385:8"
											},
											{
												"body": {
													"nativeSrc": "10004:452:8",
													"nodeType": "YulBlock",
													"src": "10004:452:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10050:83:8",
																"nodeType": "YulBlock",
																"src": "10050:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10052:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10052:77:8"
																			},
																			"nativeSrc": "10052:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10052:79:8"
																		},
																		"nativeSrc": "10052:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10052:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10025:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10025:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10034:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10034:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10021:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10021:3:8"
																		},
																		"nativeSrc": "10021:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10021:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10046:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10046:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10017:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10017:3:8"
																},
																"nativeSrc": "10017:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10017:32:8"
															},
															"nativeSrc": "10014:119:8",
															"nodeType": "YulIf",
															"src": "10014:119:8"
														},
														{
															"nativeSrc": "10143:306:8",
															"nodeType": "YulBlock",
															"src": "10143:306:8",
															"statements": [
																{
																	"nativeSrc": "10158:38:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10158:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10182:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10182:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10193:1:8",
																						"nodeType": "YulLiteral",
																						"src": "10193:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10178:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10178:3:8"
																				},
																				"nativeSrc": "10178:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10178:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10172:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "10172:5:8"
																		},
																		"nativeSrc": "10172:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10172:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10162:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10162:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10243:83:8",
																		"nodeType": "YulBlock",
																		"src": "10243:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10245:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "10245:77:8"
																					},
																					"nativeSrc": "10245:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10245:79:8"
																				},
																				"nativeSrc": "10245:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "10245:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10215:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10215:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10223:18:8",
																				"nodeType": "YulLiteral",
																				"src": "10223:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10212:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10212:2:8"
																		},
																		"nativeSrc": "10212:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10212:30:8"
																	},
																	"nativeSrc": "10209:117:8",
																	"nodeType": "YulIf",
																	"src": "10209:117:8"
																},
																{
																	"nativeSrc": "10340:99:8",
																	"nodeType": "YulAssignment",
																	"src": "10340:99:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10411:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10411:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10422:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10422:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10407:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10407:3:8"
																				},
																				"nativeSrc": "10407:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10407:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10431:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10431:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "10350:56:8",
																			"nodeType": "YulIdentifier",
																			"src": "10350:56:8"
																		},
																		"nativeSrc": "10350:89:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10350:89:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10340:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10340:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "9902:554:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9974:9:8",
														"nodeType": "YulTypedName",
														"src": "9974:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9985:7:8",
														"nodeType": "YulTypedName",
														"src": "9985:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9997:6:8",
														"nodeType": "YulTypedName",
														"src": "9997:6:8",
														"type": ""
													}
												],
												"src": "9902:554:8"
											},
											{
												"body": {
													"nativeSrc": "10702:480:8",
													"nodeType": "YulBlock",
													"src": "10702:480:8",
													"statements": [
														{
															"nativeSrc": "10712:27:8",
															"nodeType": "YulAssignment",
															"src": "10712:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10724:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10724:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10735:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10735:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10720:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:8"
																},
																"nativeSrc": "10720:19:8",
																"nodeType": "YulFunctionCall",
																"src": "10720:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10712:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10712:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10801:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10801:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10814:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10814:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10825:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10825:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10810:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10810:3:8"
																		},
																		"nativeSrc": "10810:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10810:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10749:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "10749:51:8"
																},
																"nativeSrc": "10749:79:8",
																"nodeType": "YulFunctionCall",
																"src": "10749:79:8"
															},
															"nativeSrc": "10749:79:8",
															"nodeType": "YulExpressionStatement",
															"src": "10749:79:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10849:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10849:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10860:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10860:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10845:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10845:3:8"
																		},
																		"nativeSrc": "10845:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10845:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10869:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10869:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10875:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10875:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10865:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10865:3:8"
																		},
																		"nativeSrc": "10865:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10865:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10838:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10838:6:8"
																},
																"nativeSrc": "10838:48:8",
																"nodeType": "YulFunctionCall",
																"src": "10838:48:8"
															},
															"nativeSrc": "10838:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "10838:48:8"
														},
														{
															"nativeSrc": "10895:116:8",
															"nodeType": "YulAssignment",
															"src": "10895:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10997:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10997:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11006:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11006:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10903:93:8",
																	"nodeType": "YulIdentifier",
																	"src": "10903:93:8"
																},
																"nativeSrc": "10903:108:8",
																"nodeType": "YulFunctionCall",
																"src": "10903:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10895:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10895:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11065:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11065:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11078:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11078:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11089:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11089:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11074:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11074:3:8"
																		},
																		"nativeSrc": "11074:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11074:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11021:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11021:43:8"
																},
																"nativeSrc": "11021:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11021:72:8"
															},
															"nativeSrc": "11021:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11021:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11147:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11147:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11160:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11160:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11171:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11171:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11156:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11156:3:8"
																		},
																		"nativeSrc": "11156:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11156:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11103:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11103:43:8"
																},
																"nativeSrc": "11103:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11103:72:8"
															},
															"nativeSrc": "11103:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11103:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10462:720:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10650:9:8",
														"nodeType": "YulTypedName",
														"src": "10650:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10662:6:8",
														"nodeType": "YulTypedName",
														"src": "10662:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10670:6:8",
														"nodeType": "YulTypedName",
														"src": "10670:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10678:6:8",
														"nodeType": "YulTypedName",
														"src": "10678:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10686:6:8",
														"nodeType": "YulTypedName",
														"src": "10686:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10697:4:8",
														"nodeType": "YulTypedName",
														"src": "10697:4:8",
														"type": ""
													}
												],
												"src": "10462:720:8"
											},
											{
												"body": {
													"nativeSrc": "11442:553:8",
													"nodeType": "YulBlock",
													"src": "11442:553:8",
													"statements": [
														{
															"nativeSrc": "11452:27:8",
															"nodeType": "YulAssignment",
															"src": "11452:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11464:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11464:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11475:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11475:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11460:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11460:3:8"
																},
																"nativeSrc": "11460:19:8",
																"nodeType": "YulFunctionCall",
																"src": "11460:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11452:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11452:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11533:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11533:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11546:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11557:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11557:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11542:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11542:3:8"
																		},
																		"nativeSrc": "11542:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11542:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11489:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11489:43:8"
																},
																"nativeSrc": "11489:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11489:71:8"
															},
															"nativeSrc": "11489:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11489:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11614:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11614:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11627:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11627:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11638:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11638:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11623:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11623:3:8"
																		},
																		"nativeSrc": "11623:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11623:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11570:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11570:43:8"
																},
																"nativeSrc": "11570:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11570:72:8"
															},
															"nativeSrc": "11570:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11570:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11704:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11704:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11717:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11717:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11728:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11728:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11713:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11713:3:8"
																		},
																		"nativeSrc": "11713:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11713:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "11652:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "11652:51:8"
																},
																"nativeSrc": "11652:80:8",
																"nodeType": "YulFunctionCall",
																"src": "11652:80:8"
															},
															"nativeSrc": "11652:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "11652:80:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11794:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11794:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11807:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11807:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11818:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11818:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11803:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11803:3:8"
																		},
																		"nativeSrc": "11803:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11803:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "11742:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "11742:51:8"
																},
																"nativeSrc": "11742:80:8",
																"nodeType": "YulFunctionCall",
																"src": "11742:80:8"
															},
															"nativeSrc": "11742:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "11742:80:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11876:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11876:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11889:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11889:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11900:3:8",
																				"nodeType": "YulLiteral",
																				"src": "11900:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11885:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11885:3:8"
																		},
																		"nativeSrc": "11885:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11885:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11832:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11832:43:8"
																},
																"nativeSrc": "11832:73:8",
																"nodeType": "YulFunctionCall",
																"src": "11832:73:8"
															},
															"nativeSrc": "11832:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "11832:73:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "11959:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11972:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11972:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11983:3:8",
																				"nodeType": "YulLiteral",
																				"src": "11983:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11968:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11968:3:8"
																		},
																		"nativeSrc": "11968:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11968:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11915:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11915:43:8"
																},
																"nativeSrc": "11915:73:8",
																"nodeType": "YulFunctionCall",
																"src": "11915:73:8"
															},
															"nativeSrc": "11915:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "11915:73:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11188:807:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11374:9:8",
														"nodeType": "YulTypedName",
														"src": "11374:9:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11386:6:8",
														"nodeType": "YulTypedName",
														"src": "11386:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11394:6:8",
														"nodeType": "YulTypedName",
														"src": "11394:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11402:6:8",
														"nodeType": "YulTypedName",
														"src": "11402:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11410:6:8",
														"nodeType": "YulTypedName",
														"src": "11410:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11418:6:8",
														"nodeType": "YulTypedName",
														"src": "11418:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11426:6:8",
														"nodeType": "YulTypedName",
														"src": "11426:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11437:4:8",
														"nodeType": "YulTypedName",
														"src": "11437:4:8",
														"type": ""
													}
												],
												"src": "11188:807:8"
											},
											{
												"body": {
													"nativeSrc": "12112:552:8",
													"nodeType": "YulBlock",
													"src": "12112:552:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12158:83:8",
																"nodeType": "YulBlock",
																"src": "12158:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12160:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "12160:77:8"
																			},
																			"nativeSrc": "12160:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12160:79:8"
																		},
																		"nativeSrc": "12160:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12160:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12133:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12133:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12142:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12142:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12129:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:8"
																		},
																		"nativeSrc": "12129:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12129:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12154:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12154:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12125:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12125:3:8"
																},
																"nativeSrc": "12125:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12125:32:8"
															},
															"nativeSrc": "12122:119:8",
															"nodeType": "YulIf",
															"src": "12122:119:8"
														},
														{
															"nativeSrc": "12251:128:8",
															"nodeType": "YulBlock",
															"src": "12251:128:8",
															"statements": [
																{
																	"nativeSrc": "12266:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12266:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12280:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12280:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12270:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12270:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12295:74:8",
																	"nodeType": "YulAssignment",
																	"src": "12295:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12341:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12341:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12352:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12352:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12337:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12337:3:8"
																				},
																				"nativeSrc": "12337:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12337:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12361:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12361:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12305:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "12305:31:8"
																		},
																		"nativeSrc": "12305:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12305:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12295:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12295:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12389:129:8",
															"nodeType": "YulBlock",
															"src": "12389:129:8",
															"statements": [
																{
																	"nativeSrc": "12404:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12404:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12418:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12418:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12408:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12408:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12434:74:8",
																	"nodeType": "YulAssignment",
																	"src": "12434:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12480:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12480:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12491:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12491:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12476:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12476:3:8"
																				},
																				"nativeSrc": "12476:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12476:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12500:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12500:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12444:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "12444:31:8"
																		},
																		"nativeSrc": "12444:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12444:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12434:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12434:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12528:129:8",
															"nodeType": "YulBlock",
															"src": "12528:129:8",
															"statements": [
																{
																	"nativeSrc": "12543:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12543:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12557:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12547:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12547:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12573:74:8",
																	"nodeType": "YulAssignment",
																	"src": "12573:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12619:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12619:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12630:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12630:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12615:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12615:3:8"
																				},
																				"nativeSrc": "12615:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12615:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12639:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12639:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12583:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "12583:31:8"
																		},
																		"nativeSrc": "12583:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12583:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12573:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12573:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "12001:663:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12066:9:8",
														"nodeType": "YulTypedName",
														"src": "12066:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12077:7:8",
														"nodeType": "YulTypedName",
														"src": "12077:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12089:6:8",
														"nodeType": "YulTypedName",
														"src": "12089:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12097:6:8",
														"nodeType": "YulTypedName",
														"src": "12097:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12105:6:8",
														"nodeType": "YulTypedName",
														"src": "12105:6:8",
														"type": ""
													}
												],
												"src": "12001:663:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router_$1206_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router_$1206_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router_$1206_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router_$1206__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router_$1206_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610094575f3560e01c806397b3d8ca1161005857806397b3d8ca1461016f57806399d8fae314610179578063a82ed9ec146101a3578063a8aa1b31146101cd578063d06d04cc146101f75761009b565b806310fe9ae81461009f5780633fc8cef3146100c957806366dc34a7146100f3578063735de9f71461011b578063972598e7146101455761009b565b3661009b57005b5f80fd5b3480156100aa575f80fd5b506100b3610213565b6040516100c091906109f2565b60405180910390f35b3480156100d4575f80fd5b506100dd61023a565b6040516100ea91906109f2565b60405180910390f35b3480156100fe575f80fd5b5061011960048036038101906101149190610a4f565b61025f565b005b348015610126575f80fd5b5061012f610516565b60405161013c9190610ad5565b60405180910390f35b348015610150575f80fd5b5061015961053b565b60405161016691906109f2565b60405180910390f35b61017761055e565b005b348015610184575f80fd5b5061018d610778565b60405161019a91906109f2565b60405180910390f35b3480156101ae575f80fd5b506101b7610790565b6040516101c491906109f2565b60405180910390f35b3480156101d8575f80fd5b506101e16107a8565b6040516101ee91906109f2565b60405180910390f35b610211600480360381019061020c9190610a4f565b6107cd565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610297576040517ed8767d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060600267ffffffffffffffff8111156102b4576102b3610aee565b5b6040519080825280602002602001820160405280156102e25781602001602082028036833780820191505090505b5090505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f8151811061031857610317610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061038857610387610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161041e93929190610b57565b6020604051808303815f875af115801561043a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045e9190610bc1565b5060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318cbafe5835f8433610168426104ae9190610c19565b6040518663ffffffff1660e01b81526004016104ce959493929190610d3c565b5f604051808303815f875af11580156104e9573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906105119190610ecb565b505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f3411610597576040517fd73ab2e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060600267ffffffffffffffff8111156105b4576105b3610aee565b5b6040519080825280602002602001820160405280156105e25781602001602082028036833780820191505090505b50905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f8151811061061a57610619610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061068857610687610b1b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5345f8433610168426107119190610c19565b6040518663ffffffff1660e01b81526004016107309493929190610f12565b5f6040518083038185885af115801561074b573d5f803e3d5ffd5b50505050506040513d5f823e3d601f19601f820116820180604052508101906107749190610ecb565b5050565b739fbfa493ec98694256d171171487b9d47d849ba981565b73050e797f3625ec8785265e1d9bdd4799b97528a181565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f3411610806576040517fd73ab2e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f811161083e576040517ed8767d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161089a93929190610b57565b6020604051808303815f875af11580156108b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108da9190610bc1565b5060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d719345f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16845f80336101684261094b9190610c19565b6040518863ffffffff1660e01b815260040161096c96959493929190610f5c565b60606040518083038185885af1158015610988573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906109ad9190610fbb565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109dc826109b3565b9050919050565b6109ec816109d2565b82525050565b5f602082019050610a055f8301846109e3565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610a2e81610a1c565b8114610a38575f80fd5b50565b5f81359050610a4981610a25565b92915050565b5f60208284031215610a6457610a63610a14565b5b5f610a7184828501610a3b565b91505092915050565b5f819050919050565b5f610a9d610a98610a93846109b3565b610a7a565b6109b3565b9050919050565b5f610aae82610a83565b9050919050565b5f610abf82610aa4565b9050919050565b610acf81610ab5565b82525050565b5f602082019050610ae85f830184610ac6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b610b5181610a1c565b82525050565b5f606082019050610b6a5f8301866109e3565b610b7760208301856109e3565b610b846040830184610b48565b949350505050565b5f8115159050919050565b610ba081610b8c565b8114610baa575f80fd5b50565b5f81519050610bbb81610b97565b92915050565b5f60208284031215610bd657610bd5610a14565b5b5f610be384828501610bad565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c2382610a1c565b9150610c2e83610a1c565b9250828201905080821115610c4657610c45610bec565b5b92915050565b5f819050919050565b5f610c6f610c6a610c6584610c4c565b610a7a565b610a1c565b9050919050565b610c7f81610c55565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610cb7816109d2565b82525050565b5f610cc88383610cae565b60208301905092915050565b5f602082019050919050565b5f610cea82610c85565b610cf48185610c8f565b9350610cff83610c9f565b805f5b83811015610d2f578151610d168882610cbd565b9750610d2183610cd4565b925050600181019050610d02565b5085935050505092915050565b5f60a082019050610d4f5f830188610b48565b610d5c6020830187610c76565b8181036040830152610d6e8186610ce0565b9050610d7d60608301856109e3565b610d8a6080830184610b48565b9695505050505050565b5f80fd5b5f601f19601f8301169050919050565b610db182610d98565b810181811067ffffffffffffffff82111715610dd057610dcf610aee565b5b80604052505050565b5f610de2610a0b565b9050610dee8282610da8565b919050565b5f67ffffffffffffffff821115610e0d57610e0c610aee565b5b602082029050602081019050919050565b5f80fd5b5f81519050610e3081610a25565b92915050565b5f610e48610e4384610df3565b610dd9565b90508083825260208201905060208402830185811115610e6b57610e6a610e1e565b5b835b81811015610e945780610e808882610e22565b845260208401935050602081019050610e6d565b5050509392505050565b5f82601f830112610eb257610eb1610d94565b5b8151610ec2848260208601610e36565b91505092915050565b5f60208284031215610ee057610edf610a14565b5b5f82015167ffffffffffffffff811115610efd57610efc610a18565b5b610f0984828501610e9e565b91505092915050565b5f608082019050610f255f830187610c76565b8181036020830152610f378186610ce0565b9050610f4660408301856109e3565b610f536060830184610b48565b95945050505050565b5f60c082019050610f6f5f8301896109e3565b610f7c6020830188610b48565b610f896040830187610c76565b610f966060830186610c76565b610fa360808301856109e3565b610fb060a0830184610b48565b979650505050505050565b5f805f60608486031215610fd257610fd1610a14565b5b5f610fdf86828701610e22565b9350506020610ff086828701610e22565b925050604061100186828701610e22565b915050925092509256fea2646970667358221220a16287be9ecce31a1f22f4c1a5ad5a264410ac271462dc42b9148558b918e1da64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97B3D8CA GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x97B3D8CA EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x99D8FAE3 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xD06D04CC EQ PUSH2 0x1F7 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x66DC34A7 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x972598E7 EQ PUSH2 0x145 JUMPI PUSH2 0x9B JUMP JUMPDEST CALLDATASIZE PUSH2 0x9B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x55E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x297 JUMPI PUSH1 0x40 MLOAD PUSH31 0xD8767D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH2 0x2B3 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x318 JUMPI PUSH2 0x317 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x388 JUMPI PUSH2 0x387 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP4 PUSH0 DUP5 CALLER PUSH2 0x168 TIMESTAMP PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x511 SWAP2 SWAP1 PUSH2 0xECB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD73AB2E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B3 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0xB1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 CALLVALUE PUSH0 DUP5 CALLER PUSH2 0x168 TIMESTAMP PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xECB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0x9FBFA493EC98694256D171171487B9D47D849BA9 DUP2 JUMP JUMPDEST PUSH20 0x50E797F3625EC8785265E1D9BDD4799B97528A1 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD73AB2E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH31 0xD8767D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH0 DUP1 CALLER PUSH2 0x168 TIMESTAMP PUSH2 0x94B SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9DC DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0x9D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA05 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E DUP2 PUSH2 0xA1C JUMP JUMPDEST DUP2 EQ PUSH2 0xA38 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA49 DUP2 PUSH2 0xA25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA64 JUMPI PUSH2 0xA63 PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA71 DUP5 DUP3 DUP6 ADD PUSH2 0xA3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9D PUSH2 0xA98 PUSH2 0xA93 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAE DUP3 PUSH2 0xA83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xABF DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xAB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE8 PUSH0 DUP4 ADD DUP5 PUSH2 0xAC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB51 DUP2 PUSH2 0xA1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB6A PUSH0 DUP4 ADD DUP7 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xB77 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xB84 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA0 DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xBAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBBB DUP2 PUSH2 0xB97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD5 PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE3 DUP5 DUP3 DUP6 ADD PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC23 DUP3 PUSH2 0xA1C JUMP JUMPDEST SWAP2 POP PUSH2 0xC2E DUP4 PUSH2 0xA1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC45 PUSH2 0xBEC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6F PUSH2 0xC6A PUSH2 0xC65 DUP5 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7F DUP2 PUSH2 0xC55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB7 DUP2 PUSH2 0x9D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC8 DUP4 DUP4 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCEA DUP3 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xCF4 DUP2 DUP6 PUSH2 0xC8F JUMP JUMPDEST SWAP4 POP PUSH2 0xCFF DUP4 PUSH2 0xC9F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD2F JUMPI DUP2 MLOAD PUSH2 0xD16 DUP9 DUP3 PUSH2 0xCBD JUMP JUMPDEST SWAP8 POP PUSH2 0xD21 DUP4 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD02 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xD4F PUSH0 DUP4 ADD DUP9 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xD5C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xC76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xD6E DUP2 DUP7 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xD7D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xD8A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB1 DUP3 PUSH2 0xD98 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDD0 JUMPI PUSH2 0xDCF PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDE2 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP PUSH2 0xDEE DUP3 DUP3 PUSH2 0xDA8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE30 DUP2 PUSH2 0xA25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE48 PUSH2 0xE43 DUP5 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xE1E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE94 JUMPI DUP1 PUSH2 0xE80 DUP9 DUP3 PUSH2 0xE22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEB2 JUMPI PUSH2 0xEB1 PUSH2 0xD94 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xEC2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEDF PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFD JUMPI PUSH2 0xEFC PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH2 0xF09 DUP5 DUP3 DUP6 ADD PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF25 PUSH0 DUP4 ADD DUP8 PUSH2 0xC76 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF37 DUP2 DUP7 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xF46 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xF53 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xF6F PUSH0 DUP4 ADD DUP10 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xF7C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xF89 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0xF96 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0xFA3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xFB0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD2 JUMPI PUSH2 0xFD1 PUSH2 0xA14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDF DUP7 DUP3 DUP8 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFF0 DUP7 DUP3 DUP8 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1001 DUP7 DUP3 DUP8 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH3 0x87BE9E 0xCC 0xE3 BYTE 0x1F 0x22 DELEGATECALL 0xC1 0xA5 0xAD GAS 0x26 PREVRANDAO LT 0xAC 0x27 EQ PUSH3 0xDC42B9 EQ DUP6 PC 0xB9 XOR 0xE1 0xDA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1391:3536:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2707:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1785:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2836:648;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1810:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1685:69;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2243:458;;;:::i;:::-;;1529:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1428:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3542:626;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:92;2757:7;2783:9;;;;;;;;;;;2776:16;;2707:92;:::o;1785:19::-;;;;;;;;;;;;;:::o;2836:648::-;2927:1;2915:8;:13;2911:50;;2937:24;;;;;;;;;;;;;;2911:50;2972:21;3024:1;3010:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3003:23;;3047:9;;;;;;;;;;3037:4;3042:1;3037:7;;;;;;;;:::i;:::-;;;;;;;:19;;;;;;;;;;;3098:4;;;;;;;;;;;3088;3093:1;3088:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;3195:9;;;;;;;;;;3188:30;;;3219:10;3239:4;3246:8;3188:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3294:13;;;;;;;;;;;:35;;;3343:8;3365:1;3380:4;3398:10;3464:3;3446:15;:21;;;;:::i;:::-;3294:183;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2901:583;2836:648;:::o;1810:37::-;;;;;;;;;;;;;:::o;1685:69::-;;;;;;;;;;;;:::o;2243:458::-;2313:1;2300:9;:14;2296:40;;2323:13;;;;;;;;;;;;;;2296:40;2347:21;2399:1;2385:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:23;;2422:4;;;;;;;;;;;2412;2417:1;2412:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;2465:9;;;;;;;;;;2455:4;2460:1;2455:7;;;;;;;;:::i;:::-;;;;;;;:19;;;;;;;;;;;2507:13;;;;;;;;;;;:35;;;2550:9;2574:1;2589:4;2607:10;2681:3;2663:15;:21;;;;:::i;:::-;2507:187;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2286:415;2243:458::o;1529:87::-;1574:42;1529:87;:::o;1428:94::-;1480:42;1428:94;:::o;1760:19::-;;;;;;;;;;;;;:::o;3542:626::-;3653:1;3640:9;:14;3636:40;;3663:13;;;;;;;;;;;;;;3636:40;3713:1;3691:18;:23;3687:60;;3723:24;;;;;;;;;;;;;;3687:60;3824:9;;;;;;;;;;3817:30;;;3848:10;3868:4;3875:18;3817:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3930:13;;;;;;;;;;;:29;;;3967:9;3991;;;;;;;;;;4014:18;4046:1;4061;4076:10;4148:3;4130:15;:21;;;;:::i;:::-;3930:231;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3542:626;:::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:60::-;1639:3;1660:5;1653:12;;1611:60;;;:::o;1677:142::-;1727:9;1760:53;1778:34;1787:24;1805:5;1787:24;:::i;:::-;1778:34;:::i;:::-;1760:53;:::i;:::-;1747:66;;1677:142;;;:::o;1825:126::-;1875:9;1908:37;1939:5;1908:37;:::i;:::-;1895:50;;1825:126;;;:::o;1957:151::-;2032:9;2065:37;2096:5;2065:37;:::i;:::-;2052:50;;1957:151;;;:::o;2114:181::-;2226:62;2282:5;2226:62;:::i;:::-;2221:3;2214:75;2114:181;;:::o;2301:272::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2470:96;2563:1;2552:9;2548:17;2539:6;2470:96;:::i;:::-;2301:272;;;;:::o;2579:180::-;2627:77;2624:1;2617:88;2724:4;2721:1;2714:15;2748:4;2745:1;2738:15;2765:180;2813:77;2810:1;2803:88;2910:4;2907:1;2900:15;2934:4;2931:1;2924:15;2951:118;3038:24;3056:5;3038:24;:::i;:::-;3033:3;3026:37;2951:118;;:::o;3075:442::-;3224:4;3262:2;3251:9;3247:18;3239:26;;3275:71;3343:1;3332:9;3328:17;3319:6;3275:71;:::i;:::-;3356:72;3424:2;3413:9;3409:18;3400:6;3356:72;:::i;:::-;3438;3506:2;3495:9;3491:18;3482:6;3438:72;:::i;:::-;3075:442;;;;;;:::o;3523:90::-;3557:7;3600:5;3593:13;3586:21;3575:32;;3523:90;;;:::o;3619:116::-;3689:21;3704:5;3689:21;:::i;:::-;3682:5;3679:32;3669:60;;3725:1;3722;3715:12;3669:60;3619:116;:::o;3741:137::-;3795:5;3826:6;3820:13;3811:22;;3842:30;3866:5;3842:30;:::i;:::-;3741:137;;;;:::o;3884:345::-;3951:6;4000:2;3988:9;3979:7;3975:23;3971:32;3968:119;;;4006:79;;:::i;:::-;3968:119;4126:1;4151:61;4204:7;4195:6;4184:9;4180:22;4151:61;:::i;:::-;4141:71;;4097:125;3884:345;;;;:::o;4235:180::-;4283:77;4280:1;4273:88;4380:4;4377:1;4370:15;4404:4;4401:1;4394:15;4421:191;4461:3;4480:20;4498:1;4480:20;:::i;:::-;4475:25;;4514:20;4532:1;4514:20;:::i;:::-;4509:25;;4557:1;4554;4550:9;4543:16;;4578:3;4575:1;4572:10;4569:36;;;4585:18;;:::i;:::-;4569:36;4421:191;;;;:::o;4618:85::-;4663:7;4692:5;4681:16;;4618:85;;;:::o;4709:158::-;4767:9;4800:61;4818:42;4827:32;4853:5;4827:32;:::i;:::-;4818:42;:::i;:::-;4800:61;:::i;:::-;4787:74;;4709:158;;;:::o;4873:147::-;4968:45;5007:5;4968:45;:::i;:::-;4963:3;4956:58;4873:147;;:::o;5026:114::-;5093:6;5127:5;5121:12;5111:22;;5026:114;;;:::o;5146:184::-;5245:11;5279:6;5274:3;5267:19;5319:4;5314:3;5310:14;5295:29;;5146:184;;;;:::o;5336:132::-;5403:4;5426:3;5418:11;;5456:4;5451:3;5447:14;5439:22;;5336:132;;;:::o;5474:108::-;5551:24;5569:5;5551:24;:::i;:::-;5546:3;5539:37;5474:108;;:::o;5588:179::-;5657:10;5678:46;5720:3;5712:6;5678:46;:::i;:::-;5756:4;5751:3;5747:14;5733:28;;5588:179;;;;:::o;5773:113::-;5843:4;5875;5870:3;5866:14;5858:22;;5773:113;;;:::o;5922:732::-;6041:3;6070:54;6118:5;6070:54;:::i;:::-;6140:86;6219:6;6214:3;6140:86;:::i;:::-;6133:93;;6250:56;6300:5;6250:56;:::i;:::-;6329:7;6360:1;6345:284;6370:6;6367:1;6364:13;6345:284;;;6446:6;6440:13;6473:63;6532:3;6517:13;6473:63;:::i;:::-;6466:70;;6559:60;6612:6;6559:60;:::i;:::-;6549:70;;6405:224;6392:1;6389;6385:9;6380:14;;6345:284;;;6349:14;6645:3;6638:10;;6046:608;;;5922:732;;;;:::o;6660:831::-;6923:4;6961:3;6950:9;6946:19;6938:27;;6975:71;7043:1;7032:9;7028:17;7019:6;6975:71;:::i;:::-;7056:80;7132:2;7121:9;7117:18;7108:6;7056:80;:::i;:::-;7183:9;7177:4;7173:20;7168:2;7157:9;7153:18;7146:48;7211:108;7314:4;7305:6;7211:108;:::i;:::-;7203:116;;7329:72;7397:2;7386:9;7382:18;7373:6;7329:72;:::i;:::-;7411:73;7479:3;7468:9;7464:19;7455:6;7411:73;:::i;:::-;6660:831;;;;;;;;:::o;7497:117::-;7606:1;7603;7596:12;7620:102;7661:6;7712:2;7708:7;7703:2;7696:5;7692:14;7688:28;7678:38;;7620:102;;;:::o;7728:281::-;7811:27;7833:4;7811:27;:::i;:::-;7803:6;7799:40;7941:6;7929:10;7926:22;7905:18;7893:10;7890:34;7887:62;7884:88;;;7952:18;;:::i;:::-;7884:88;7992:10;7988:2;7981:22;7771:238;7728:281;;:::o;8015:129::-;8049:6;8076:20;;:::i;:::-;8066:30;;8105:33;8133:4;8125:6;8105:33;:::i;:::-;8015:129;;;:::o;8150:311::-;8227:4;8317:18;8309:6;8306:30;8303:56;;;8339:18;;:::i;:::-;8303:56;8389:4;8381:6;8377:17;8369:25;;8449:4;8443;8439:15;8431:23;;8150:311;;;:::o;8467:117::-;8576:1;8573;8566:12;8590:143;8647:5;8678:6;8672:13;8663:22;;8694:33;8721:5;8694:33;:::i;:::-;8590:143;;;;:::o;8756:732::-;8863:5;8888:81;8904:64;8961:6;8904:64;:::i;:::-;8888:81;:::i;:::-;8879:90;;8989:5;9018:6;9011:5;9004:21;9052:4;9045:5;9041:16;9034:23;;9105:4;9097:6;9093:17;9085:6;9081:30;9134:3;9126:6;9123:15;9120:122;;;9153:79;;:::i;:::-;9120:122;9268:6;9251:231;9285:6;9280:3;9277:15;9251:231;;;9360:3;9389:48;9433:3;9421:10;9389:48;:::i;:::-;9384:3;9377:61;9467:4;9462:3;9458:14;9451:21;;9327:155;9311:4;9306:3;9302:14;9295:21;;9251:231;;;9255:21;8869:619;;8756:732;;;;;:::o;9511:385::-;9593:5;9642:3;9635:4;9627:6;9623:17;9619:27;9609:122;;9650:79;;:::i;:::-;9609:122;9760:6;9754:13;9785:105;9886:3;9878:6;9871:4;9863:6;9859:17;9785:105;:::i;:::-;9776:114;;9599:297;9511:385;;;;:::o;9902:554::-;9997:6;10046:2;10034:9;10025:7;10021:23;10017:32;10014:119;;;10052:79;;:::i;:::-;10014:119;10193:1;10182:9;10178:17;10172:24;10223:18;10215:6;10212:30;10209:117;;;10245:79;;:::i;:::-;10209:117;10350:89;10431:7;10422:6;10411:9;10407:22;10350:89;:::i;:::-;10340:99;;10143:306;9902:554;;;;:::o;10462:720::-;10697:4;10735:3;10724:9;10720:19;10712:27;;10749:79;10825:1;10814:9;10810:17;10801:6;10749:79;:::i;:::-;10875:9;10869:4;10865:20;10860:2;10849:9;10845:18;10838:48;10903:108;11006:4;10997:6;10903:108;:::i;:::-;10895:116;;11021:72;11089:2;11078:9;11074:18;11065:6;11021:72;:::i;:::-;11103;11171:2;11160:9;11156:18;11147:6;11103:72;:::i;:::-;10462:720;;;;;;;:::o;11188:807::-;11437:4;11475:3;11464:9;11460:19;11452:27;;11489:71;11557:1;11546:9;11542:17;11533:6;11489:71;:::i;:::-;11570:72;11638:2;11627:9;11623:18;11614:6;11570:72;:::i;:::-;11652:80;11728:2;11717:9;11713:18;11704:6;11652:80;:::i;:::-;11742;11818:2;11807:9;11803:18;11794:6;11742:80;:::i;:::-;11832:73;11900:3;11889:9;11885:19;11876:6;11832:73;:::i;:::-;11915;11983:3;11972:9;11968:19;11959:6;11915:73;:::i;:::-;11188:807;;;;;;;;;:::o;12001:663::-;12089:6;12097;12105;12154:2;12142:9;12133:7;12129:23;12125:32;12122:119;;;12160:79;;:::i;:::-;12122:119;12280:1;12305:64;12361:7;12352:6;12341:9;12337:22;12305:64;:::i;:::-;12295:74;;12251:128;12418:2;12444:64;12500:7;12491:6;12480:9;12476:22;12444:64;:::i;:::-;12434:74;;12389:129;12557:2;12583:64;12639:7;12630:6;12619:9;12615:22;12583:64;:::i;:::-;12573:74;;12528:129;12001:663;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "832200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UNISWAP_V2_FACTORY()": "395",
								"UNISWAP_V2_ROUTER()": "417",
								"addLiquidityETH(uint256)": "infinite",
								"getTokenAddress()": "2516",
								"memeToken()": "2594",
								"pair()": "2574",
								"swapETHForMeme()": "infinite",
								"swapMemeForETH(uint256)": "infinite",
								"uniswapRouter()": "infinite",
								"weth()": "2531"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1391,
									"end": 4927,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1754,
									"name": "PUSH",
									"source": 5,
									"value": "A0E0FCCC2C799845214E8E5583E44479EC02A23"
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1754,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1854,
									"end": 2206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1937,
									"end": 1943,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1934,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1925,
									"end": 1934,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1943,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1522,
									"name": "PUSH",
									"source": 5,
									"value": "50E797F3625EC8785265E1D9BDD4799B97528A1"
								},
								{
									"begin": 1953,
									"end": 1966,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1953,
									"end": 1966,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1953,
									"end": 2004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2022,
									"end": 2035,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2040,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2022,
									"end": 2040,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2040,
									"name": "PUSH",
									"source": 5,
									"value": "AD5C4648"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "STATICCALL",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2022,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2022,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2019,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2015,
									"end": 2019,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2060,
									"end": 2069,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2078,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2053,
									"end": 2078,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2078,
									"name": "PUSH",
									"source": 5,
									"value": "95EA7B3"
								},
								{
									"begin": 1480,
									"end": 1522,
									"name": "PUSH",
									"source": 5,
									"value": "50E797F3625EC8785265E1D9BDD4799B97528A1"
								},
								{
									"begin": 2098,
									"end": 2115,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2053,
									"end": 2116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "CALL",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2053,
									"end": 2116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2116,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1616,
									"name": "PUSH",
									"source": 5,
									"value": "9FBFA493EC98694256D171171487B9D47D849BA9"
								},
								{
									"begin": 2134,
									"end": 2182,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2134,
									"end": 2182,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2182,
									"name": "PUSH",
									"source": 5,
									"value": "C9C65396"
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2183,
									"end": 2192,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2134,
									"end": 2199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "CALL",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2134,
									"end": 2199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2134,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2131,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2127,
									"end": 2131,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 2206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1403,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1326,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1370,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1397,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1381,
									"end": 1397,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1381,
									"end": 1397,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1403,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1403,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1514,
									"end": 1519,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1496,
									"end": 1520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1521,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1409,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1865,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1533,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1654,
									"end": 1658,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1692,
									"end": 1694,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1681,
									"end": 1690,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1669,
									"end": 1695,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1669,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1705,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1762,
									"end": 1771,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1758,
									"end": 1775,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1749,
									"end": 1755,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1705,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1705,
									"end": 1776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1705,
									"end": 1776,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1705,
									"end": 1776,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1786,
									"end": 1858,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1843,
									"end": 1852,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1839,
									"end": 1857,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1830,
									"end": 1836,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1786,
									"end": 1858,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1786,
									"end": 1858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1786,
									"end": 1858,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1786,
									"end": 1858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1865,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1865,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1961,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1871,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1905,
									"end": 1912,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1948,
									"end": 1953,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 1954,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1934,
									"end": 1955,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 1955,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1923,
									"end": 1955,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1961,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1961,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2083,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1967,
									"end": 2083,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2037,
									"end": 2058,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2037,
									"end": 2058,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2037,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2030,
									"end": 2035,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2059,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2017,
									"end": 2077,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2017,
									"end": 2077,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2073,
									"end": 2074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2070,
									"end": 2071,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2075,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2017,
									"end": 2077,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2017,
									"end": 2077,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2083,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2083,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2089,
									"end": 2226,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2089,
									"end": 2226,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2174,
									"end": 2180,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2181,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2181,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2190,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2214,
									"end": 2219,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2190,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2190,
									"end": 2220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2190,
									"end": 2220,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2190,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2089,
									"end": 2226,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2089,
									"end": 2226,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2089,
									"end": 2226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2089,
									"end": 2226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2089,
									"end": 2226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2577,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2232,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2299,
									"end": 2305,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2348,
									"end": 2350,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2336,
									"end": 2345,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2327,
									"end": 2334,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2346,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2319,
									"end": 2351,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2435,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2435,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2316,
									"end": 2435,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2354,
									"end": 2433,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2354,
									"end": 2433,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2354,
									"end": 2433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2354,
									"end": 2433,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2354,
									"end": 2433,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2435,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2316,
									"end": 2435,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2474,
									"end": 2475,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2552,
									"end": 2559,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2543,
									"end": 2549,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2532,
									"end": 2541,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2528,
									"end": 2550,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2499,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2499,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2499,
									"end": 2560,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2499,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2489,
									"end": 2560,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2489,
									"end": 2560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2445,
									"end": 2570,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2577,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2577,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2577,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2915,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2583,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2704,
									"end": 2708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2742,
									"end": 2744,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2731,
									"end": 2740,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2727,
									"end": 2745,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2719,
									"end": 2745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2719,
									"end": 2745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2755,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2823,
									"end": 2824,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2812,
									"end": 2821,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2808,
									"end": 2825,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2799,
									"end": 2805,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2755,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2755,
									"end": 2826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2755,
									"end": 2826,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2755,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2908,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2904,
									"end": 2906,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2893,
									"end": 2902,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 2886,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2908,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2836,
									"end": 2908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2908,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2836,
									"end": 2908,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2915,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2915,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2915,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2915,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2915,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 4927,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a16287be9ecce31a1f22f4c1a5ad5a264410ac271462dc42b9148558b918e1da64736f6c634300081a0033",
									".code": [
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "97B3D8CA"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "97B3D8CA"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "99D8FAE3"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "A82ED9EC"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "A8AA1B31"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "D06D04CC"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "10FE9AE8"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "3FC8CEF3"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "66DC34A7"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "735DE9F7"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "972598E7"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 4927,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2707,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2707,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1785,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2836,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2836,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1810,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1810,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1685,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1529,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1428,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1428,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3542,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3542,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2923,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2928,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "PUSH",
											"source": 5,
											"value": "D8767D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3024,
											"end": 3025,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3010,
											"end": 3026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3037,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3088,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3218,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3188,
											"end": 3218,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3218,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3219,
											"end": 3229,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3243,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3254,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3188,
											"end": 3255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3188,
											"end": 3255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3329,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3329,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3329,
											"name": "PUSH",
											"source": 5,
											"value": "18CBAFE5"
										},
										{
											"begin": 3343,
											"end": 3351,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3384,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3467,
											"name": "PUSH",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3446,
											"end": 3461,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3446,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3294,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3294,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 3484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 3484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2309,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2296,
											"end": 2336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "D73AB2E100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2336,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2296,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2368,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2399,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2385,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2412,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2455,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2542,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2542,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2542,
											"name": "PUSH",
											"source": 5,
											"value": "7FF36AB5"
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2617,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2684,
											"name": "PUSH",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2663,
											"end": 2684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2663,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2684,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2663,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2507,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2507,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "9FBFA493EC98694256D171171487B9D47D849BA9"
										},
										{
											"begin": 1529,
											"end": 1616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "50E797F3625EC8785265E1D9BDD4799B97528A1"
										},
										{
											"begin": 1428,
											"end": 1522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3636,
											"end": 3676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "PUSH",
											"source": 5,
											"value": "D73AB2E100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3676,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3636,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 3714,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3687,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3687,
											"end": 3747,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "PUSH",
											"source": 5,
											"value": "D8767D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3747,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3687,
											"end": 3747,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3687,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3848,
											"end": 3858,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3817,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3817,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3959,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3959,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3959,
											"name": "PUSH",
											"source": 5,
											"value": "F305D719"
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4151,
											"name": "PUSH",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4130,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3930,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3930,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 4168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 593,
											"end": 668,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 593,
											"end": 668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 661,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 662,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 643,
											"end": 662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 643,
											"end": 662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 593,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 593,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 797,
											"end": 914,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 797,
											"end": 914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 906,
											"end": 907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 896,
											"end": 908,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 920,
											"end": 997,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 975,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 975,
											"end": 991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 920,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1787,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1760,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1908,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2065,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2226,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2470,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2579,
											"end": 2759,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2579,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2704,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2624,
											"end": 2625,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2728,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2721,
											"end": 2722,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2714,
											"end": 2729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2765,
											"end": 2945,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2765,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2890,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2900,
											"end": 2915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2931,
											"end": 2932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 3038,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3036,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3026,
											"end": 3063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 3069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 3069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3224,
											"end": 3228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3264,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3265,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3319,
											"end": 3325,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3275,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3346,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3275,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3356,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3428,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3356,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3495,
											"end": 3504,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3491,
											"end": 3509,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 3438,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3510,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3438,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3613,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3523,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3593,
											"end": 3606,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3613,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3735,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3619,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3704,
											"end": 3709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3689,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3711,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3727,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3878,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3741,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3795,
											"end": 3800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3833,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3842,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3878,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 4229,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3884,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 4003,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3968,
											"end": 4087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4006,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4006,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4085,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4006,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4087,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3968,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4204,
											"end": 4211,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4180,
											"end": 4202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4151,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4212,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4151,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4212,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4097,
											"end": 4222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 4229,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 4229,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 4229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 4229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 4229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4235,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4235,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4283,
											"end": 4360,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4384,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4370,
											"end": 4385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4408,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4394,
											"end": 4409,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4612,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4421,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4461,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4498,
											"end": 4499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4480,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4480,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4475,
											"end": 4500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4475,
											"end": 4500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 4532,
											"end": 4533,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4514,
											"end": 4534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4534,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 4514,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4557,
											"end": 4558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4582,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4569,
											"end": 4605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4569,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 4569,
											"end": 4605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4585,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4569,
											"end": 4605,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 4569,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4612,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4612,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4618,
											"end": 4703,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4618,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4670,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4618,
											"end": 4703,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4618,
											"end": 4703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4618,
											"end": 4703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4618,
											"end": 4703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4709,
											"end": 4867,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4709,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4818,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4827,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4853,
											"end": 4858,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4827,
											"end": 4859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4859,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4827,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4818,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4860,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4818,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4800,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 4861,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4800,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4709,
											"end": 4867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4709,
											"end": 4867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4709,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4709,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5020,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4873,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5007,
											"end": 5012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4968,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4963,
											"end": 4966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 5014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5140,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5026,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5127,
											"end": 5132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5133,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5111,
											"end": 5133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5111,
											"end": 5133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5330,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5146,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5277,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5468,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 5336,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5451,
											"end": 5454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5439,
											"end": 5461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5439,
											"end": 5461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5468,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5582,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5474,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5569,
											"end": 5574,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5551,
											"end": 5575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5575,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5551,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5767,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 5588,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5657,
											"end": 5667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5720,
											"end": 5723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5718,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5678,
											"end": 5724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5756,
											"end": 5760,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5751,
											"end": 5754,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5747,
											"end": 5761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5767,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5767,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5886,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5773,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5843,
											"end": 5847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 5922,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6118,
											"end": 6123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6070,
											"end": 6124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6124,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6070,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6219,
											"end": 6225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6217,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6140,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6226,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6140,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6226,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6133,
											"end": 6226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6300,
											"end": 6305,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 6250,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6306,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6250,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6376,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6377,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6532,
											"end": 6535,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6473,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6536,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6559,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6619,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6559,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6619,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6393,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6389,
											"end": 6390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6380,
											"end": 6394,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6380,
											"end": 6394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 6345,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6645,
											"end": 6648,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6648,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 6654,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 6654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 6654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 6654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 6654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6923,
											"end": 6927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6964,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 6950,
											"end": 6959,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 6965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 6965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 6965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7041,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6975,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 6975,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7056,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 7132,
											"end": 7134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7130,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7108,
											"end": 7114,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7056,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 7056,
											"end": 7136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7056,
											"end": 7136,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 7056,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7183,
											"end": 7192,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7173,
											"end": 7193,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7166,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7211,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 7314,
											"end": 7318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7305,
											"end": 7311,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7211,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7211,
											"end": 7319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7211,
											"end": 7319,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 7211,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7203,
											"end": 7319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7203,
											"end": 7319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7397,
											"end": 7399,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7329,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7479,
											"end": 7482,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7468,
											"end": 7477,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7464,
											"end": 7483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7461,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 7411,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7484,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7411,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 7491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7614,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 7497,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7604,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7608,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7722,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7620,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 7667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7714,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7708,
											"end": 7715,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7703,
											"end": 7705,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7696,
											"end": 7701,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 7706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7688,
											"end": 7716,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7678,
											"end": 7716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7678,
											"end": 7716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 8009,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7728,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7811,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7833,
											"end": 7837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7811,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7811,
											"end": 7838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7811,
											"end": 7838,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7811,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7803,
											"end": 7809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7941,
											"end": 7947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7893,
											"end": 7903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 7924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7949,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7972,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7884,
											"end": 7972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7952,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7952,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 7952,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7952,
											"end": 7970,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7952,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7972,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7884,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7992,
											"end": 8002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7988,
											"end": 7990,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7981,
											"end": 8003,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7771,
											"end": 8009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 8009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 8009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 8009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8015,
											"end": 8144,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 8015,
											"end": 8144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 8076,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8066,
											"end": 8096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8066,
											"end": 8096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8133,
											"end": 8137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 8105,
											"end": 8138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8138,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8105,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8015,
											"end": 8144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8015,
											"end": 8144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8015,
											"end": 8144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8015,
											"end": 8144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8150,
											"end": 8461,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 8150,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8309,
											"end": 8315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8336,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 8339,
											"end": 8357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8389,
											"end": 8393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8381,
											"end": 8387,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8394,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8394,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8443,
											"end": 8447,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8439,
											"end": 8454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8150,
											"end": 8461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8150,
											"end": 8461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8150,
											"end": 8461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8150,
											"end": 8461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8467,
											"end": 8584,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 8467,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8576,
											"end": 8577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8574,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8566,
											"end": 8578,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8733,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8590,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8685,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8694,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8721,
											"end": 8726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8694,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 8694,
											"end": 8727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8694,
											"end": 8727,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8694,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8733,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 9488,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8756,
											"end": 9488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8904,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8961,
											"end": 8967,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8904,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 8904,
											"end": 8968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8904,
											"end": 8968,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8904,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 8888,
											"end": 8969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 8969,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8888,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8879,
											"end": 8969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8879,
											"end": 8969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 8994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9011,
											"end": 9016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9004,
											"end": 9025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9093,
											"end": 9110,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9085,
											"end": 9091,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9081,
											"end": 9111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9134,
											"end": 9137,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9126,
											"end": 9132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9123,
											"end": 9138,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9242,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 9120,
											"end": 9242,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9153,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9153,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 9153,
											"end": 9232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9153,
											"end": 9232,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9153,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9242,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 9120,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9268,
											"end": 9274,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9280,
											"end": 9283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9277,
											"end": 9292,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9389,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 9433,
											"end": 9436,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9421,
											"end": 9431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9389,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 9389,
											"end": 9437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9389,
											"end": 9437,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 9389,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9387,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9377,
											"end": 9438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9462,
											"end": 9465,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9458,
											"end": 9472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9451,
											"end": 9472,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9451,
											"end": 9472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9327,
											"end": 9482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 9309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9302,
											"end": 9316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9295,
											"end": 9316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9295,
											"end": 9316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 9251,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8869,
											"end": 9488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8869,
											"end": 9488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 9488,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 9488,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 9488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 9488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 9488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 9488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9896,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 9511,
											"end": 9896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9642,
											"end": 9645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9627,
											"end": 9633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 9646,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9609,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 9609,
											"end": 9731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9650,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 9650,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 9650,
											"end": 9729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9650,
											"end": 9729,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 9650,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9609,
											"end": 9731,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 9609,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9760,
											"end": 9766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9754,
											"end": 9767,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 9886,
											"end": 9889,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 9884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9871,
											"end": 9875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9863,
											"end": 9869,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 9785,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9890,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 9785,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9896,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9896,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9511,
											"end": 9896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9902,
											"end": 10456,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 9902,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9997,
											"end": 10003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10046,
											"end": 10048,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10034,
											"end": 10043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10021,
											"end": 10044,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10017,
											"end": 10049,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10133,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10014,
											"end": 10133,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 10052,
											"end": 10131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10133,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10014,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10193,
											"end": 10194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10182,
											"end": 10191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10178,
											"end": 10195,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10172,
											"end": 10196,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10215,
											"end": 10221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10212,
											"end": 10242,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10209,
											"end": 10326,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10209,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10209,
											"end": 10326,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10245,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10245,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 10245,
											"end": 10324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10245,
											"end": 10324,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10245,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10209,
											"end": 10326,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10209,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10422,
											"end": 10428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10411,
											"end": 10420,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 10350,
											"end": 10439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10439,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10350,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10340,
											"end": 10439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10340,
											"end": 10439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10143,
											"end": 10449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9902,
											"end": 10456,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9902,
											"end": 10456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9902,
											"end": 10456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9902,
											"end": 10456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9902,
											"end": 10456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10697,
											"end": 10701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10738,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10712,
											"end": 10739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10712,
											"end": 10739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10825,
											"end": 10826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10810,
											"end": 10827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10807,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 10749,
											"end": 10828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10828,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10749,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 10884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10869,
											"end": 10873,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10865,
											"end": 10885,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10860,
											"end": 10862,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10849,
											"end": 10858,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10845,
											"end": 10863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10838,
											"end": 10886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10903,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 11006,
											"end": 11010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10997,
											"end": 11003,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10903,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 10903,
											"end": 11011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10903,
											"end": 11011,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 10903,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10895,
											"end": 11011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10895,
											"end": 11011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11021,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 11089,
											"end": 11091,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11078,
											"end": 11087,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11074,
											"end": 11092,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11065,
											"end": 11071,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11021,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 11021,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11021,
											"end": 11093,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 11021,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11103,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11171,
											"end": 11173,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11160,
											"end": 11169,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11153,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11103,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 11103,
											"end": 11175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11103,
											"end": 11175,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11103,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 11182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11437,
											"end": 11441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11475,
											"end": 11478,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 11464,
											"end": 11473,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11460,
											"end": 11479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11452,
											"end": 11479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11452,
											"end": 11479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 11557,
											"end": 11558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11546,
											"end": 11555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11533,
											"end": 11539,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 11489,
											"end": 11560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11560,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 11489,
											"end": 11560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11570,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 11638,
											"end": 11640,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11627,
											"end": 11636,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11623,
											"end": 11641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11614,
											"end": 11620,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 11570,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 11570,
											"end": 11642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11570,
											"end": 11642,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 11570,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11652,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 11728,
											"end": 11730,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11717,
											"end": 11726,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11713,
											"end": 11731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11710,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 11652,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 11652,
											"end": 11732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11652,
											"end": 11732,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 11652,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11742,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 11818,
											"end": 11820,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11807,
											"end": 11816,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11794,
											"end": 11800,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11742,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 11742,
											"end": 11822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11742,
											"end": 11822,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 11742,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 11900,
											"end": 11903,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11889,
											"end": 11898,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11876,
											"end": 11882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 11832,
											"end": 11905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 11905,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 11832,
											"end": 11905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11915,
											"end": 11988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 11983,
											"end": 11986,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 11972,
											"end": 11981,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 11987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11915,
											"end": 11988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 11915,
											"end": 11988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11915,
											"end": 11988,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 11915,
											"end": 11988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12664,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12001,
											"end": 12664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12089,
											"end": 12095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12105,
											"end": 12111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12154,
											"end": 12156,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12142,
											"end": 12151,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12133,
											"end": 12140,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12129,
											"end": 12152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12125,
											"end": 12157,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 12160,
											"end": 12239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12280,
											"end": 12281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 12361,
											"end": 12368,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12341,
											"end": 12350,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12337,
											"end": 12359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12305,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 12305,
											"end": 12369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12305,
											"end": 12369,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 12305,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12295,
											"end": 12369,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12295,
											"end": 12369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12251,
											"end": 12379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12444,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12500,
											"end": 12507,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12480,
											"end": 12489,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12444,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 12444,
											"end": 12508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12444,
											"end": 12508,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12444,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12389,
											"end": 12518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12557,
											"end": 12559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12583,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12639,
											"end": 12646,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12630,
											"end": 12636,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12619,
											"end": 12628,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12615,
											"end": 12637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12583,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 12583,
											"end": 12647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12583,
											"end": 12647,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12583,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12573,
											"end": 12647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12573,
											"end": 12647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12528,
											"end": 12657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12664,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12664,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12664,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/build_bounty/prototype/auto_swap_build.sol",
								"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol",
								"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UNISWAP_V2_FACTORY()": "99d8fae3",
							"UNISWAP_V2_ROUTER()": "a82ed9ec",
							"addLiquidityETH(uint256)": "d06d04cc",
							"getTokenAddress()": "10fe9ae8",
							"memeToken()": "972598e7",
							"pair()": "a8aa1b31",
							"swapETHForMeme()": "97b3d8ca",
							"swapMemeForETH(uint256)": "66dc34a7",
							"uniswapRouter()": "735de9f7",
							"weth()": "3fc8cef3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MustSendETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustSpecifyTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNISWAP_V2_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_V2_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapETHForMeme\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapMemeForETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/build_bounty/prototype/auto_swap_build.sol\":\"LiquidityContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/build_bounty/prototype/auto_swap_build.sol\":{\"keccak256\":\"0x0455334fb59569025112e7ee64101285b0db6a4ca3d5595a8bf1b7dc0edadbd8\",\"urls\":[\"bzz-raw://7a53502b1a99a77a8f3a957d052f50e099cb0666cd3fe3b30beb78bbe4fc5d6d\",\"dweb:/ipfs/Qmc8evFeNuwADEr3QLeoP9rSsZ9Tu8m69kfmqSq74X49TA\"]},\"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe7a2d65cdfdc88403725490efbcb1d4191837ad995f4a2ec8c8eb7ab06cbf1c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01a72f904ea9b0af9e6dbf3c48602804cb874056c0de87b810ce9f9549624f8e\",\"dweb:/ipfs/QmZ7qH6wbbHez6QHuUPSoJtXRrWudbAxRCh13KUw573b8G\"]},\"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol\":{\"keccak256\":\"0xcede66a5516307de674ee078a8223d56d1c8835cc82bfaff0c194608b4b0ce2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bd5ffe6fdb093177f3800ef874b65c549a06a1b3d121ab1acfdad9b697bca15\",\"dweb:/ipfs/QmQ2qHKQihMi5bMRCBS7A65XUyFiB3XxNMsYZfKdVWk9dz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 803,
								"contract": "contracts/build_bounty/prototype/auto_swap_build.sol:LiquidityContract",
								"label": "memeToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 805,
								"contract": "contracts/build_bounty/prototype/auto_swap_build.sol:LiquidityContract",
								"label": "pair",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 807,
								"contract": "contracts/build_bounty/prototype/auto_swap_build.sol:LiquidityContract",
								"label": "weth",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 810,
								"contract": "contracts/build_bounty/prototype/auto_swap_build.sol:LiquidityContract",
								"label": "uniswapRouter",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IUniswapV2Router)1206"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router)1206": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe7a2d65cdfdc88403725490efbcb1d4191837ad995f4a2ec8c8eb7ab06cbf1c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01a72f904ea9b0af9e6dbf3c48602804cb874056c0de87b810ce9f9549624f8e\",\"dweb:/ipfs/QmZ7qH6wbbHez6QHuUPSoJtXRrWudbAxRCh13KUw573b8G\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol": {
				"IUniswapV2Router": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "wethAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dealine",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dealine\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol\":\"IUniswapV2Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol\":{\"keccak256\":\"0xcede66a5516307de674ee078a8223d56d1c8835cc82bfaff0c194608b4b0ce2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bd5ffe6fdb093177f3800ef874b65c549a06a1b3d121ab1acfdad9b697bca15\",\"dweb:/ipfs/QmQ2qHKQihMi5bMRCBS7A65XUyFiB3XxNMsYZfKdVWk9dz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/build_bounty/prototype/auto_swap_build.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> contracts/build_bounty/prototype/auto_swap_build.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"ast": {
					"absolutePath": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IUniswapV2Factory": [
							1092
						],
						"IUniswapV2Router": [
							1206
						],
						"LiquidityContract": [
							1039
						]
					},
					"id": 1040,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 787,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 730,
							"src": "1040:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 652,
							"src": "1097:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol",
							"file": "https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1207,
							"src": "1153:117:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol",
							"file": "https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol",
							"id": 790,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1093,
							"src": "1271:118:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "LiquidityContract",
							"nameLocation": "1400:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "a82ed9ec",
									"id": 793,
									"mutability": "constant",
									"name": "UNISWAP_V2_ROUTER",
									"nameLocation": "1452:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1428:94:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1428:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830353045373937663336323545433837383532363565316439424464343739396239373532384131",
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1480:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x050E797f3625EC8785265e1d9BDd4799b97528A1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "99d8fae3",
									"id": 796,
									"mutability": "constant",
									"name": "UNISWAP_V2_FACTORY",
									"nameLocation": "1553:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1529:87:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 794,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1529:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839664246613439334543393836393432353644313731313731343837423944343744383439426139",
										"id": 795,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1574:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9fBFa493EC98694256D171171487B9D47D849Ba9"
									},
									"visibility": "public"
								},
								{
									"errorSelector": "d73ab2e1",
									"id": 798,
									"name": "MustSendETH",
									"nameLocation": "1629:11:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:2:5"
									},
									"src": "1623:20:5"
								},
								{
									"errorSelector": "00d8767d",
									"id": 800,
									"name": "MustSpecifyTokenAmount",
									"nameLocation": "1654:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:2:5"
									},
									"src": "1648:31:5"
								},
								{
									"constant": false,
									"functionSelector": "972598e7",
									"id": 803,
									"mutability": "mutable",
									"name": "memeToken",
									"nameLocation": "1700:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1685:69:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 801,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1685:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830613045304663634332633739393834353231344538453535383345343434373945433032613233",
										"id": 802,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1712:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0a0E0FccC2c799845214E8E5583E44479EC02a23"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8aa1b31",
									"id": 805,
									"mutability": "mutable",
									"name": "pair",
									"nameLocation": "1775:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1760:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 804,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1760:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fc8cef3",
									"id": 807,
									"mutability": "mutable",
									"name": "weth",
									"nameLocation": "1800:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1785:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 806,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1785:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 810,
									"mutability": "mutable",
									"name": "uniswapRouter",
									"nameLocation": "1834:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1810:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
										"typeString": "contract IUniswapV2Router"
									},
									"typeName": {
										"id": 809,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 808,
											"name": "IUniswapV2Router",
											"nameLocations": [
												"1810:16:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1206,
											"src": "1810:16:5"
										},
										"referencedDeclaration": 1206,
										"src": "1810:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
											"typeString": "contract IUniswapV2Router"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1882:324:5",
										"statements": [
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 815,
														"name": "memeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1925:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 816,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1937:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1925:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1925:18:5"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 819,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1953:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
															"typeString": "contract IUniswapV2Router"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 821,
																"name": "UNISWAP_V2_ROUTER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1986:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 820,
															"name": "IUniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "1969:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1206_$",
																"typeString": "type(contract IUniswapV2Router)"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1969:35:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
															"typeString": "contract IUniswapV2Router"
														}
													},
													"src": "1953:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
														"typeString": "contract IUniswapV2Router"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "1953:51:5"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 825,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "2015:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 826,
																"name": "uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "2022:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
																	"typeString": "contract IUniswapV2Router"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2036:4:5",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1205,
															"src": "2022:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2022:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2015:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "2015:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"name": "UNISWAP_V2_ROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2079:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2103:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 837,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2103:7:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 836,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2098:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2112:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2098:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 832,
																	"name": "memeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "2060:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 831,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "2053:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2053:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2071:7:5",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 716,
														"src": "2053:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "2053:63:5"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "2127:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 848,
																"name": "memeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "2183:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 849,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "2194:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 845,
																		"name": "UNISWAP_V2_FACTORY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "2152:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 844,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "2134:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1092_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2134:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1092",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2172:10:5",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1091,
															"src": "2134:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2134:65:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2127:72:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "2127:72:5"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1874:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1866:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:16:5"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1882:0:5"
									},
									"scope": 1039,
									"src": "1854:352:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2286:415:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 857,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2300:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2304:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2300:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2313:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2300:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"nodeType": "IfStatement",
												"src": "2296:40:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 861,
															"name": "MustSendETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2323:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2323:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 863,
													"nodeType": "RevertStatement",
													"src": "2316:20:5"
												}
											},
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "2364:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "2347:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 867,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 868,
															"nodeType": "ArrayTypeName",
															"src": "2347:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"nodeType": "VariableDeclarationStatement",
												"src": "2347:21:5"
											},
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2378:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2399:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2385:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 872,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2389:7:5",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 873,
																"nodeType": "ArrayTypeName",
																"src": "2389:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2385:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "2378:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "2378:23:5"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 879,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2412:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 881,
														"indexExpression": {
															"hexValue": "30",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2417:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2412:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 882,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "2422:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2412:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "2412:14:5"
											},
											{
												"expression": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 885,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2455:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 887,
														"indexExpression": {
															"hexValue": "31",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2455:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 888,
														"name": "memeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2465:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2455:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "2455:19:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2574:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 898,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2589:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2607:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2611:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2607:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 901,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2663:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2669:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2663:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333630",
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2681:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_360_by_1",
																	"typeString": "int_const 360"
																},
																"value": "360"
															},
															"src": "2663:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 891,
																"name": "uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "2507:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
																	"typeString": "contract IUniswapV2Router"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2521:21:5",
															"memberName": "swapExactETHForTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1109,
															"src": "2507:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 894,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2550:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2554:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2550:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2507:53:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2507:187:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "2507:187:5"
											}
										]
									},
									"functionSelector": "97b3d8ca",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForMeme",
									"nameLocation": "2252:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2266:2:5"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:0:5"
									},
									"scope": 1039,
									"src": "2243:458:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2766:33:5",
										"statements": [
											{
												"expression": {
													"id": 913,
													"name": "memeToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 803,
													"src": "2783:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 912,
												"id": 914,
												"nodeType": "Return",
												"src": "2776:16:5"
											}
										]
									},
									"functionSelector": "10fe9ae8",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddress",
									"nameLocation": "2716:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2731:2:5"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2757:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:9:5"
									},
									"scope": 1039,
									"src": "2707:92:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2901:583:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 921,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2915:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2927:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2915:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "2911:50:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 924,
															"name": "MustSpecifyTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "2937:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2937:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 926,
													"nodeType": "RevertStatement",
													"src": "2930:31:5"
												}
											},
											{
												"assignments": [
													932
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "2989:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "2972:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2972:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "2972:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"nodeType": "VariableDeclarationStatement",
												"src": "2972:21:5"
											},
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 934,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "3003:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3010:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3014:7:5",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 936,
																"nodeType": "ArrayTypeName",
																"src": "3014:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3010:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "3003:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "3003:23:5"
											},
											{
												"expression": {
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 942,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "3037:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 944,
														"indexExpression": {
															"hexValue": "30",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3042:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3037:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 945,
														"name": "memeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "3047:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3037:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "3037:19:5"
											},
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 948,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "3088:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 950,
														"indexExpression": {
															"hexValue": "31",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3093:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3088:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "3098:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3088:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "3088:14:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 958,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3219:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3223:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3219:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 962,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3239:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityContract_$1039",
																		"typeString": "contract LiquidityContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityContract_$1039",
																		"typeString": "contract LiquidityContract"
																	}
																],
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3231:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3231:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3231:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3246:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 955,
																	"name": "memeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "3195:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 954,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "3188:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3188:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3206:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3188:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3188:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "3188:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3343:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3365:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 972,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "3380:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 973,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3398:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3402:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3398:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 975,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3446:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3452:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3446:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333630",
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3464:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_360_by_1",
																	"typeString": "int_const 360"
																},
																"value": "360"
															},
															"src": "3446:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 967,
															"name": "uniswapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "3294:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
																"typeString": "contract IUniswapV2Router"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3308:21:5",
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1126,
														"src": "3294:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:183:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "3294:183:5"
											}
										]
									},
									"functionSelector": "66dc34a7",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapMemeForETH",
									"nameLocation": "2845:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2877:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2869:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:32:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2901:0:5"
									},
									"scope": 1039,
									"src": "2836:648:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "3626:542:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 987,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3640:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3644:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3640:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3653:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3640:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "3636:40:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 991,
															"name": "MustSendETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "3663:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3663:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 993,
													"nodeType": "RevertStatement",
													"src": "3656:20:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 995,
														"name": "amountTokenDesired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "3691:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3713:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3691:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "3687:60:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 998,
															"name": "MustSpecifyTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "3723:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3723:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1000,
													"nodeType": "RevertStatement",
													"src": "3716:31:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1006,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3848:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3852:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3848:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1010,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3868:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityContract_$1039",
																		"typeString": "contract LiquidityContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityContract_$1039",
																		"typeString": "contract LiquidityContract"
																	}
																],
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3860:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1008,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3860:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3860:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "amountTokenDesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "3875:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1003,
																	"name": "memeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "3824:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1002,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "3817:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3817:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3835:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3817:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3817:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "3817:77:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "memeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3991:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "amountTokenDesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "4014:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 1025,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4076:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4080:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4076:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1027,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4130:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4136:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4130:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333630",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4148:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_360_by_1",
																	"typeString": "int_const 360"
																},
																"value": "360"
															},
															"src": "4130:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1015,
																"name": "uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "3930:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router_$1206",
																	"typeString": "contract IUniswapV2Router"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3944:15:5",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1200,
															"src": "3930:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1018,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3967:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3971:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3967:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3930:47:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3930:231:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "3930:231:5"
											}
										]
									},
									"functionSelector": "d06d04cc",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "3551:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "3584:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3576:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3566:42:5"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3626:0:5"
									},
									"scope": 1039,
									"src": "3542:626:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "4239:2:5",
										"statements": []
									},
									"id": 1038,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4219:2:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:5"
									},
									"scope": 1039,
									"src": "4212:29:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1040,
							"src": "1391:3536:5",
							"usedErrors": [
								798,
								800
							],
							"usedEvents": []
						}
					],
					"src": "1040:3887:5"
				},
				"id": 5
			},
			"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1092
						]
					},
					"id": 1093,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1092,
							"linearizedBaseContracts": [
								1092
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "69:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 1051,
									"name": "PairCreated",
									"nameLocation": "99:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "134:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "118:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "164:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "148:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "186:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "178:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "198:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "198:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "110:98:6"
									},
									"src": "93:116:6"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "224:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "247:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "239:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "269:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "261:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:50:6"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "313:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "305:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:14:6"
									},
									"scope": 1092,
									"src": "215:104:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "333:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "342:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "342:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:6:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "379:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "371:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:14:6"
									},
									"scope": 1092,
									"src": "324:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "399:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "439:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "439:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:6:6"
									},
									"scope": 1092,
									"src": "390:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "460:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:6"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "491:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:9:6"
									},
									"scope": 1092,
									"src": "451:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "514:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:2:6"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "551:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:9:6"
									},
									"scope": 1092,
									"src": "505:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1091,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "575:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "603:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "595:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "627:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "619:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:54:6"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:14:6"
									},
									"scope": 1092,
									"src": "566:106:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1093,
							"src": "59:615:6",
							"usedErrors": [],
							"usedEvents": [
								1051
							]
						}
					],
					"src": "33:642:6"
				},
				"id": 6
			},
			"https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol": {
				"ast": {
					"absolutePath": "https://github.com/cakezero/mode-ai-agent-hackathon/blob/main/smart-contract/interface/IUniswapV2Router.sol",
					"exportedSymbols": {
						"IUniswapV2Router": [
							1206
						]
					},
					"id": 1207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1094,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1206,
							"linearizedBaseContracts": [
								1206
							],
							"name": "IUniswapV2Router",
							"nameLocation": "69:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7ff36ab5",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "101:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "140:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "132:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "181:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "162:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1097,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "162:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1098,
													"nodeType": "ArrayTypeName",
													"src": "162:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "203:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "195:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "dealine",
												"nameLocation": "223:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "215:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:114:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "280:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "263:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "263:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "263:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:26:7"
									},
									"scope": 1206,
									"src": "92:197:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "304:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "343:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "335:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "369:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "361:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "410:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "391:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1114,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "391:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1115,
													"nodeType": "ArrayTypeName",
													"src": "391:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "432:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "424:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "452:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "444:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:141:7"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "502:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "485:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "485:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1123,
													"nodeType": "ArrayTypeName",
													"src": "485:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:26:7"
									},
									"scope": 1206,
									"src": "295:216:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "526:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "568:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "560:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "594:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "586:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "635:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "616:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1131,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "616:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1132,
													"nodeType": "ArrayTypeName",
													"src": "616:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "657:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "649:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "677:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "669:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:141:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "727:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "710:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1139,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "710:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1140,
													"nodeType": "ArrayTypeName",
													"src": "710:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:26:7"
									},
									"scope": 1206,
									"src": "517:219:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "751:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "782:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "774:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "819:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "800:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1146,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "800:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1147,
													"nodeType": "ArrayTypeName",
													"src": "800:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:65:7"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "870:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "853:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1150,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "853:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1151,
													"nodeType": "ArrayTypeName",
													"src": "853:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:26:7"
									},
									"scope": 1206,
									"src": "742:137:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "894:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "924:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "916:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "948:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "940:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "972:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "964:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "1004:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "996:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1036:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1028:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1064:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1056:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1092:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1084:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1112:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1104:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:220:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1153:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1145:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1170:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1162:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1187:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1179:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:53:7"
									},
									"scope": 1206,
									"src": "885:313:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "1213:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1246:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1238:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "1269:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1261:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1305:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1297:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1337:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1329:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1367:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1359:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1387:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1379:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:173:7"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1436:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1428:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1457:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1449:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1476:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1468:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:59:7"
									},
									"scope": 1206,
									"src": "1204:283:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "1502:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:2:7"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "wethAddress",
												"nameLocation": "1540:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1532:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:21:7"
									},
									"scope": 1206,
									"src": "1493:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1207,
							"src": "59:1496:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1523:7"
				},
				"id": 7
			}
		}
	}
}