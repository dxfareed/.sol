{
	"id": "4ad9276a299c1749c51e46422bb71a64",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"content": "//SPDX-License-Identfier:MIT\n\npragma solidity >=0.8.0;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\ncontract AutoSwapDonation{\n\n    ISwapRouter public immutable swapRouter;\n    address public immutable token;\n    address public constant WETH9 = 0x4200000000000000000000000000000000000006;\n    constructor( address _token) {\n        swapRouter = ISwapRouter(0x050E797f3625EC8785265e1d9BDd4799b97528A1);\n        token = _token;\n    }\n\n    receive() external payable {\n        swapETHForToken(msg.value);\n    }\n\n    function swapETHForToken(uint256 amount) internal {\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: WETH9,\n            tokenOut: token,\n            fee: 3000,\n            recipient: msg.sender,\n            deadline: block.timestamp + 300,\n            amountIn: amount,\n            amountOutMinimum: 0,\n            sqrtPriceLimitX96: 0\n        });\n\n        swapRouter.exactInputSingle{value: amount}(params);\n    }\n\n\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"AutoSwapDonation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":126:1025  contract AutoSwapDonation{... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":319:457  constructor( address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":383:425  0x050E797f3625EC8785265e1d9BDd4799b97528A1 */\n  0x050e797f3625ec8785265e1d9bdd4799b97528a1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":358:426  swapRouter = ISwapRouter(0x050E797f3625EC8785265e1d9BDd4799b97528A1) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":444:450  _token */\n  dup1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":436:450  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":319:457  constructor( address _token) {... */\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":126:1025  contract AutoSwapDonation{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":126:1025  contract AutoSwapDonation{... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb9aa4ff60d3edb7fbc3b53bd780c9274ed80a5ba1a237d38b011edab2b031b4a\")\n  0x00\n  assignImmutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":126:1025  contract AutoSwapDonation{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":500:526  swapETHForToken(msg.value) */\n      tag_8\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":516:525  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":500:515  swapETHForToken */\n      tag_9\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":500:526  swapETHForToken(msg.value) */\n      jump\t// in\n    tag_8:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":126:1025  contract AutoSwapDonation{... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":239:313  address public constant WETH9 = 0x4200000000000000000000000000000000000006 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":158:197  ISwapRouter public immutable swapRouter */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":203:233  address public immutable token */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":539:1021  function swapETHForToken(uint256 amount) internal {... */\n    tag_9:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":599:647  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":271:313  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":737:742  token */\n      immutable(\"0xb9aa4ff60d3edb7fbc3b53bd780c9274ed80a5ba1a237d38b011edab2b031b4a\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":761:765  3000 */\n      0x0bb8\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":790:800  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":842:845  300 */\n      0x012c\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":824:839  block.timestamp */\n      timestamp\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":824:845  block.timestamp + 300 */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":869:875  amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":907:908  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":941:942  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":650:953  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":599:953  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":964:974  swapRouter */\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":964:991  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":999:1005  amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1007:1013  params */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":964:1014  swapRouter.exactInputSingle{value: amount}(params) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":589:1021  {... */\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":539:1021  function swapETHForToken(uint256 amount) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":239:313  address public constant WETH9 = 0x4200000000000000000000000000000000000006 */\n    tag_12:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":271:313  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":239:313  address public constant WETH9 = 0x4200000000000000000000000000000000000006 */\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":158:197  ISwapRouter public immutable swapRouter */\n    tag_17:\n      immutable(\"0x7ae9fd093408c444e1cd944d183f5410919486c93305c223a5a94b5e79d77d3b\")\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":203:233  address public immutable token */\n    tag_22:\n      immutable(\"0xb9aa4ff60d3edb7fbc3b53bd780c9274ed80a5ba1a237d38b011edab2b031b4a\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_33:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_34:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_57\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_33\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_35:\n        /* \"#utility.yul\":328:352   */\n      tag_59\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_61\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_35\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:653   */\n    tag_36:\n        /* \"#utility.yul\":621:624   */\n      0x00\n        /* \"#utility.yul\":642:647   */\n      dup2\n        /* \"#utility.yul\":635:647   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":659:801   */\n    tag_37:\n        /* \"#utility.yul\":709:718   */\n      0x00\n        /* \"#utility.yul\":742:795   */\n      tag_64\n        /* \"#utility.yul\":760:794   */\n      tag_65\n        /* \"#utility.yul\":769:793   */\n      tag_66\n        /* \"#utility.yul\":787:792   */\n      dup5\n        /* \"#utility.yul\":769:793   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":760:794   */\n      tag_36\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":742:795   */\n      tag_33\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":729:795   */\n      swap1\n      pop\n        /* \"#utility.yul\":659:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":807:933   */\n    tag_38:\n        /* \"#utility.yul\":857:866   */\n      0x00\n        /* \"#utility.yul\":890:927   */\n      tag_68\n        /* \"#utility.yul\":921:926   */\n      dup3\n        /* \"#utility.yul\":890:927   */\n      tag_37\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":877:927   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":939:1084   */\n    tag_39:\n        /* \"#utility.yul\":1008:1017   */\n      0x00\n        /* \"#utility.yul\":1041:1078   */\n      tag_70\n        /* \"#utility.yul\":1072:1077   */\n      dup3\n        /* \"#utility.yul\":1041:1078   */\n      tag_38\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1028:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":939:1084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1090:1259   */\n    tag_40:\n        /* \"#utility.yul\":1196:1252   */\n      tag_72\n        /* \"#utility.yul\":1246:1251   */\n      dup2\n        /* \"#utility.yul\":1196:1252   */\n      tag_39\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1191:1194   */\n      dup3\n        /* \"#utility.yul\":1184:1253   */\n      mstore\n        /* \"#utility.yul\":1090:1259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1265:1525   */\n    tag_19:\n        /* \"#utility.yul\":1377:1381   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1404:1413   */\n      dup3\n        /* \"#utility.yul\":1400:1418   */\n      add\n        /* \"#utility.yul\":1392:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1428:1518   */\n      tag_74\n        /* \"#utility.yul\":1515:1516   */\n      0x00\n        /* \"#utility.yul\":1504:1513   */\n      dup4\n        /* \"#utility.yul\":1500:1517   */\n      add\n        /* \"#utility.yul\":1491:1497   */\n      dup5\n        /* \"#utility.yul\":1428:1518   */\n      tag_40\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1265:1525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1531:1608   */\n    tag_41:\n        /* \"#utility.yul\":1568:1575   */\n      0x00\n        /* \"#utility.yul\":1597:1602   */\n      dup2\n        /* \"#utility.yul\":1586:1602   */\n      swap1\n      pop\n        /* \"#utility.yul\":1531:1608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1614:1794   */\n    tag_42:\n        /* \"#utility.yul\":1662:1739   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1659:1660   */\n      0x00\n        /* \"#utility.yul\":1652:1740   */\n      mstore\n        /* \"#utility.yul\":1759:1763   */\n      0x11\n        /* \"#utility.yul\":1756:1757   */\n      0x04\n        /* \"#utility.yul\":1749:1764   */\n      mstore\n        /* \"#utility.yul\":1783:1787   */\n      0x24\n        /* \"#utility.yul\":1780:1781   */\n      0x00\n        /* \"#utility.yul\":1773:1788   */\n      revert\n        /* \"#utility.yul\":1800:1991   */\n    tag_26:\n        /* \"#utility.yul\":1840:1843   */\n      0x00\n        /* \"#utility.yul\":1859:1879   */\n      tag_78\n        /* \"#utility.yul\":1877:1878   */\n      dup3\n        /* \"#utility.yul\":1859:1879   */\n      tag_41\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1854:1879   */\n      swap2\n      pop\n        /* \"#utility.yul\":1893:1913   */\n      tag_79\n        /* \"#utility.yul\":1911:1912   */\n      dup4\n        /* \"#utility.yul\":1893:1913   */\n      tag_41\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1888:1913   */\n      swap3\n      pop\n        /* \"#utility.yul\":1936:1937   */\n      dup3\n        /* \"#utility.yul\":1933:1934   */\n      dup3\n        /* \"#utility.yul\":1929:1938   */\n      add\n        /* \"#utility.yul\":1922:1938   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:1960   */\n      dup1\n        /* \"#utility.yul\":1954:1955   */\n      dup3\n        /* \"#utility.yul\":1951:1961   */\n      gt\n        /* \"#utility.yul\":1948:1984   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1964:1982   */\n      tag_81\n      tag_42\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1948:1984   */\n    tag_80:\n        /* \"#utility.yul\":1800:1991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1997:2105   */\n    tag_43:\n        /* \"#utility.yul\":2074:2098   */\n      tag_83\n        /* \"#utility.yul\":2092:2097   */\n      dup2\n        /* \"#utility.yul\":2074:2098   */\n      tag_34\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2069:2072   */\n      dup3\n        /* \"#utility.yul\":2062:2099   */\n      mstore\n        /* \"#utility.yul\":1997:2105   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2202   */\n    tag_44:\n        /* \"#utility.yul\":2147:2154   */\n      0x00\n        /* \"#utility.yul\":2187:2195   */\n      0xffffff\n        /* \"#utility.yul\":2180:2185   */\n      dup3\n        /* \"#utility.yul\":2176:2196   */\n      and\n        /* \"#utility.yul\":2165:2196   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2208:2313   */\n    tag_45:\n        /* \"#utility.yul\":2283:2306   */\n      tag_86\n        /* \"#utility.yul\":2300:2305   */\n      dup2\n        /* \"#utility.yul\":2283:2306   */\n      tag_44\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2278:2281   */\n      dup3\n        /* \"#utility.yul\":2271:2307   */\n      mstore\n        /* \"#utility.yul\":2208:2313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2319:2427   */\n    tag_46:\n        /* \"#utility.yul\":2396:2420   */\n      tag_88\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2396:2420   */\n      tag_41\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2391:2394   */\n      dup3\n        /* \"#utility.yul\":2384:2421   */\n      mstore\n        /* \"#utility.yul\":2319:2427   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2541   */\n    tag_47:\n        /* \"#utility.yul\":2510:2534   */\n      tag_90\n        /* \"#utility.yul\":2528:2533   */\n      dup2\n        /* \"#utility.yul\":2510:2534   */\n      tag_33\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2505:2508   */\n      dup3\n        /* \"#utility.yul\":2498:2535   */\n      mstore\n        /* \"#utility.yul\":2433:2541   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2641:4262   */\n    tag_48:\n        /* \"#utility.yul\":2814:2820   */\n      0x0100\n        /* \"#utility.yul\":2809:2812   */\n      dup3\n        /* \"#utility.yul\":2805:2821   */\n      add\n        /* \"#utility.yul\":2906:2910   */\n      0x00\n        /* \"#utility.yul\":2899:2904   */\n      dup3\n        /* \"#utility.yul\":2895:2911   */\n      add\n        /* \"#utility.yul\":2889:2912   */\n      mload\n        /* \"#utility.yul\":2925:2988   */\n      tag_92\n        /* \"#utility.yul\":2982:2986   */\n      0x00\n        /* \"#utility.yul\":2977:2980   */\n      dup6\n        /* \"#utility.yul\":2973:2987   */\n      add\n        /* \"#utility.yul\":2959:2971   */\n      dup3\n        /* \"#utility.yul\":2925:2988   */\n      tag_43\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2831:2998   */\n      pop\n        /* \"#utility.yul\":3084:3088   */\n      0x20\n        /* \"#utility.yul\":3077:3082   */\n      dup3\n        /* \"#utility.yul\":3073:3089   */\n      add\n        /* \"#utility.yul\":3067:3090   */\n      mload\n        /* \"#utility.yul\":3103:3166   */\n      tag_93\n        /* \"#utility.yul\":3160:3164   */\n      0x20\n        /* \"#utility.yul\":3155:3158   */\n      dup6\n        /* \"#utility.yul\":3151:3165   */\n      add\n        /* \"#utility.yul\":3137:3149   */\n      dup3\n        /* \"#utility.yul\":3103:3166   */\n      tag_43\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3008:3176   */\n      pop\n        /* \"#utility.yul\":3257:3261   */\n      0x40\n        /* \"#utility.yul\":3250:3255   */\n      dup3\n        /* \"#utility.yul\":3246:3262   */\n      add\n        /* \"#utility.yul\":3240:3263   */\n      mload\n        /* \"#utility.yul\":3276:3337   */\n      tag_94\n        /* \"#utility.yul\":3331:3335   */\n      0x40\n        /* \"#utility.yul\":3326:3329   */\n      dup6\n        /* \"#utility.yul\":3322:3336   */\n      add\n        /* \"#utility.yul\":3308:3320   */\n      dup3\n        /* \"#utility.yul\":3276:3337   */\n      tag_45\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3186:3347   */\n      pop\n        /* \"#utility.yul\":3434:3438   */\n      0x60\n        /* \"#utility.yul\":3427:3432   */\n      dup3\n        /* \"#utility.yul\":3423:3439   */\n      add\n        /* \"#utility.yul\":3417:3440   */\n      mload\n        /* \"#utility.yul\":3453:3516   */\n      tag_95\n        /* \"#utility.yul\":3510:3514   */\n      0x60\n        /* \"#utility.yul\":3505:3508   */\n      dup6\n        /* \"#utility.yul\":3501:3515   */\n      add\n        /* \"#utility.yul\":3487:3499   */\n      dup3\n        /* \"#utility.yul\":3453:3516   */\n      tag_43\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3357:3526   */\n      pop\n        /* \"#utility.yul\":3612:3616   */\n      0x80\n        /* \"#utility.yul\":3605:3610   */\n      dup3\n        /* \"#utility.yul\":3601:3617   */\n      add\n        /* \"#utility.yul\":3595:3618   */\n      mload\n        /* \"#utility.yul\":3631:3694   */\n      tag_96\n        /* \"#utility.yul\":3688:3692   */\n      0x80\n        /* \"#utility.yul\":3683:3686   */\n      dup6\n        /* \"#utility.yul\":3679:3693   */\n      add\n        /* \"#utility.yul\":3665:3677   */\n      dup3\n        /* \"#utility.yul\":3631:3694   */\n      tag_46\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3536:3704   */\n      pop\n        /* \"#utility.yul\":3790:3794   */\n      0xa0\n        /* \"#utility.yul\":3783:3788   */\n      dup3\n        /* \"#utility.yul\":3779:3795   */\n      add\n        /* \"#utility.yul\":3773:3796   */\n      mload\n        /* \"#utility.yul\":3809:3872   */\n      tag_97\n        /* \"#utility.yul\":3866:3870   */\n      0xa0\n        /* \"#utility.yul\":3861:3864   */\n      dup6\n        /* \"#utility.yul\":3857:3871   */\n      add\n        /* \"#utility.yul\":3843:3855   */\n      dup3\n        /* \"#utility.yul\":3809:3872   */\n      tag_46\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3714:3882   */\n      pop\n        /* \"#utility.yul\":3976:3980   */\n      0xc0\n        /* \"#utility.yul\":3969:3974   */\n      dup3\n        /* \"#utility.yul\":3965:3981   */\n      add\n        /* \"#utility.yul\":3959:3982   */\n      mload\n        /* \"#utility.yul\":3995:4058   */\n      tag_98\n        /* \"#utility.yul\":4052:4056   */\n      0xc0\n        /* \"#utility.yul\":4047:4050   */\n      dup6\n        /* \"#utility.yul\":4043:4057   */\n      add\n        /* \"#utility.yul\":4029:4041   */\n      dup3\n        /* \"#utility.yul\":3995:4058   */\n      tag_46\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3892:4068   */\n      pop\n        /* \"#utility.yul\":4163:4167   */\n      0xe0\n        /* \"#utility.yul\":4156:4161   */\n      dup3\n        /* \"#utility.yul\":4152:4168   */\n      add\n        /* \"#utility.yul\":4146:4169   */\n      mload\n        /* \"#utility.yul\":4182:4245   */\n      tag_99\n        /* \"#utility.yul\":4239:4243   */\n      0xe0\n        /* \"#utility.yul\":4234:4237   */\n      dup6\n        /* \"#utility.yul\":4230:4244   */\n      add\n        /* \"#utility.yul\":4216:4228   */\n      dup3\n        /* \"#utility.yul\":4182:4245   */\n      tag_47\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4078:4255   */\n      pop\n        /* \"#utility.yul\":2783:4262   */\n      pop\n        /* \"#utility.yul\":2641:4262   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4268:4643   */\n    tag_28:\n        /* \"#utility.yul\":4437:4441   */\n      0x00\n        /* \"#utility.yul\":4475:4478   */\n      0x0100\n        /* \"#utility.yul\":4464:4473   */\n      dup3\n        /* \"#utility.yul\":4460:4479   */\n      add\n        /* \"#utility.yul\":4452:4479   */\n      swap1\n      pop\n        /* \"#utility.yul\":4489:4636   */\n      tag_101\n        /* \"#utility.yul\":4633:4634   */\n      0x00\n        /* \"#utility.yul\":4622:4631   */\n      dup4\n        /* \"#utility.yul\":4618:4635   */\n      add\n        /* \"#utility.yul\":4609:4615   */\n      dup5\n        /* \"#utility.yul\":4489:4636   */\n      tag_48\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4268:4643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4730:4847   */\n    tag_50:\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4836:4837   */\n      dup1\n        /* \"#utility.yul\":4829:4841   */\n      revert\n        /* \"#utility.yul\":4976:5098   */\n    tag_52:\n        /* \"#utility.yul\":5049:5073   */\n      tag_106\n        /* \"#utility.yul\":5067:5072   */\n      dup2\n        /* \"#utility.yul\":5049:5073   */\n      tag_41\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":5042:5047   */\n      dup2\n        /* \"#utility.yul\":5039:5074   */\n      eq\n        /* \"#utility.yul\":5029:5092   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":5088:5089   */\n      0x00\n        /* \"#utility.yul\":5085:5086   */\n      dup1\n        /* \"#utility.yul\":5078:5090   */\n      revert\n        /* \"#utility.yul\":5029:5092   */\n    tag_107:\n        /* \"#utility.yul\":4976:5098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5104:5247   */\n    tag_53:\n        /* \"#utility.yul\":5161:5166   */\n      0x00\n        /* \"#utility.yul\":5192:5198   */\n      dup2\n        /* \"#utility.yul\":5186:5199   */\n      mload\n        /* \"#utility.yul\":5177:5199   */\n      swap1\n      pop\n        /* \"#utility.yul\":5208:5241   */\n      tag_109\n        /* \"#utility.yul\":5235:5240   */\n      dup2\n        /* \"#utility.yul\":5208:5241   */\n      tag_52\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":5104:5247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5253:5604   */\n    tag_32:\n        /* \"#utility.yul\":5323:5329   */\n      0x00\n        /* \"#utility.yul\":5372:5374   */\n      0x20\n        /* \"#utility.yul\":5360:5369   */\n      dup3\n        /* \"#utility.yul\":5351:5358   */\n      dup5\n        /* \"#utility.yul\":5347:5370   */\n      sub\n        /* \"#utility.yul\":5343:5375   */\n      slt\n        /* \"#utility.yul\":5340:5459   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":5378:5457   */\n      tag_112\n      tag_50\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":5340:5459   */\n    tag_111:\n        /* \"#utility.yul\":5498:5499   */\n      0x00\n        /* \"#utility.yul\":5523:5587   */\n      tag_113\n        /* \"#utility.yul\":5579:5586   */\n      dup5\n        /* \"#utility.yul\":5570:5576   */\n      dup3\n        /* \"#utility.yul\":5559:5568   */\n      dup6\n        /* \"#utility.yul\":5555:5577   */\n      add\n        /* \"#utility.yul\":5523:5587   */\n      tag_53\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5513:5587   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5597   */\n      pop\n        /* \"#utility.yul\":5253:5604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122043db2711a0c665b5429d5ca15742fd25f2757988f6c750c676851945325a4f3064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:3",
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "922:274:3",
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:3",
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nativeSrc": "970:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nativeSrc": "970:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nativeSrc": "939:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:3",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nativeSrc": "935:32:3",
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nativeSrc": "932:119:3",
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nativeSrc": "1061:128:3",
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nativeSrc": "1076:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nativeSrc": "1147:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nativeSrc": "1115:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:3",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:3",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:3",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b506040516106d93803806106d983398181016040528101906100319190610111565b73050e797f3625ec8785265e1d9bdd4799b97528a173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505061013c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e0826100b7565b9050919050565b6100f0816100d6565b81146100fa575f80fd5b50565b5f8151905061010b816100e7565b92915050565b5f60208284031215610126576101256100b3565b5b5f610133848285016100fd565b91505092915050565b60805160a05161056e61016b5f395f8181610108015261028401525f81816101a80152610260015261056e5ff3fe608060405260043610610037575f3560e01c80634aa4a4fc1461004b578063c31c9c0714610075578063fc0c546a1461009f57610047565b3661004757610045346100c9565b005b5f80fd5b348015610056575f80fd5b5061005f610246565b60405161006c91906102e5565b60405180910390f35b348015610080575f80fd5b5061008961025e565b6040516100969190610359565b60405180910390f35b3480156100aa575f80fd5b506100b3610282565b6040516100c091906102e5565b60405180910390f35b5f60405180610100016040528073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200161012c4261017991906103a8565b81526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf38983836040518363ffffffff1660e01b815260040161020091906104c5565b60206040518083038185885af115801561021c573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610241919061050d565b505050565b73420000000000000000000000000000000000000681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102cf826102a6565b9050919050565b6102df816102c5565b82525050565b5f6020820190506102f85f8301846102d6565b92915050565b5f819050919050565b5f61032161031c610317846102a6565b6102fe565b6102a6565b9050919050565b5f61033282610307565b9050919050565b5f61034382610328565b9050919050565b61035381610339565b82525050565b5f60208201905061036c5f83018461034a565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103b282610372565b91506103bd83610372565b92508282019050808211156103d5576103d461037b565b5b92915050565b6103e4816102c5565b82525050565b5f62ffffff82169050919050565b610401816103ea565b82525050565b61041081610372565b82525050565b61041f816102a6565b82525050565b61010082015f82015161043a5f8501826103db565b50602082015161044d60208501826103db565b50604082015161046060408501826103f8565b50606082015161047360608501826103db565b5060808201516104866080850182610407565b5060a082015161049960a0850182610407565b5060c08201516104ac60c0850182610407565b5060e08201516104bf60e0850182610416565b50505050565b5f610100820190506104d95f830184610425565b92915050565b5f80fd5b6104ec81610372565b81146104f6575f80fd5b50565b5f81519050610507816104e3565b92915050565b5f60208284031215610522576105216104df565b5b5f61052f848285016104f9565b9150509291505056fea264697066735822122043db2711a0c665b5429d5ca15742fd25f2757988f6c750c676851945325a4f3064736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6D9 CODESIZE SUB DUP1 PUSH2 0x6D9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x111 JUMP JUMPDEST PUSH20 0x50E797F3625EC8785265E1D9BDD4799B97528A1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x13C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE0 DUP3 PUSH2 0xB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0 DUP2 PUSH2 0xD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10B DUP2 PUSH2 0xE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126 JUMPI PUSH2 0x125 PUSH2 0xB3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133 DUP5 DUP3 DUP6 ADD PUSH2 0xFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x56E PUSH2 0x16B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x108 ADD MSTORE PUSH2 0x284 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1A8 ADD MSTORE PUSH2 0x260 ADD MSTORE PUSH2 0x56E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x4B JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x9F JUMPI PUSH2 0x47 JUMP JUMPDEST CALLDATASIZE PUSH2 0x47 JUMPI PUSH2 0x45 CALLVALUE PUSH2 0xC9 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C TIMESTAMP PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF DUP3 PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DF DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x321 PUSH2 0x31C PUSH2 0x317 DUP5 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x332 DUP3 PUSH2 0x307 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x343 DUP3 PUSH2 0x328 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x353 DUP2 PUSH2 0x339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36C PUSH0 DUP4 ADD DUP5 PUSH2 0x34A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3B2 DUP3 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3D4 PUSH2 0x37B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E4 DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x401 DUP2 PUSH2 0x3EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x41F DUP2 PUSH2 0x2A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x43A PUSH0 DUP6 ADD DUP3 PUSH2 0x3DB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x44D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3DB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x460 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3F8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x473 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3DB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x486 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x407 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x499 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x407 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x4AC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x407 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4BF PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x416 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x4D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x372 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x507 DUP2 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x522 JUMPI PUSH2 0x521 PUSH2 0x4DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x52F DUP5 DUP3 DUP6 ADD PUSH2 0x4F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xDB 0x27 GT LOG0 0xC6 PUSH6 0xB5429D5CA157 TIMESTAMP REVERT 0x25 CALLCODE PUSH22 0x7988F6C750C676851945325A4F3064736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "126:899:2:-:0;;;319:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;383:42;358:68;;;;;;;;;;444:6;436:14;;;;;;;;;;319:138;126:899;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;126:899:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH9_124": {
									"entryPoint": 582,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapETHForToken_184": {
									"entryPoint": 201,
									"id": 184,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapRouter_119": {
									"entryPoint": 606,
									"id": 119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_121": {
									"entryPoint": 642,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$113_to_t_address": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5607:3",
										"nodeType": "YulBlock",
										"src": "0:5607:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "625:28:3",
													"nodeType": "YulBlock",
													"src": "625:28:3",
													"statements": [
														{
															"nativeSrc": "635:12:3",
															"nodeType": "YulAssignment",
															"src": "635:12:3",
															"value": {
																"name": "value",
																"nativeSrc": "642:5:3",
																"nodeType": "YulIdentifier",
																"src": "642:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "635:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "635:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "593:60:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:3",
														"nodeType": "YulTypedName",
														"src": "611:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "621:3:3",
														"nodeType": "YulTypedName",
														"src": "621:3:3",
														"type": ""
													}
												],
												"src": "593:60:3"
											},
											{
												"body": {
													"nativeSrc": "719:82:3",
													"nodeType": "YulBlock",
													"src": "719:82:3",
													"statements": [
														{
															"nativeSrc": "729:66:3",
															"nodeType": "YulAssignment",
															"src": "729:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "787:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "787:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "769:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "769:17:3"
																				},
																				"nativeSrc": "769:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "769:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "760:8:3",
																			"nodeType": "YulIdentifier",
																			"src": "760:8:3"
																		},
																		"nativeSrc": "760:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "760:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "742:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "742:17:3"
																},
																"nativeSrc": "742:53:3",
																"nodeType": "YulFunctionCall",
																"src": "742:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "729:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "729:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "659:142:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "699:5:3",
														"nodeType": "YulTypedName",
														"src": "699:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "709:9:3",
														"nodeType": "YulTypedName",
														"src": "709:9:3",
														"type": ""
													}
												],
												"src": "659:142:3"
											},
											{
												"body": {
													"nativeSrc": "867:66:3",
													"nodeType": "YulBlock",
													"src": "867:66:3",
													"statements": [
														{
															"nativeSrc": "877:50:3",
															"nodeType": "YulAssignment",
															"src": "877:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "921:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "921:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "890:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "890:30:3"
																},
																"nativeSrc": "890:37:3",
																"nodeType": "YulFunctionCall",
																"src": "890:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "877:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "877:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "807:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "847:5:3",
														"nodeType": "YulTypedName",
														"src": "847:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "857:9:3",
														"nodeType": "YulTypedName",
														"src": "857:9:3",
														"type": ""
													}
												],
												"src": "807:126:3"
											},
											{
												"body": {
													"nativeSrc": "1018:66:3",
													"nodeType": "YulBlock",
													"src": "1018:66:3",
													"statements": [
														{
															"nativeSrc": "1028:50:3",
															"nodeType": "YulAssignment",
															"src": "1028:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1072:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1072:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1041:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "1041:30:3"
																},
																"nativeSrc": "1041:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1041:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1028:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "1028:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$113_to_t_address",
												"nativeSrc": "939:145:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "998:5:3",
														"nodeType": "YulTypedName",
														"src": "998:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1008:9:3",
														"nodeType": "YulTypedName",
														"src": "1008:9:3",
														"type": ""
													}
												],
												"src": "939:145:3"
											},
											{
												"body": {
													"nativeSrc": "1174:85:3",
													"nodeType": "YulBlock",
													"src": "1174:85:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1191:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1191:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1246:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1246:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$113_to_t_address",
																			"nativeSrc": "1196:49:3",
																			"nodeType": "YulIdentifier",
																			"src": "1196:49:3"
																		},
																		"nativeSrc": "1196:56:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1196:56:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1184:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1184:6:3"
																},
																"nativeSrc": "1184:69:3",
																"nodeType": "YulFunctionCall",
																"src": "1184:69:3"
															},
															"nativeSrc": "1184:69:3",
															"nodeType": "YulExpressionStatement",
															"src": "1184:69:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack",
												"nativeSrc": "1090:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1162:5:3",
														"nodeType": "YulTypedName",
														"src": "1162:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1169:3:3",
														"nodeType": "YulTypedName",
														"src": "1169:3:3",
														"type": ""
													}
												],
												"src": "1090:169:3"
											},
											{
												"body": {
													"nativeSrc": "1382:143:3",
													"nodeType": "YulBlock",
													"src": "1382:143:3",
													"statements": [
														{
															"nativeSrc": "1392:26:3",
															"nodeType": "YulAssignment",
															"src": "1392:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1404:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:3"
																},
																"nativeSrc": "1400:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1400:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1392:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1491:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1491:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1504:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1515:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1515:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1500:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:3"
																		},
																		"nativeSrc": "1500:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1500:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack",
																	"nativeSrc": "1428:62:3",
																	"nodeType": "YulIdentifier",
																	"src": "1428:62:3"
																},
																"nativeSrc": "1428:90:3",
																"nodeType": "YulFunctionCall",
																"src": "1428:90:3"
															},
															"nativeSrc": "1428:90:3",
															"nodeType": "YulExpressionStatement",
															"src": "1428:90:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed",
												"nativeSrc": "1265:260:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1354:9:3",
														"nodeType": "YulTypedName",
														"src": "1354:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1366:6:3",
														"nodeType": "YulTypedName",
														"src": "1366:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1377:4:3",
														"nodeType": "YulTypedName",
														"src": "1377:4:3",
														"type": ""
													}
												],
												"src": "1265:260:3"
											},
											{
												"body": {
													"nativeSrc": "1576:32:3",
													"nodeType": "YulBlock",
													"src": "1576:32:3",
													"statements": [
														{
															"nativeSrc": "1586:16:3",
															"nodeType": "YulAssignment",
															"src": "1586:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1597:5:3",
																"nodeType": "YulIdentifier",
																"src": "1597:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1586:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1586:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1531:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1558:5:3",
														"nodeType": "YulTypedName",
														"src": "1558:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1568:7:3",
														"nodeType": "YulTypedName",
														"src": "1568:7:3",
														"type": ""
													}
												],
												"src": "1531:77:3"
											},
											{
												"body": {
													"nativeSrc": "1642:152:3",
													"nodeType": "YulBlock",
													"src": "1642:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:77:3",
																		"nodeType": "YulLiteral",
																		"src": "1662:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1652:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:3"
																},
																"nativeSrc": "1652:88:3",
																"nodeType": "YulFunctionCall",
																"src": "1652:88:3"
															},
															"nativeSrc": "1652:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "1652:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1756:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1756:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1759:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1759:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1749:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:3"
																},
																"nativeSrc": "1749:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1749:15:3"
															},
															"nativeSrc": "1749:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1749:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1780:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1780:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1783:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1783:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1773:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:3"
																},
																"nativeSrc": "1773:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1773:15:3"
															},
															"nativeSrc": "1773:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1773:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1614:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1614:180:3"
											},
											{
												"body": {
													"nativeSrc": "1844:147:3",
													"nodeType": "YulBlock",
													"src": "1844:147:3",
													"statements": [
														{
															"nativeSrc": "1854:25:3",
															"nodeType": "YulAssignment",
															"src": "1854:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1877:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1877:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1859:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1859:17:3"
																},
																"nativeSrc": "1859:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1859:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1854:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "1854:1:3"
																}
															]
														},
														{
															"nativeSrc": "1888:25:3",
															"nodeType": "YulAssignment",
															"src": "1888:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1911:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1911:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1893:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1893:17:3"
																},
																"nativeSrc": "1893:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1893:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1888:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "1888:1:3"
																}
															]
														},
														{
															"nativeSrc": "1922:16:3",
															"nodeType": "YulAssignment",
															"src": "1922:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1933:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1933:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1936:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1936:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1929:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1929:3:3"
																},
																"nativeSrc": "1929:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1929:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1922:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1962:22:3",
																"nodeType": "YulBlock",
																"src": "1962:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1964:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1964:16:3"
																			},
																			"nativeSrc": "1964:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1964:18:3"
																		},
																		"nativeSrc": "1964:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1964:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1954:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1954:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1957:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1957:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1951:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1951:2:3"
																},
																"nativeSrc": "1951:10:3",
																"nodeType": "YulFunctionCall",
																"src": "1951:10:3"
															},
															"nativeSrc": "1948:36:3",
															"nodeType": "YulIf",
															"src": "1948:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1800:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1831:1:3",
														"nodeType": "YulTypedName",
														"src": "1831:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1834:1:3",
														"nodeType": "YulTypedName",
														"src": "1834:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1840:3:3",
														"nodeType": "YulTypedName",
														"src": "1840:3:3",
														"type": ""
													}
												],
												"src": "1800:191:3"
											},
											{
												"body": {
													"nativeSrc": "2052:53:3",
													"nodeType": "YulBlock",
													"src": "2052:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2069:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2069:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2092:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2092:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2074:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2074:17:3"
																		},
																		"nativeSrc": "2074:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2074:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2062:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:3"
																},
																"nativeSrc": "2062:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2062:37:3"
															},
															"nativeSrc": "2062:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2062:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "1997:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2040:5:3",
														"nodeType": "YulTypedName",
														"src": "2040:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2047:3:3",
														"nodeType": "YulTypedName",
														"src": "2047:3:3",
														"type": ""
													}
												],
												"src": "1997:108:3"
											},
											{
												"body": {
													"nativeSrc": "2155:47:3",
													"nodeType": "YulBlock",
													"src": "2155:47:3",
													"statements": [
														{
															"nativeSrc": "2165:31:3",
															"nodeType": "YulAssignment",
															"src": "2165:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2180:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2180:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2187:8:3",
																		"nodeType": "YulLiteral",
																		"src": "2187:8:3",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2176:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:3"
																},
																"nativeSrc": "2176:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2176:20:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2165:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2165:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "2111:91:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2137:5:3",
														"nodeType": "YulTypedName",
														"src": "2137:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2147:7:3",
														"nodeType": "YulTypedName",
														"src": "2147:7:3",
														"type": ""
													}
												],
												"src": "2111:91:3"
											},
											{
												"body": {
													"nativeSrc": "2261:52:3",
													"nodeType": "YulBlock",
													"src": "2261:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2278:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2300:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2300:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "2283:16:3",
																			"nodeType": "YulIdentifier",
																			"src": "2283:16:3"
																		},
																		"nativeSrc": "2283:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2283:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2271:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:3"
																},
																"nativeSrc": "2271:36:3",
																"nodeType": "YulFunctionCall",
																"src": "2271:36:3"
															},
															"nativeSrc": "2271:36:3",
															"nodeType": "YulExpressionStatement",
															"src": "2271:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "2208:105:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2249:5:3",
														"nodeType": "YulTypedName",
														"src": "2249:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2256:3:3",
														"nodeType": "YulTypedName",
														"src": "2256:3:3",
														"type": ""
													}
												],
												"src": "2208:105:3"
											},
											{
												"body": {
													"nativeSrc": "2374:53:3",
													"nodeType": "YulBlock",
													"src": "2374:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2391:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2391:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2414:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2414:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2396:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2396:17:3"
																		},
																		"nativeSrc": "2396:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2384:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:3"
																},
																"nativeSrc": "2384:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2384:37:3"
															},
															"nativeSrc": "2384:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2384:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2319:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2362:5:3",
														"nodeType": "YulTypedName",
														"src": "2362:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2369:3:3",
														"nodeType": "YulTypedName",
														"src": "2369:3:3",
														"type": ""
													}
												],
												"src": "2319:108:3"
											},
											{
												"body": {
													"nativeSrc": "2488:53:3",
													"nodeType": "YulBlock",
													"src": "2488:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2505:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2505:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2528:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2528:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "2510:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2510:17:3"
																		},
																		"nativeSrc": "2510:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2510:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2498:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2498:6:3"
																},
																"nativeSrc": "2498:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2498:37:3"
															},
															"nativeSrc": "2498:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2498:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "2433:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2476:5:3",
														"nodeType": "YulTypedName",
														"src": "2476:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2483:3:3",
														"nodeType": "YulTypedName",
														"src": "2483:3:3",
														"type": ""
													}
												],
												"src": "2433:108:3"
											},
											{
												"body": {
													"nativeSrc": "2783:1479:3",
													"nodeType": "YulBlock",
													"src": "2783:1479:3",
													"statements": [
														{
															"nativeSrc": "2793:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2793:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2809:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2809:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2814:6:3",
																		"nodeType": "YulLiteral",
																		"src": "2814:6:3",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2805:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2805:3:3"
																},
																"nativeSrc": "2805:16:3",
																"nodeType": "YulFunctionCall",
																"src": "2805:16:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2797:4:3",
																	"nodeType": "YulTypedName",
																	"src": "2797:4:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2831:167:3",
															"nodeType": "YulBlock",
															"src": "2831:167:3",
															"statements": [
																{
																	"nativeSrc": "2869:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2869:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2899:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2899:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2906:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2906:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2895:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2895:3:3"
																				},
																				"nativeSrc": "2895:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2895:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2889:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "2889:5:3"
																		},
																		"nativeSrc": "2889:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2889:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2873:12:3",
																			"nodeType": "YulTypedName",
																			"src": "2873:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2959:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "2959:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2977:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2977:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2982:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2982:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2973:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2973:3:3"
																				},
																				"nativeSrc": "2973:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2973:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "2925:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "2925:33:3"
																		},
																		"nativeSrc": "2925:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2925:63:3"
																	},
																	"nativeSrc": "2925:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "2925:63:3"
																}
															]
														},
														{
															"nativeSrc": "3008:168:3",
															"nodeType": "YulBlock",
															"src": "3008:168:3",
															"statements": [
																{
																	"nativeSrc": "3047:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3047:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3077:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3077:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3084:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3084:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3073:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3073:3:3"
																				},
																				"nativeSrc": "3073:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3073:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3067:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "3067:5:3"
																		},
																		"nativeSrc": "3067:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3051:12:3",
																			"nodeType": "YulTypedName",
																			"src": "3051:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3137:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "3137:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3155:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3155:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3160:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3160:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3151:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:3"
																				},
																				"nativeSrc": "3151:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3151:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3103:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "3103:33:3"
																		},
																		"nativeSrc": "3103:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3103:63:3"
																	},
																	"nativeSrc": "3103:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "3103:63:3"
																}
															]
														},
														{
															"nativeSrc": "3186:161:3",
															"nodeType": "YulBlock",
															"src": "3186:161:3",
															"statements": [
																{
																	"nativeSrc": "3220:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3250:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3250:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3257:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3257:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3246:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3246:3:3"
																				},
																				"nativeSrc": "3246:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3246:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3240:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "3240:5:3"
																		},
																		"nativeSrc": "3240:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3240:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3224:12:3",
																			"nodeType": "YulTypedName",
																			"src": "3224:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3308:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "3308:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3326:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3326:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3331:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3331:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3322:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3322:3:3"
																				},
																				"nativeSrc": "3322:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3322:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "3276:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "3276:31:3"
																		},
																		"nativeSrc": "3276:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3276:61:3"
																	},
																	"nativeSrc": "3276:61:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "3276:61:3"
																}
															]
														},
														{
															"nativeSrc": "3357:169:3",
															"nodeType": "YulBlock",
															"src": "3357:169:3",
															"statements": [
																{
																	"nativeSrc": "3397:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3397:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3427:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3427:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3434:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3434:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3423:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3423:3:3"
																				},
																				"nativeSrc": "3423:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3423:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3417:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "3417:5:3"
																		},
																		"nativeSrc": "3417:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3401:12:3",
																			"nodeType": "YulTypedName",
																			"src": "3401:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3487:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "3487:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3505:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3505:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3510:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3510:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3501:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3501:3:3"
																				},
																				"nativeSrc": "3501:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3501:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3453:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "3453:33:3"
																		},
																		"nativeSrc": "3453:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:63:3"
																	},
																	"nativeSrc": "3453:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "3453:63:3"
																}
															]
														},
														{
															"nativeSrc": "3536:168:3",
															"nodeType": "YulBlock",
															"src": "3536:168:3",
															"statements": [
																{
																	"nativeSrc": "3575:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3575:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3605:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3605:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3612:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3612:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3601:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3601:3:3"
																				},
																				"nativeSrc": "3601:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3601:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3595:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "3595:5:3"
																		},
																		"nativeSrc": "3595:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3595:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3579:12:3",
																			"nodeType": "YulTypedName",
																			"src": "3579:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3665:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "3665:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3683:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3683:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3688:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3688:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3679:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3679:3:3"
																				},
																				"nativeSrc": "3679:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3679:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3631:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "3631:33:3"
																		},
																		"nativeSrc": "3631:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3631:63:3"
																	},
																	"nativeSrc": "3631:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "3631:63:3"
																}
															]
														},
														{
															"nativeSrc": "3714:168:3",
															"nodeType": "YulBlock",
															"src": "3714:168:3",
															"statements": [
																{
																	"nativeSrc": "3753:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3753:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3783:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3783:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3790:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3790:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3779:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3779:3:3"
																				},
																				"nativeSrc": "3779:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3779:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3773:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "3773:5:3"
																		},
																		"nativeSrc": "3773:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3757:12:3",
																			"nodeType": "YulTypedName",
																			"src": "3757:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3843:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "3843:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3861:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3861:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3866:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3866:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3857:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3857:3:3"
																				},
																				"nativeSrc": "3857:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3857:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3809:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "3809:33:3"
																		},
																		"nativeSrc": "3809:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3809:63:3"
																	},
																	"nativeSrc": "3809:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "3809:63:3"
																}
															]
														},
														{
															"nativeSrc": "3892:176:3",
															"nodeType": "YulBlock",
															"src": "3892:176:3",
															"statements": [
																{
																	"nativeSrc": "3939:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3939:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3969:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3969:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3976:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3976:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3965:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3965:3:3"
																				},
																				"nativeSrc": "3965:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3965:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3959:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "3959:5:3"
																		},
																		"nativeSrc": "3959:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3943:12:3",
																			"nodeType": "YulTypedName",
																			"src": "3943:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4029:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "4029:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4047:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "4047:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4052:4:3",
																						"nodeType": "YulLiteral",
																						"src": "4052:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4043:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4043:3:3"
																				},
																				"nativeSrc": "4043:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4043:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3995:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "3995:33:3"
																		},
																		"nativeSrc": "3995:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:63:3"
																	},
																	"nativeSrc": "3995:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "3995:63:3"
																}
															]
														},
														{
															"nativeSrc": "4078:177:3",
															"nodeType": "YulBlock",
															"src": "4078:177:3",
															"statements": [
																{
																	"nativeSrc": "4126:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4126:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4156:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4156:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4163:4:3",
																						"nodeType": "YulLiteral",
																						"src": "4163:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4152:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4152:3:3"
																				},
																				"nativeSrc": "4152:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4152:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4146:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "4146:5:3"
																		},
																		"nativeSrc": "4146:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4130:12:3",
																			"nodeType": "YulTypedName",
																			"src": "4130:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4216:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "4216:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4234:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "4234:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4239:4:3",
																						"nodeType": "YulLiteral",
																						"src": "4239:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4230:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4230:3:3"
																				},
																				"nativeSrc": "4230:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4230:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "4182:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "4182:33:3"
																		},
																		"nativeSrc": "4182:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4182:63:3"
																	},
																	"nativeSrc": "4182:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "4182:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack",
												"nativeSrc": "2641:1621:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2770:5:3",
														"nodeType": "YulTypedName",
														"src": "2770:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2777:3:3",
														"nodeType": "YulTypedName",
														"src": "2777:3:3",
														"type": ""
													}
												],
												"src": "2641:1621:3"
											},
											{
												"body": {
													"nativeSrc": "4442:201:3",
													"nodeType": "YulBlock",
													"src": "4442:201:3",
													"statements": [
														{
															"nativeSrc": "4452:27:3",
															"nodeType": "YulAssignment",
															"src": "4452:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4464:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4464:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4475:3:3",
																		"nodeType": "YulLiteral",
																		"src": "4475:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4460:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4460:3:3"
																},
																"nativeSrc": "4460:19:3",
																"nodeType": "YulFunctionCall",
																"src": "4460:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4452:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4452:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4609:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4609:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4622:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4622:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4633:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4633:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4618:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4618:3:3"
																		},
																		"nativeSrc": "4618:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4618:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack",
																	"nativeSrc": "4489:119:3",
																	"nodeType": "YulIdentifier",
																	"src": "4489:119:3"
																},
																"nativeSrc": "4489:147:3",
																"nodeType": "YulFunctionCall",
																"src": "4489:147:3"
															},
															"nativeSrc": "4489:147:3",
															"nodeType": "YulExpressionStatement",
															"src": "4489:147:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed",
												"nativeSrc": "4268:375:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4414:9:3",
														"nodeType": "YulTypedName",
														"src": "4414:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4426:6:3",
														"nodeType": "YulTypedName",
														"src": "4426:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4437:4:3",
														"nodeType": "YulTypedName",
														"src": "4437:4:3",
														"type": ""
													}
												],
												"src": "4268:375:3"
											},
											{
												"body": {
													"nativeSrc": "4689:35:3",
													"nodeType": "YulBlock",
													"src": "4689:35:3",
													"statements": [
														{
															"nativeSrc": "4699:19:3",
															"nodeType": "YulAssignment",
															"src": "4699:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4715:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4715:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4709:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4709:5:3"
																},
																"nativeSrc": "4709:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4709:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4699:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "4649:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4682:6:3",
														"nodeType": "YulTypedName",
														"src": "4682:6:3",
														"type": ""
													}
												],
												"src": "4649:75:3"
											},
											{
												"body": {
													"nativeSrc": "4819:28:3",
													"nodeType": "YulBlock",
													"src": "4819:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4836:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4836:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4839:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4829:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:3"
																},
																"nativeSrc": "4829:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4829:12:3"
															},
															"nativeSrc": "4829:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "4829:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "4730:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4730:117:3"
											},
											{
												"body": {
													"nativeSrc": "4942:28:3",
													"nodeType": "YulBlock",
													"src": "4942:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4959:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4959:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4952:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:3"
																},
																"nativeSrc": "4952:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4952:12:3"
															},
															"nativeSrc": "4952:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "4952:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "4853:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4853:117:3"
											},
											{
												"body": {
													"nativeSrc": "5019:79:3",
													"nodeType": "YulBlock",
													"src": "5019:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "5076:16:3",
																"nodeType": "YulBlock",
																"src": "5076:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5085:1:3",
																					"nodeType": "YulLiteral",
																					"src": "5085:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5088:1:3",
																					"nodeType": "YulLiteral",
																					"src": "5088:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5078:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5078:6:3"
																			},
																			"nativeSrc": "5078:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5078:12:3"
																		},
																		"nativeSrc": "5078:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5078:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5042:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5042:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5067:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "5067:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5049:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "5049:17:3"
																				},
																				"nativeSrc": "5049:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5049:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5039:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "5039:2:3"
																		},
																		"nativeSrc": "5039:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5039:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5032:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5032:6:3"
																},
																"nativeSrc": "5032:43:3",
																"nodeType": "YulFunctionCall",
																"src": "5032:43:3"
															},
															"nativeSrc": "5029:63:3",
															"nodeType": "YulIf",
															"src": "5029:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4976:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5012:5:3",
														"nodeType": "YulTypedName",
														"src": "5012:5:3",
														"type": ""
													}
												],
												"src": "4976:122:3"
											},
											{
												"body": {
													"nativeSrc": "5167:80:3",
													"nodeType": "YulBlock",
													"src": "5167:80:3",
													"statements": [
														{
															"nativeSrc": "5177:22:3",
															"nodeType": "YulAssignment",
															"src": "5177:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5192:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5192:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5186:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5186:5:3"
																},
																"nativeSrc": "5186:13:3",
																"nodeType": "YulFunctionCall",
																"src": "5186:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5177:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5177:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5235:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "5235:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5208:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "5208:26:3"
																},
																"nativeSrc": "5208:33:3",
																"nodeType": "YulFunctionCall",
																"src": "5208:33:3"
															},
															"nativeSrc": "5208:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "5208:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5104:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5145:6:3",
														"nodeType": "YulTypedName",
														"src": "5145:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5153:3:3",
														"nodeType": "YulTypedName",
														"src": "5153:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5161:5:3",
														"nodeType": "YulTypedName",
														"src": "5161:5:3",
														"type": ""
													}
												],
												"src": "5104:143:3"
											},
											{
												"body": {
													"nativeSrc": "5330:274:3",
													"nodeType": "YulBlock",
													"src": "5330:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "5376:83:3",
																"nodeType": "YulBlock",
																"src": "5376:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5378:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "5378:77:3"
																			},
																			"nativeSrc": "5378:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5378:79:3"
																		},
																		"nativeSrc": "5378:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5378:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5351:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "5351:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5360:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5360:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5347:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5347:3:3"
																		},
																		"nativeSrc": "5347:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5372:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5343:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5343:3:3"
																},
																"nativeSrc": "5343:32:3",
																"nodeType": "YulFunctionCall",
																"src": "5343:32:3"
															},
															"nativeSrc": "5340:119:3",
															"nodeType": "YulIf",
															"src": "5340:119:3"
														},
														{
															"nativeSrc": "5469:128:3",
															"nodeType": "YulBlock",
															"src": "5469:128:3",
															"statements": [
																{
																	"nativeSrc": "5484:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5498:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5498:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5488:6:3",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5513:74:3",
																	"nodeType": "YulAssignment",
																	"src": "5513:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5559:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "5559:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5570:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "5570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5555:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5555:3:3"
																				},
																				"nativeSrc": "5555:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5579:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "5579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5523:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "5523:31:3"
																		},
																		"nativeSrc": "5523:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5523:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5513:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5513:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5253:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5300:9:3",
														"nodeType": "YulTypedName",
														"src": "5300:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5311:7:3",
														"nodeType": "YulTypedName",
														"src": "5311:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5323:6:3",
														"nodeType": "YulTypedName",
														"src": "5323:6:3",
														"type": ""
													}
												],
												"src": "5253:351:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$113_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$113_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$113_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"119": [
									{
										"length": 32,
										"start": 424
									},
									{
										"length": 32,
										"start": 608
									}
								],
								"121": [
									{
										"length": 32,
										"start": 264
									},
									{
										"length": 32,
										"start": 644
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610037575f3560e01c80634aa4a4fc1461004b578063c31c9c0714610075578063fc0c546a1461009f57610047565b3661004757610045346100c9565b005b5f80fd5b348015610056575f80fd5b5061005f610246565b60405161006c91906102e5565b60405180910390f35b348015610080575f80fd5b5061008961025e565b6040516100969190610359565b60405180910390f35b3480156100aa575f80fd5b506100b3610282565b6040516100c091906102e5565b60405180910390f35b5f60405180610100016040528073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200161012c4261017991906103a8565b81526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf38983836040518363ffffffff1660e01b815260040161020091906104c5565b60206040518083038185885af115801561021c573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610241919061050d565b505050565b73420000000000000000000000000000000000000681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102cf826102a6565b9050919050565b6102df816102c5565b82525050565b5f6020820190506102f85f8301846102d6565b92915050565b5f819050919050565b5f61032161031c610317846102a6565b6102fe565b6102a6565b9050919050565b5f61033282610307565b9050919050565b5f61034382610328565b9050919050565b61035381610339565b82525050565b5f60208201905061036c5f83018461034a565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103b282610372565b91506103bd83610372565b92508282019050808211156103d5576103d461037b565b5b92915050565b6103e4816102c5565b82525050565b5f62ffffff82169050919050565b610401816103ea565b82525050565b61041081610372565b82525050565b61041f816102a6565b82525050565b61010082015f82015161043a5f8501826103db565b50602082015161044d60208501826103db565b50604082015161046060408501826103f8565b50606082015161047360608501826103db565b5060808201516104866080850182610407565b5060a082015161049960a0850182610407565b5060c08201516104ac60c0850182610407565b5060e08201516104bf60e0850182610416565b50505050565b5f610100820190506104d95f830184610425565b92915050565b5f80fd5b6104ec81610372565b81146104f6575f80fd5b50565b5f81519050610507816104e3565b92915050565b5f60208284031215610522576105216104df565b5b5f61052f848285016104f9565b9150509291505056fea264697066735822122043db2711a0c665b5429d5ca15742fd25f2757988f6c750c676851945325a4f3064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x4B JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x9F JUMPI PUSH2 0x47 JUMP JUMPDEST CALLDATASIZE PUSH2 0x47 JUMPI PUSH2 0x45 CALLVALUE PUSH2 0xC9 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C TIMESTAMP PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF DUP3 PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DF DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x321 PUSH2 0x31C PUSH2 0x317 DUP5 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x332 DUP3 PUSH2 0x307 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x343 DUP3 PUSH2 0x328 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x353 DUP2 PUSH2 0x339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36C PUSH0 DUP4 ADD DUP5 PUSH2 0x34A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3B2 DUP3 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3D4 PUSH2 0x37B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E4 DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x401 DUP2 PUSH2 0x3EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x41F DUP2 PUSH2 0x2A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x43A PUSH0 DUP6 ADD DUP3 PUSH2 0x3DB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x44D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3DB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x460 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3F8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x473 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3DB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x486 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x407 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x499 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x407 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x4AC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x407 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4BF PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x416 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x4D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x372 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x507 DUP2 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x522 JUMPI PUSH2 0x521 PUSH2 0x4DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x52F DUP5 DUP3 DUP6 ADD PUSH2 0x4F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xDB 0x27 GT LOG0 0xC6 PUSH6 0xB5429D5CA157 TIMESTAMP REVERT 0x25 CALLCODE PUSH22 0x7988F6C750C676851945325A4F3064736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "126:899:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:26;516:9;500:15;:26::i;:::-;126:899;;;;;239:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;158:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;203:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;539:482;599:48;650:303;;;;;;;;271:42;650:303;;;;;;737:5;650:303;;;;;;761:4;650:303;;;;;;790:10;650:303;;;;;;842:3;824:15;:21;;;;:::i;:::-;650:303;;;;869:6;650:303;;;;907:1;650:303;;;;941:1;650:303;;;;;599:354;;964:10;:27;;;999:6;1007;964:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;589:432;539:482;:::o;239:74::-;271:42;239:74;:::o;158:39::-;;;:::o;203:30::-;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:60::-;621:3;642:5;635:12;;593:60;;;:::o;659:142::-;709:9;742:53;760:34;769:24;787:5;769:24;:::i;:::-;760:34;:::i;:::-;742:53;:::i;:::-;729:66;;659:142;;;:::o;807:126::-;857:9;890:37;921:5;890:37;:::i;:::-;877:50;;807:126;;;:::o;939:145::-;1008:9;1041:37;1072:5;1041:37;:::i;:::-;1028:50;;939:145;;;:::o;1090:169::-;1196:56;1246:5;1196:56;:::i;:::-;1191:3;1184:69;1090:169;;:::o;1265:260::-;1377:4;1415:2;1404:9;1400:18;1392:26;;1428:90;1515:1;1504:9;1500:17;1491:6;1428:90;:::i;:::-;1265:260;;;;:::o;1531:77::-;1568:7;1597:5;1586:16;;1531:77;;;:::o;1614:180::-;1662:77;1659:1;1652:88;1759:4;1756:1;1749:15;1783:4;1780:1;1773:15;1800:191;1840:3;1859:20;1877:1;1859:20;:::i;:::-;1854:25;;1893:20;1911:1;1893:20;:::i;:::-;1888:25;;1936:1;1933;1929:9;1922:16;;1957:3;1954:1;1951:10;1948:36;;;1964:18;;:::i;:::-;1948:36;1800:191;;;;:::o;1997:108::-;2074:24;2092:5;2074:24;:::i;:::-;2069:3;2062:37;1997:108;;:::o;2111:91::-;2147:7;2187:8;2180:5;2176:20;2165:31;;2111:91;;;:::o;2208:105::-;2283:23;2300:5;2283:23;:::i;:::-;2278:3;2271:36;2208:105;;:::o;2319:108::-;2396:24;2414:5;2396:24;:::i;:::-;2391:3;2384:37;2319:108;;:::o;2433:::-;2510:24;2528:5;2510:24;:::i;:::-;2505:3;2498:37;2433:108;;:::o;2641:1621::-;2814:6;2809:3;2805:16;2906:4;2899:5;2895:16;2889:23;2925:63;2982:4;2977:3;2973:14;2959:12;2925:63;:::i;:::-;2831:167;3084:4;3077:5;3073:16;3067:23;3103:63;3160:4;3155:3;3151:14;3137:12;3103:63;:::i;:::-;3008:168;3257:4;3250:5;3246:16;3240:23;3276:61;3331:4;3326:3;3322:14;3308:12;3276:61;:::i;:::-;3186:161;3434:4;3427:5;3423:16;3417:23;3453:63;3510:4;3505:3;3501:14;3487:12;3453:63;:::i;:::-;3357:169;3612:4;3605:5;3601:16;3595:23;3631:63;3688:4;3683:3;3679:14;3665:12;3631:63;:::i;:::-;3536:168;3790:4;3783:5;3779:16;3773:23;3809:63;3866:4;3861:3;3857:14;3843:12;3809:63;:::i;:::-;3714:168;3976:4;3969:5;3965:16;3959:23;3995:63;4052:4;4047:3;4043:14;4029:12;3995:63;:::i;:::-;3892:176;4163:4;4156:5;4152:16;4146:23;4182:63;4239:4;4234:3;4230:14;4216:12;4182:63;:::i;:::-;4078:177;2783:1479;2641:1621;;:::o;4268:375::-;4437:4;4475:3;4464:9;4460:19;4452:27;;4489:147;4633:1;4622:9;4618:17;4609:6;4489:147;:::i;:::-;4268:375;;;;:::o;4730:117::-;4839:1;4836;4829:12;4976:122;5049:24;5067:5;5049:24;:::i;:::-;5042:5;5039:35;5029:63;;5088:1;5085;5078:12;5029:63;4976:122;:::o;5104:143::-;5161:5;5192:6;5186:13;5177:22;;5208:33;5235:5;5208:33;:::i;:::-;5104:143;;;;:::o;5253:351::-;5323:6;5372:2;5360:9;5351:7;5347:23;5343:32;5340:119;;;5378:79;;:::i;:::-;5340:119;5498:1;5523:64;5579:7;5570:6;5559:9;5555:22;5523:64;:::i;:::-;5513:74;;5469:128;5253:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "278000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "351",
								"swapRouter()": "infinite",
								"token()": "infinite"
							},
							"internal": {
								"swapETHForToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 457,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 457,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 319,
									"end": 457,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 319,
									"end": 457,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 319,
									"end": 457,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 319,
									"end": 457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 319,
									"end": 457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 383,
									"end": 425,
									"name": "PUSH",
									"source": 2,
									"value": "50E797F3625EC8785265E1D9BDD4799B97528A1"
								},
								{
									"begin": 358,
									"end": 426,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 358,
									"end": 426,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 358,
									"end": 426,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 426,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 358,
									"end": 426,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 358,
									"end": 426,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 358,
									"end": 426,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 358,
									"end": 426,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 358,
									"end": 426,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 358,
									"end": 426,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 444,
									"end": 450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 436,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 436,
									"end": 450,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 436,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 436,
									"end": 450,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 436,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 436,
									"end": 450,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 436,
									"end": 450,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 436,
									"end": 450,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 436,
									"end": 450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 436,
									"end": 450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 319,
									"end": 457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 1025,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043db2711a0c665b5429d5ca15742fd25f2757988f6c750c676851945325a4f3064736f6c634300081a0033",
									".code": [
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "4AA4A4FC"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "C31C9C07"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "FC0C546A"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 500,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 516,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 500,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 500,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 526,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 500,
											"end": 526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 1025,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 239,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 239,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 158,
											"end": 197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 158,
											"end": 197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 203,
											"end": 233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 203,
											"end": 233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 539,
											"end": 1021,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 539,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 313,
											"name": "PUSH",
											"source": 2,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 737,
											"end": 742,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 761,
											"end": 765,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 790,
											"end": 800,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 842,
											"end": 845,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 824,
											"end": 839,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 824,
											"end": 845,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 824,
											"end": 845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 845,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 824,
											"end": 845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 869,
											"end": 875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 907,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 650,
											"end": 953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 599,
											"end": 953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 964,
											"end": 991,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 964,
											"end": 991,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 964,
											"end": 991,
											"name": "PUSH",
											"source": 2,
											"value": "414BF389"
										},
										{
											"begin": 999,
											"end": 1005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 964,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 964,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 1021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 1021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 1021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 313,
											"name": "PUSH",
											"source": 2,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 239,
											"end": 313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 239,
											"end": 313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 158,
											"end": 197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 158,
											"end": 197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 203,
											"end": 233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 203,
											"end": 233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 653,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 593,
											"end": 653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 647,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 593,
											"end": 653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 659,
											"end": 801,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 659,
											"end": 801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 787,
											"end": 792,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 769,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 793,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 760,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 760,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 742,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 742,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 729,
											"end": 795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 729,
											"end": 795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 659,
											"end": 801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 659,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 933,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 807,
											"end": 933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 857,
											"end": 866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 921,
											"end": 926,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 890,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 927,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 877,
											"end": 927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 807,
											"end": 933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1041,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1196,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1253,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1608,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1794,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1614,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1739,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1763,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1764,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1788,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1991,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1800,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1859,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1879,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1859,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1893,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1913,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1893,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1913,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1955,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1951,
											"end": 1961,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1984,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1948,
											"end": 1984,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1964,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1984,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1948,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1991,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1991,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2105,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1997,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2092,
											"end": 2097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2074,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2069,
											"end": 2072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2202,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2111,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2195,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2165,
											"end": 2196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2165,
											"end": 2196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2202,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2313,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2208,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2300,
											"end": 2305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2283,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2307,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2427,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2319,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2396,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2421,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2541,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2433,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2510,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2534,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2510,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2505,
											"end": 2508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2535,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 4262,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2641,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2809,
											"end": 2812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2925,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2988,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2925,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3089,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3160,
											"end": 3164,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3158,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3103,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3008,
											"end": 3176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3246,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3240,
											"end": 3263,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3331,
											"end": 3335,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3329,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3322,
											"end": 3336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3276,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3337,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3276,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3427,
											"end": 3432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3423,
											"end": 3439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3505,
											"end": 3508,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3501,
											"end": 3515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3453,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3516,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3453,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3357,
											"end": 3526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3617,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3618,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3688,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3677,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3631,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3694,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3631,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3779,
											"end": 3795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3809,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3969,
											"end": 3974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 3981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3982,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 4047,
											"end": 4050,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3995,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3995,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 4068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4239,
											"end": 4243,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4234,
											"end": 4237,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4244,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4182,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4245,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4182,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4078,
											"end": 4255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 4262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 4262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 4262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 4262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4643,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4268,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 4441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4478,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4622,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4609,
											"end": 4615,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4489,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4636,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4489,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4643,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 4847,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4730,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 5098,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4976,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5049,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5067,
											"end": 5072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5049,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5049,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5049,
											"end": 5073,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5049,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5029,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5029,
											"end": 5092,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5029,
											"end": 5092,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5029,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 5098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 5098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5247,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5104,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5199,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5235,
											"end": 5240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5208,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5241,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5208,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5247,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5604,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5253,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5358,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5347,
											"end": 5370,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5375,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5378,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5378,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5340,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5579,
											"end": 5586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5570,
											"end": 5576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5523,
											"end": 5587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5587,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5523,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/build_bounty/prototype/auto_swap_build.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"swapRouter()": "c31c9c07",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/build_bounty/prototype/auto_swap_build.sol\":\"AutoSwapDonation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/build_bounty/prototype/auto_swap_build.sol\":{\"keccak256\":\"0x098fca3eb4ebcd39e1f98b675ebf71b4e778cea2248019855448858db48cc4a5\",\"urls\":[\"bzz-raw://9477095d3622fb2bc49a33fbb3a9bedb170f66b1316c338a7d9f3727252739ed\",\"dweb:/ipfs/Qmbn1NwDSBCn3hRPBXcjEaK7rAvWAPVkW6EUALE6A5hM3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/build_bounty/prototype/auto_swap_build.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 14,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1197:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1226:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 13,
									"src": "1157:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "215:1077:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:0"
				},
				"id": 0
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 114,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 16,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 114,
							"sourceUnit": 14,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "305:22:1"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:1"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113,
								13
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "374:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "399:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "425:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 25,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "445:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "472:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "498:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "524:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "558:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 35,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "334:256:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "877:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 40,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 39,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 37,
														"src": "877:22:1"
													},
													"referencedDeclaration": 37,
													"src": "877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:1"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "943:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:1"
									},
									"scope": 113,
									"src": "851:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 57,
									"members": [
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1002:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 47,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1022:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 49,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1049:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 51,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1075:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 53,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1101:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 55,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "968:164:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1436:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$57_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 60,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 59,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 57,
														"src": "1436:16:1"
													},
													"referencedDeclaration": 57,
													"src": "1436:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$57_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1496:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:1"
									},
									"scope": 113,
									"src": "1416:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 83,
									"members": [
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1562:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 67,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1587:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 69,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1613:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 71,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1633:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 73,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1660:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1686:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1713:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 79,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1746:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 81,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "1521:257:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2066:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 86,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 85,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "2066:23:1"
													},
													"referencedDeclaration": 83,
													"src": "2066:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2133:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:1"
									},
									"scope": 113,
									"src": "2039:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 103,
									"members": [
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2192:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 93,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2212:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 95,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2239:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2265:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2292:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "2157:165:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2638:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$103_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 105,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 103,
														"src": "2638:17:1"
													},
													"referencedDeclaration": 103,
													"src": "2638:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$103_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2699:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:1"
									},
									"scope": 113,
									"src": "2617:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "280:2439:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:1"
				},
				"id": 1
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"ast": {
					"absolutePath": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"exportedSymbols": {
						"AutoSwapDonation": [
							185
						],
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 186,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:24:2"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 114,
							"src": "56:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutoSwapDonation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "AutoSwapDonation",
							"nameLocation": "135:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 119,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "187:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "158:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$113",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 118,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 117,
											"name": "ISwapRouter",
											"nameLocations": [
												"158:11:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 113,
											"src": "158:11:2"
										},
										"referencedDeclaration": 113,
										"src": "158:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$113",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 121,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "228:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "203:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 120,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4aa4a4fc",
									"id": 124,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "263:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "239:74:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 122,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "239:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
										"id": 123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "271:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4200000000000000000000000000000000000006"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "348:109:2",
										"statements": [
											{
												"expression": {
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "358:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$113",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830353045373937663336323545433837383532363565316439424464343739396239373532384131",
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "383:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x050E797f3625EC8785265e1d9BDd4799b97528A1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 130,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "371:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "371:55:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$113",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "358:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$113",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "358:68:2"
											},
											{
												"expression": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 135,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "436:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 136,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "444:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "436:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "436:14:2"
											}
										]
									},
									"id": 140,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "340:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "332:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:17:2"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "348:0:2"
									},
									"scope": 185,
									"src": "319:138:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "490:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "516:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "520:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "516:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 143,
														"name": "swapETHForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "500:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "500:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "500:26:2"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:2:2"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:0:2"
									},
									"scope": 185,
									"src": "463:70:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "589:432:2",
										"statements": [
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "641:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 183,
														"src": "599:48:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 157,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 156,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"599:11:2",
																	"611:22:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 37,
																"src": "599:34:2"
															},
															"referencedDeclaration": 37,
															"src": "599:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"arguments": [
														{
															"id": 161,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "708:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 162,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "737:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "761:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"expression": {
																"id": 164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "790:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "794:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "790:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 166,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "824:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "830:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "824:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333030",
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "842:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "824:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 170,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "869:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "907:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "941:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 159,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "650:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "662:22:2",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "650:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$37_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"699:7:2",
														"727:8:2",
														"756:3:2",
														"779:9:2",
														"814:8:2",
														"859:8:2",
														"889:16:2",
														"922:17:2"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "650:303:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "599:354:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1007:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 175,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "964:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$113",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "975:16:2",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "964:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$37_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 178,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "999:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "964:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$37_memory_ptr_$returns$_t_uint256_$value",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "964:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "964:50:2"
											}
										]
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForToken",
									"nameLocation": "548:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "572:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "564:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:16:2"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:0:2"
									},
									"scope": 185,
									"src": "539:482:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 186,
							"src": "126:899:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "30:995:2"
				},
				"id": 2
			}
		}
	}
}