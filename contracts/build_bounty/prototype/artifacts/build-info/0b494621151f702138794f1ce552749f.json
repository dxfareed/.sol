{
	"id": "0b494621151f702138794f1ce552749f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IWETH9 {\n    function deposit() external payable;\n    function withdraw(uint256) external;\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n}\n\ncontract AutoSwapDonation is Ownable {\n    ISwapRouter public immutable swapRouter;\n    ERC20 public immutable token;\n    address private constant WETH9 = 0x4200000000000000000000000000000000000006;\n    uint24 public swapFee;\n\n    event DonationReceived(address indexed donor, uint256 ethAmount);\n    event SwapExecuted(uint256 amountIn, uint256 amountOut);\n    event Withdraw(address indexed to, address indexed token, uint256 amount);\n\n    constructor(address _token, address _swapRouter, uint24 _swapFee)Ownable(msg.sender) {\n        swapRouter = ISwapRouter(_swapRouter);\n        token = ERC20(_token);\n        swapFee = _swapFee;\n    }\n    function donate() public payable {\n        _swapETHForToken(msg.value);\n        emit DonationReceived(msg.sender, msg.value);\n    }\n\n    function _swapETHForToken(uint256 amount) internal {\n        require(amount > 0, \"Must send ETH\");\n\n        IWETH9(WETH9).deposit{value: amount}();\n        IWETH9(WETH9).approve(address(swapRouter), amount);\n\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: WETH9,\n            tokenOut: address(token),\n            fee: swapFee,\n            recipient: msg.sender,\n            deadline: block.timestamp + 300,\n            amountIn: amount,\n            amountOutMinimum: 0,\n            sqrtPriceLimitX96: 0\n        });\n\n        uint256 amountOut = swapRouter.exactInputSingle(params);\n        emit SwapExecuted(amount, amountOut);\n    }\n\n    function withdraw(address _token, uint256 _amount) public onlyOwner {\n        require(_token != address(token), \"Cannot withdraw the target token.\");\n        require(_token != WETH9, \"Cannot withdraw WETH9 directly, use withdrawWETH\");\n        ERC20(_token).transfer(msg.sender, _amount);\n        emit Withdraw(msg.sender, _token, _amount);\n    }\n\n    function withdrawWETH(uint256 _amount) public onlyOwner {\n        IWETH9(WETH9).withdraw(_amount);\n        payable(msg.sender).transfer(_amount);\n        emit Withdraw(msg.sender, WETH9, _amount);\n    }\n\n    function setSwapFee(uint24 _newFee) public onlyOwner {\n        swapFee = _newFee;\n    }\n    receive() external payable {\n        _swapETHForToken(msg.value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"AutoSwapDonation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "_swapFee",
									"type": "uint24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "donor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "DonationReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "SwapExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "_newFee",
									"type": "uint24"
								}
							],
							"name": "setSwapFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawWETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":502:2717  contract AutoSwapDonation is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":944:1142  constructor(address _token, address _swapRouter, uint24 _swapFee)Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1017:1027  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1064:1075  _swapRouter */\n  dup2\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1039:1076  swapRouter = ISwapRouter(_swapRouter) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1100:1106  _token */\n  dup3\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1086:1107  token = ERC20(_token) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1127:1135  _swapFee */\n  dup1\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1117:1124  swapFee */\n  0x00\n  0x14\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1117:1135  swapFee = _swapFee */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":944:1142  constructor(address _token, address _swapRouter, uint24 _swapFee)Ownable(msg.sender) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":502:2717  contract AutoSwapDonation is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:936   */\ntag_22:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:929   */\n  0xffffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:930   */\n  and\n    /* \"#utility.yul\":899:930   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:936   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":942:1062   */\ntag_23:\n    /* \"#utility.yul\":1014:1037   */\n  tag_40\n    /* \"#utility.yul\":1031:1036   */\n  dup2\n    /* \"#utility.yul\":1014:1037   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1007:1012   */\n  dup2\n    /* \"#utility.yul\":1004:1038   */\n  eq\n    /* \"#utility.yul\":994:1056   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1052:1053   */\n  0x00\n    /* \"#utility.yul\":1049:1050   */\n  dup1\n    /* \"#utility.yul\":1042:1054   */\n  revert\n    /* \"#utility.yul\":994:1056   */\ntag_41:\n    /* \"#utility.yul\":942:1062   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1068:1209   */\ntag_24:\n    /* \"#utility.yul\":1124:1129   */\n  0x00\n    /* \"#utility.yul\":1155:1161   */\n  dup2\n    /* \"#utility.yul\":1149:1162   */\n  mload\n    /* \"#utility.yul\":1140:1162   */\n  swap1\n  pop\n    /* \"#utility.yul\":1171:1203   */\n  tag_43\n    /* \"#utility.yul\":1197:1202   */\n  dup2\n    /* \"#utility.yul\":1171:1203   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1068:1209   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1215:1876   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  dup1\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1367:1369   */\n  0x60\n    /* \"#utility.yul\":1355:1364   */\n  dup5\n    /* \"#utility.yul\":1346:1353   */\n  dup7\n    /* \"#utility.yul\":1342:1365   */\n  sub\n    /* \"#utility.yul\":1338:1370   */\n  slt\n    /* \"#utility.yul\":1335:1454   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1373:1452   */\n  tag_46\n  tag_16\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1335:1454   */\ntag_45:\n    /* \"#utility.yul\":1493:1494   */\n  0x00\n    /* \"#utility.yul\":1518:1582   */\n  tag_47\n    /* \"#utility.yul\":1574:1581   */\n  dup7\n    /* \"#utility.yul\":1565:1571   */\n  dup3\n    /* \"#utility.yul\":1554:1563   */\n  dup8\n    /* \"#utility.yul\":1550:1572   */\n  add\n    /* \"#utility.yul\":1518:1582   */\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1508:1582   */\n  swap4\n  pop\n    /* \"#utility.yul\":1464:1592   */\n  pop\n    /* \"#utility.yul\":1631:1633   */\n  0x20\n    /* \"#utility.yul\":1657:1721   */\n  tag_48\n    /* \"#utility.yul\":1713:1720   */\n  dup7\n    /* \"#utility.yul\":1704:1710   */\n  dup3\n    /* \"#utility.yul\":1693:1702   */\n  dup8\n    /* \"#utility.yul\":1689:1711   */\n  add\n    /* \"#utility.yul\":1657:1721   */\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1647:1721   */\n  swap3\n  pop\n    /* \"#utility.yul\":1602:1731   */\n  pop\n    /* \"#utility.yul\":1770:1772   */\n  0x40\n    /* \"#utility.yul\":1796:1859   */\n  tag_49\n    /* \"#utility.yul\":1851:1858   */\n  dup7\n    /* \"#utility.yul\":1842:1848   */\n  dup3\n    /* \"#utility.yul\":1831:1840   */\n  dup8\n    /* \"#utility.yul\":1827:1849   */\n  add\n    /* \"#utility.yul\":1796:1859   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1786:1859   */\n  swap2\n  pop\n    /* \"#utility.yul\":1741:1869   */\n  pop\n    /* \"#utility.yul\":1215:1876   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1882:2000   */\ntag_25:\n    /* \"#utility.yul\":1969:1993   */\n  tag_51\n    /* \"#utility.yul\":1987:1992   */\n  dup2\n    /* \"#utility.yul\":1969:1993   */\n  tag_19\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1964:1967   */\n  dup3\n    /* \"#utility.yul\":1957:1994   */\n  mstore\n    /* \"#utility.yul\":1882:2000   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2006:2228   */\ntag_9:\n    /* \"#utility.yul\":2099:2103   */\n  0x00\n    /* \"#utility.yul\":2137:2139   */\n  0x20\n    /* \"#utility.yul\":2126:2135   */\n  dup3\n    /* \"#utility.yul\":2122:2140   */\n  add\n    /* \"#utility.yul\":2114:2140   */\n  swap1\n  pop\n    /* \"#utility.yul\":2150:2221   */\n  tag_53\n    /* \"#utility.yul\":2218:2219   */\n  0x00\n    /* \"#utility.yul\":2207:2216   */\n  dup4\n    /* \"#utility.yul\":2203:2220   */\n  add\n    /* \"#utility.yul\":2194:2200   */\n  dup5\n    /* \"#utility.yul\":2150:2221   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2006:2228   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":502:2717  contract AutoSwapDonation is Ownable {... */\ntag_13:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd42f94ef3d2e62346988d2d58c999f56371dc7993a3ad4f92e0d3796c93f6830\")\n  0x00\n  assignImmutable(\"0x63f1589d04b1acca2eee17c7e4fcd27604d0b1130abe91a01e0f895b7d990172\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":502:2717  contract AutoSwapDonation is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xed88c68e\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfc4dd333\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x54cf2aeb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe4c3a8f8\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2681:2708  _swapETHForToken(msg.value) */\n      tag_16\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2698:2707  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2681:2697  _swapETHForToken */\n      tag_17\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2681:2708  _swapETHForToken(msg.value) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":502:2717  contract AutoSwapDonation is Ownable {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":705:726  uint24 public swapFee */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":545:584  ISwapRouter public immutable swapRouter */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2552:2639  function setSwapFee(uint24 _newFee) public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1147:1278  function donate() public payable {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1992:2338  function withdraw(address _token, uint256 _amount) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":590:618  ERC20 public immutable token */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2344:2546  function withdrawWETH(uint256 _amount) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1284:1986  function _swapETHForToken(uint256 amount) internal {... */\n    tag_17:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1362:1363  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1353:1359  amount */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1353:1363  amount > 0 */\n      gt\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1345:1381  require(amount > 0, \"Must send ETH\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":657:699  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1392:1413  IWETH9(WETH9).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1421:1427  amount */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1392:1430  IWETH9(WETH9).deposit{value: amount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":657:699  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1440:1461  IWETH9(WETH9).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1470:1480  swapRouter */\n      immutable(\"0x63f1589d04b1acca2eee17c7e4fcd27604d0b1130abe91a01e0f895b7d990172\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1483:1489  amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1440:1490  IWETH9(WETH9).approve(address(swapRouter), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1501:1549  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":657:699  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1647:1652  token */\n      immutable(\"0xd42f94ef3d2e62346988d2d58c999f56371dc7993a3ad4f92e0d3796c93f6830\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1672:1679  swapFee */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1704:1714  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1756:1759  300 */\n      0x012c\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1738:1753  block.timestamp */\n      timestamp\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1738:1759  block.timestamp + 300 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1783:1789  amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1821:1822  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1855:1856  0 */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1552:1867  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1501:1867  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1878:1895  uint256 amountOut */\n      0x00\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1898:1908  swapRouter */\n      immutable(\"0x63f1589d04b1acca2eee17c7e4fcd27604d0b1130abe91a01e0f895b7d990172\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1898:1925  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1926:1932  params */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1898:1933  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1878:1933  uint256 amountOut = swapRouter.exactInputSingle(params) */\n      swap1\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1948:1979  SwapExecuted(amount, amountOut) */\n      0x4f73e5828387c436ef01a51b03853873e76d7a5551556837d452cbeb6f285cb5\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1961:1967  amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1969:1978  amountOut */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1948:1979  SwapExecuted(amount, amountOut) */\n      mload(0x40)\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1335:1986  {... */\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1284:1986  function _swapETHForToken(uint256 amount) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":705:726  uint24 public swapFee */\n    tag_20:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":545:584  ISwapRouter public immutable swapRouter */\n    tag_33:\n      immutable(\"0x63f1589d04b1acca2eee17c7e4fcd27604d0b1130abe91a01e0f895b7d990172\")\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2552:2639  function setSwapFee(uint24 _newFee) public onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2625:2632  _newFee */\n      dup1\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2615:2622  swapFee */\n      0x00\n      0x14\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2615:2632  swapFee = _newFee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2552:2639  function setSwapFee(uint24 _newFee) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1147:1278  function donate() public payable {... */\n    tag_42:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1190:1217  _swapETHForToken(msg.value) */\n      tag_97\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1207:1216  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1190:1206  _swapETHForToken */\n      tag_17\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1190:1217  _swapETHForToken(msg.value) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1249:1259  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1232:1271  DonationReceived(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c52\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1261:1270  msg.value */\n      callvalue\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1232:1271  DonationReceived(msg.sender, msg.value) */\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1147:1278  function donate() public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1992:2338  function withdraw(address _token, uint256 _amount) public onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2096:2101  token */\n      immutable(\"0xd42f94ef3d2e62346988d2d58c999f56371dc7993a3ad4f92e0d3796c93f6830\")\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2078:2102  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2078:2084  _token */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2078:2102  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2070:2140  require(_token != address(token), \"Cannot withdraw the target token.\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":657:699  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2158:2173  _token != WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2158:2164  _token */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2158:2173  _token != WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2150:2226  require(_token != WETH9, \"Cannot withdraw WETH9 directly, use withdrawWETH\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2242:2248  _token */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2236:2258  ERC20(_token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2259:2269  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2271:2278  _amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2236:2279  ERC20(_token).transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_115:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_118:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2315:2321  _token */\n      dup2\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2294:2331  Withdraw(msg.sender, _token, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2303:2313  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2294:2331  Withdraw(msg.sender, _token, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2323:2330  _amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2294:2331  Withdraw(msg.sender, _token, _amount) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":1992:2338  function withdraw(address _token, uint256 _amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":590:618  ERC20 public immutable token */\n    tag_55:\n      immutable(\"0xd42f94ef3d2e62346988d2d58c999f56371dc7993a3ad4f92e0d3796c93f6830\")\n      dup2\n      jump\t// out\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2344:2546  function withdrawWETH(uint256 _amount) public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":657:699  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2410:2432  IWETH9(WETH9).withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2433:2440  _amount */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2410:2441  IWETH9(WETH9).withdraw(_amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_123:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2459:2469  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2451:2479  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2451:2488  payable(msg.sender).transfer(_amount) */\n      0x08fc\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2480:2487  _amount */\n      dup3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2451:2488  payable(msg.sender).transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":657:699  0x4200000000000000000000000000000000000006 */\n      0x4200000000000000000000000000000000000006\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2503:2539  Withdraw(msg.sender, WETH9, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2512:2522  msg.sender */\n      caller\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2503:2539  Withdraw(msg.sender, WETH9, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2531:2538  _amount */\n      dup4\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2503:2539  Withdraw(msg.sender, WETH9, _amount) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/build_bounty/prototype/auto_swap_build.sol\":2344:2546  function withdrawWETH(uint256 _amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_28\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:98   */\n    tag_139:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:91   */\n      0xffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:92   */\n      and\n        /* \"#utility.yul\":61:92   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:98   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":104:219   */\n    tag_140:\n        /* \"#utility.yul\":189:212   */\n      tag_182\n        /* \"#utility.yul\":206:211   */\n      dup2\n        /* \"#utility.yul\":189:212   */\n      tag_139\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":184:187   */\n      dup3\n        /* \"#utility.yul\":177:213   */\n      mstore\n        /* \"#utility.yul\":104:219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":225:443   */\n    tag_22:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":343:352   */\n      dup3\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"#utility.yul\":331:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:436   */\n      tag_184\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":418:435   */\n      add\n        /* \"#utility.yul\":409:415   */\n      dup5\n        /* \"#utility.yul\":367:436   */\n      tag_140\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":225:443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":449:575   */\n    tag_141:\n        /* \"#utility.yul\":486:493   */\n      0x00\n        /* \"#utility.yul\":526:568   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":519:524   */\n      dup3\n        /* \"#utility.yul\":515:569   */\n      and\n        /* \"#utility.yul\":504:569   */\n      swap1\n      pop\n        /* \"#utility.yul\":449:575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:677   */\n    tag_142:\n        /* \"#utility.yul\":618:625   */\n      0x00\n        /* \"#utility.yul\":647:671   */\n      tag_187\n        /* \"#utility.yul\":665:670   */\n      dup3\n        /* \"#utility.yul\":647:671   */\n      tag_141\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":636:671   */\n      swap1\n      pop\n        /* \"#utility.yul\":581:677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":683:801   */\n    tag_143:\n        /* \"#utility.yul\":770:794   */\n      tag_189\n        /* \"#utility.yul\":788:793   */\n      dup2\n        /* \"#utility.yul\":770:794   */\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:795   */\n      mstore\n        /* \"#utility.yul\":683:801   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":807:1029   */\n    tag_30:\n        /* \"#utility.yul\":900:904   */\n      0x00\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup3\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":915:941   */\n      swap1\n      pop\n        /* \"#utility.yul\":951:1022   */\n      tag_191\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":1004:1021   */\n      add\n        /* \"#utility.yul\":995:1001   */\n      dup5\n        /* \"#utility.yul\":951:1022   */\n      tag_143\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":807:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1095   */\n    tag_144:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1084:1089   */\n      dup2\n        /* \"#utility.yul\":1077:1089   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1243   */\n    tag_145:\n        /* \"#utility.yul\":1151:1160   */\n      0x00\n        /* \"#utility.yul\":1184:1237   */\n      tag_194\n        /* \"#utility.yul\":1202:1236   */\n      tag_195\n        /* \"#utility.yul\":1211:1235   */\n      tag_196\n        /* \"#utility.yul\":1229:1234   */\n      dup5\n        /* \"#utility.yul\":1211:1235   */\n      tag_141\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1202:1236   */\n      tag_144\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1184:1237   */\n      tag_141\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1171:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1101:1243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1249:1375   */\n    tag_146:\n        /* \"#utility.yul\":1299:1308   */\n      0x00\n        /* \"#utility.yul\":1332:1369   */\n      tag_198\n        /* \"#utility.yul\":1363:1368   */\n      dup3\n        /* \"#utility.yul\":1332:1369   */\n      tag_145\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1319:1369   */\n      swap1\n      pop\n        /* \"#utility.yul\":1249:1375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1527   */\n    tag_147:\n        /* \"#utility.yul\":1451:1460   */\n      0x00\n        /* \"#utility.yul\":1484:1521   */\n      tag_200\n        /* \"#utility.yul\":1515:1520   */\n      dup3\n        /* \"#utility.yul\":1484:1521   */\n      tag_146\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1471:1521   */\n      swap1\n      pop\n        /* \"#utility.yul\":1381:1527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1533:1704   */\n    tag_148:\n        /* \"#utility.yul\":1640:1697   */\n      tag_202\n        /* \"#utility.yul\":1691:1696   */\n      dup2\n        /* \"#utility.yul\":1640:1697   */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1635:1638   */\n      dup3\n        /* \"#utility.yul\":1628:1698   */\n      mstore\n        /* \"#utility.yul\":1533:1704   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1710:1972   */\n    tag_35:\n        /* \"#utility.yul\":1823:1827   */\n      0x00\n        /* \"#utility.yul\":1861:1863   */\n      0x20\n        /* \"#utility.yul\":1850:1859   */\n      dup3\n        /* \"#utility.yul\":1846:1864   */\n      add\n        /* \"#utility.yul\":1838:1864   */\n      swap1\n      pop\n        /* \"#utility.yul\":1874:1965   */\n      tag_204\n        /* \"#utility.yul\":1962:1963   */\n      0x00\n        /* \"#utility.yul\":1951:1960   */\n      dup4\n        /* \"#utility.yul\":1947:1964   */\n      add\n        /* \"#utility.yul\":1938:1944   */\n      dup5\n        /* \"#utility.yul\":1874:1965   */\n      tag_148\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1710:1972   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2176   */\n    tag_150:\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2165:2166   */\n      dup1\n        /* \"#utility.yul\":2158:2170   */\n      revert\n        /* \"#utility.yul\":2305:2425   */\n    tag_152:\n        /* \"#utility.yul\":2377:2400   */\n      tag_209\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2377:2400   */\n      tag_139\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2370:2375   */\n      dup2\n        /* \"#utility.yul\":2367:2401   */\n      eq\n        /* \"#utility.yul\":2357:2419   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2415:2416   */\n      0x00\n        /* \"#utility.yul\":2412:2413   */\n      dup1\n        /* \"#utility.yul\":2405:2417   */\n      revert\n        /* \"#utility.yul\":2357:2419   */\n    tag_210:\n        /* \"#utility.yul\":2305:2425   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2431:2568   */\n    tag_153:\n        /* \"#utility.yul\":2476:2481   */\n      0x00\n        /* \"#utility.yul\":2514:2520   */\n      dup2\n        /* \"#utility.yul\":2501:2521   */\n      calldataload\n        /* \"#utility.yul\":2492:2521   */\n      swap1\n      pop\n        /* \"#utility.yul\":2530:2562   */\n      tag_212\n        /* \"#utility.yul\":2556:2561   */\n      dup2\n        /* \"#utility.yul\":2530:2562   */\n      tag_152\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2431:2568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2574:2901   */\n    tag_39:\n        /* \"#utility.yul\":2632:2638   */\n      0x00\n        /* \"#utility.yul\":2681:2683   */\n      0x20\n        /* \"#utility.yul\":2669:2678   */\n      dup3\n        /* \"#utility.yul\":2660:2667   */\n      dup5\n        /* \"#utility.yul\":2656:2679   */\n      sub\n        /* \"#utility.yul\":2652:2684   */\n      slt\n        /* \"#utility.yul\":2649:2768   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2687:2766   */\n      tag_215\n      tag_150\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2649:2768   */\n    tag_214:\n        /* \"#utility.yul\":2807:2808   */\n      0x00\n        /* \"#utility.yul\":2832:2884   */\n      tag_216\n        /* \"#utility.yul\":2876:2883   */\n      dup5\n        /* \"#utility.yul\":2867:2873   */\n      dup3\n        /* \"#utility.yul\":2856:2865   */\n      dup6\n        /* \"#utility.yul\":2852:2874   */\n      add\n        /* \"#utility.yul\":2832:2884   */\n      tag_153\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2822:2884   */\n      swap2\n      pop\n        /* \"#utility.yul\":2778:2894   */\n      pop\n        /* \"#utility.yul\":2574:2901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2907:3029   */\n    tag_154:\n        /* \"#utility.yul\":2980:3004   */\n      tag_218\n        /* \"#utility.yul\":2998:3003   */\n      dup2\n        /* \"#utility.yul\":2980:3004   */\n      tag_142\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2973:2978   */\n      dup2\n        /* \"#utility.yul\":2970:3005   */\n      eq\n        /* \"#utility.yul\":2960:3023   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":3019:3020   */\n      0x00\n        /* \"#utility.yul\":3016:3017   */\n      dup1\n        /* \"#utility.yul\":3009:3021   */\n      revert\n        /* \"#utility.yul\":2960:3023   */\n    tag_219:\n        /* \"#utility.yul\":2907:3029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3035:3174   */\n    tag_155:\n        /* \"#utility.yul\":3081:3086   */\n      0x00\n        /* \"#utility.yul\":3119:3125   */\n      dup2\n        /* \"#utility.yul\":3106:3126   */\n      calldataload\n        /* \"#utility.yul\":3097:3126   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3168   */\n      tag_221\n        /* \"#utility.yul\":3162:3167   */\n      dup2\n        /* \"#utility.yul\":3135:3168   */\n      tag_154\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3035:3174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3180:3509   */\n    tag_46:\n        /* \"#utility.yul\":3239:3245   */\n      0x00\n        /* \"#utility.yul\":3288:3290   */\n      0x20\n        /* \"#utility.yul\":3276:3285   */\n      dup3\n        /* \"#utility.yul\":3267:3274   */\n      dup5\n        /* \"#utility.yul\":3263:3286   */\n      sub\n        /* \"#utility.yul\":3259:3291   */\n      slt\n        /* \"#utility.yul\":3256:3375   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3294:3373   */\n      tag_224\n      tag_150\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3256:3375   */\n    tag_223:\n        /* \"#utility.yul\":3414:3415   */\n      0x00\n        /* \"#utility.yul\":3439:3492   */\n      tag_225\n        /* \"#utility.yul\":3484:3491   */\n      dup5\n        /* \"#utility.yul\":3475:3481   */\n      dup3\n        /* \"#utility.yul\":3464:3473   */\n      dup6\n        /* \"#utility.yul\":3460:3482   */\n      add\n        /* \"#utility.yul\":3439:3492   */\n      tag_155\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3429:3492   */\n      swap2\n      pop\n        /* \"#utility.yul\":3385:3502   */\n      pop\n        /* \"#utility.yul\":3180:3509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3515:3592   */\n    tag_156:\n        /* \"#utility.yul\":3552:3559   */\n      0x00\n        /* \"#utility.yul\":3581:3586   */\n      dup2\n        /* \"#utility.yul\":3570:3586   */\n      swap1\n      pop\n        /* \"#utility.yul\":3515:3592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3598:3720   */\n    tag_157:\n        /* \"#utility.yul\":3671:3695   */\n      tag_228\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3671:3695   */\n      tag_156\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3664:3669   */\n      dup2\n        /* \"#utility.yul\":3661:3696   */\n      eq\n        /* \"#utility.yul\":3651:3714   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":3710:3711   */\n      0x00\n        /* \"#utility.yul\":3707:3708   */\n      dup1\n        /* \"#utility.yul\":3700:3712   */\n      revert\n        /* \"#utility.yul\":3651:3714   */\n    tag_229:\n        /* \"#utility.yul\":3598:3720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3726:3865   */\n    tag_158:\n        /* \"#utility.yul\":3772:3777   */\n      0x00\n        /* \"#utility.yul\":3810:3816   */\n      dup2\n        /* \"#utility.yul\":3797:3817   */\n      calldataload\n        /* \"#utility.yul\":3788:3817   */\n      swap1\n      pop\n        /* \"#utility.yul\":3826:3859   */\n      tag_231\n        /* \"#utility.yul\":3853:3858   */\n      dup2\n        /* \"#utility.yul\":3826:3859   */\n      tag_157\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3726:3865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3871:4345   */\n    tag_51:\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3947:3953   */\n      dup1\n        /* \"#utility.yul\":3996:3998   */\n      0x40\n        /* \"#utility.yul\":3984:3993   */\n      dup4\n        /* \"#utility.yul\":3975:3982   */\n      dup6\n        /* \"#utility.yul\":3971:3994   */\n      sub\n        /* \"#utility.yul\":3967:3999   */\n      slt\n        /* \"#utility.yul\":3964:4083   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4002:4081   */\n      tag_234\n      tag_150\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3964:4083   */\n    tag_233:\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4147:4200   */\n      tag_235\n        /* \"#utility.yul\":4192:4199   */\n      dup6\n        /* \"#utility.yul\":4183:4189   */\n      dup3\n        /* \"#utility.yul\":4172:4181   */\n      dup7\n        /* \"#utility.yul\":4168:4190   */\n      add\n        /* \"#utility.yul\":4147:4200   */\n      tag_155\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4137:4200   */\n      swap3\n      pop\n        /* \"#utility.yul\":4093:4210   */\n      pop\n        /* \"#utility.yul\":4249:4251   */\n      0x20\n        /* \"#utility.yul\":4275:4328   */\n      tag_236\n        /* \"#utility.yul\":4320:4327   */\n      dup6\n        /* \"#utility.yul\":4311:4317   */\n      dup3\n        /* \"#utility.yul\":4300:4309   */\n      dup7\n        /* \"#utility.yul\":4296:4318   */\n      add\n        /* \"#utility.yul\":4275:4328   */\n      tag_158\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4265:4328   */\n      swap2\n      pop\n        /* \"#utility.yul\":4220:4338   */\n      pop\n        /* \"#utility.yul\":3871:4345   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4351:4490   */\n    tag_159:\n        /* \"#utility.yul\":4414:4423   */\n      0x00\n        /* \"#utility.yul\":4447:4484   */\n      tag_238\n        /* \"#utility.yul\":4478:4483   */\n      dup3\n        /* \"#utility.yul\":4447:4484   */\n      tag_146\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4434:4484   */\n      swap1\n      pop\n        /* \"#utility.yul\":4351:4490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4496:4653   */\n    tag_160:\n        /* \"#utility.yul\":4596:4646   */\n      tag_240\n        /* \"#utility.yul\":4640:4645   */\n      dup2\n        /* \"#utility.yul\":4596:4646   */\n      tag_159\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4591:4594   */\n      dup3\n        /* \"#utility.yul\":4584:4647   */\n      mstore\n        /* \"#utility.yul\":4496:4653   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4659:4907   */\n    tag_57:\n        /* \"#utility.yul\":4765:4769   */\n      0x00\n        /* \"#utility.yul\":4803:4805   */\n      0x20\n        /* \"#utility.yul\":4792:4801   */\n      dup3\n        /* \"#utility.yul\":4788:4806   */\n      add\n        /* \"#utility.yul\":4780:4806   */\n      swap1\n      pop\n        /* \"#utility.yul\":4816:4900   */\n      tag_242\n        /* \"#utility.yul\":4897:4898   */\n      0x00\n        /* \"#utility.yul\":4886:4895   */\n      dup4\n        /* \"#utility.yul\":4882:4899   */\n      add\n        /* \"#utility.yul\":4873:4879   */\n      dup5\n        /* \"#utility.yul\":4816:4900   */\n      tag_160\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4659:4907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4913:5242   */\n    tag_61:\n        /* \"#utility.yul\":4972:4978   */\n      0x00\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5009:5018   */\n      dup3\n        /* \"#utility.yul\":5000:5007   */\n      dup5\n        /* \"#utility.yul\":4996:5019   */\n      sub\n        /* \"#utility.yul\":4992:5024   */\n      slt\n        /* \"#utility.yul\":4989:5108   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":5027:5106   */\n      tag_245\n      tag_150\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4989:5108   */\n    tag_244:\n        /* \"#utility.yul\":5147:5148   */\n      0x00\n        /* \"#utility.yul\":5172:5225   */\n      tag_246\n        /* \"#utility.yul\":5217:5224   */\n      dup5\n        /* \"#utility.yul\":5208:5214   */\n      dup3\n        /* \"#utility.yul\":5197:5206   */\n      dup6\n        /* \"#utility.yul\":5193:5215   */\n      add\n        /* \"#utility.yul\":5172:5225   */\n      tag_158\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5162:5225   */\n      swap2\n      pop\n        /* \"#utility.yul\":5118:5235   */\n      pop\n        /* \"#utility.yul\":4913:5242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5248:5417   */\n    tag_161:\n        /* \"#utility.yul\":5332:5343   */\n      0x00\n        /* \"#utility.yul\":5366:5372   */\n      dup3\n        /* \"#utility.yul\":5361:5364   */\n      dup3\n        /* \"#utility.yul\":5354:5373   */\n      mstore\n        /* \"#utility.yul\":5406:5410   */\n      0x20\n        /* \"#utility.yul\":5401:5404   */\n      dup3\n        /* \"#utility.yul\":5397:5411   */\n      add\n        /* \"#utility.yul\":5382:5411   */\n      swap1\n      pop\n        /* \"#utility.yul\":5248:5417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5423:5586   */\n    tag_162:\n        /* \"#utility.yul\":5563:5578   */\n      0x4d7573742073656e642045544800000000000000000000000000000000000000\n        /* \"#utility.yul\":5559:5560   */\n      0x00\n        /* \"#utility.yul\":5551:5557   */\n      dup3\n        /* \"#utility.yul\":5547:5561   */\n      add\n        /* \"#utility.yul\":5540:5579   */\n      mstore\n        /* \"#utility.yul\":5423:5586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5592:5958   */\n    tag_163:\n        /* \"#utility.yul\":5734:5737   */\n      0x00\n        /* \"#utility.yul\":5755:5822   */\n      tag_250\n        /* \"#utility.yul\":5819:5821   */\n      0x0d\n        /* \"#utility.yul\":5814:5817   */\n      dup4\n        /* \"#utility.yul\":5755:5822   */\n      tag_161\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5748:5822   */\n      swap2\n      pop\n        /* \"#utility.yul\":5831:5924   */\n      tag_251\n        /* \"#utility.yul\":5920:5923   */\n      dup3\n        /* \"#utility.yul\":5831:5924   */\n      tag_162\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5949:5951   */\n      0x20\n        /* \"#utility.yul\":5944:5947   */\n      dup3\n        /* \"#utility.yul\":5940:5952   */\n      add\n        /* \"#utility.yul\":5933:5952   */\n      swap1\n      pop\n        /* \"#utility.yul\":5592:5958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5964:6383   */\n    tag_66:\n        /* \"#utility.yul\":6130:6134   */\n      0x00\n        /* \"#utility.yul\":6168:6170   */\n      0x20\n        /* \"#utility.yul\":6157:6166   */\n      dup3\n        /* \"#utility.yul\":6153:6171   */\n      add\n        /* \"#utility.yul\":6145:6171   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6226   */\n      dup2\n        /* \"#utility.yul\":6211:6215   */\n      dup2\n        /* \"#utility.yul\":6207:6227   */\n      sub\n        /* \"#utility.yul\":6203:6204   */\n      0x00\n        /* \"#utility.yul\":6192:6201   */\n      dup4\n        /* \"#utility.yul\":6188:6205   */\n      add\n        /* \"#utility.yul\":6181:6228   */\n      mstore\n        /* \"#utility.yul\":6245:6376   */\n      tag_253\n        /* \"#utility.yul\":6371:6375   */\n      dup2\n        /* \"#utility.yul\":6245:6376   */\n      tag_163\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6237:6376   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:6383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6389:6507   */\n    tag_164:\n        /* \"#utility.yul\":6476:6500   */\n      tag_255\n        /* \"#utility.yul\":6494:6499   */\n      dup2\n        /* \"#utility.yul\":6476:6500   */\n      tag_156\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6471:6474   */\n      dup3\n        /* \"#utility.yul\":6464:6501   */\n      mstore\n        /* \"#utility.yul\":6389:6507   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6845   */\n    tag_71:\n        /* \"#utility.yul\":6634:6638   */\n      0x00\n        /* \"#utility.yul\":6672:6674   */\n      0x40\n        /* \"#utility.yul\":6661:6670   */\n      dup3\n        /* \"#utility.yul\":6657:6675   */\n      add\n        /* \"#utility.yul\":6649:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6685:6756   */\n      tag_257\n        /* \"#utility.yul\":6753:6754   */\n      0x00\n        /* \"#utility.yul\":6742:6751   */\n      dup4\n        /* \"#utility.yul\":6738:6755   */\n      add\n        /* \"#utility.yul\":6729:6735   */\n      dup6\n        /* \"#utility.yul\":6685:6756   */\n      tag_143\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6766:6838   */\n      tag_258\n        /* \"#utility.yul\":6834:6836   */\n      0x20\n        /* \"#utility.yul\":6823:6832   */\n      dup4\n        /* \"#utility.yul\":6819:6837   */\n      add\n        /* \"#utility.yul\":6810:6816   */\n      dup5\n        /* \"#utility.yul\":6766:6838   */\n      tag_164\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6513:6845   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6851:6941   */\n    tag_165:\n        /* \"#utility.yul\":6885:6892   */\n      0x00\n        /* \"#utility.yul\":6928:6933   */\n      dup2\n        /* \"#utility.yul\":6921:6934   */\n      iszero\n        /* \"#utility.yul\":6914:6935   */\n      iszero\n        /* \"#utility.yul\":6903:6935   */\n      swap1\n      pop\n        /* \"#utility.yul\":6851:6941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6947:7063   */\n    tag_166:\n        /* \"#utility.yul\":7017:7038   */\n      tag_261\n        /* \"#utility.yul\":7032:7037   */\n      dup2\n        /* \"#utility.yul\":7017:7038   */\n      tag_165\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7010:7015   */\n      dup2\n        /* \"#utility.yul\":7007:7039   */\n      eq\n        /* \"#utility.yul\":6997:7057   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":7053:7054   */\n      0x00\n        /* \"#utility.yul\":7050:7051   */\n      dup1\n        /* \"#utility.yul\":7043:7055   */\n      revert\n        /* \"#utility.yul\":6997:7057   */\n    tag_262:\n        /* \"#utility.yul\":6947:7063   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7206   */\n    tag_167:\n        /* \"#utility.yul\":7123:7128   */\n      0x00\n        /* \"#utility.yul\":7154:7160   */\n      dup2\n        /* \"#utility.yul\":7148:7161   */\n      mload\n        /* \"#utility.yul\":7139:7161   */\n      swap1\n      pop\n        /* \"#utility.yul\":7170:7200   */\n      tag_264\n        /* \"#utility.yul\":7194:7199   */\n      dup2\n        /* \"#utility.yul\":7170:7200   */\n      tag_166\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7069:7206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7212:7557   */\n    tag_75:\n        /* \"#utility.yul\":7279:7285   */\n      0x00\n        /* \"#utility.yul\":7328:7330   */\n      0x20\n        /* \"#utility.yul\":7316:7325   */\n      dup3\n        /* \"#utility.yul\":7307:7314   */\n      dup5\n        /* \"#utility.yul\":7303:7326   */\n      sub\n        /* \"#utility.yul\":7299:7331   */\n      slt\n        /* \"#utility.yul\":7296:7415   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":7334:7413   */\n      tag_267\n      tag_150\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7296:7415   */\n    tag_266:\n        /* \"#utility.yul\":7454:7455   */\n      0x00\n        /* \"#utility.yul\":7479:7540   */\n      tag_268\n        /* \"#utility.yul\":7532:7539   */\n      dup5\n        /* \"#utility.yul\":7523:7529   */\n      dup3\n        /* \"#utility.yul\":7512:7521   */\n      dup6\n        /* \"#utility.yul\":7508:7530   */\n      add\n        /* \"#utility.yul\":7479:7540   */\n      tag_167\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7469:7540   */\n      swap2\n      pop\n        /* \"#utility.yul\":7425:7550   */\n      pop\n        /* \"#utility.yul\":7212:7557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7563:7743   */\n    tag_168:\n        /* \"#utility.yul\":7611:7688   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7608:7609   */\n      0x00\n        /* \"#utility.yul\":7601:7689   */\n      mstore\n        /* \"#utility.yul\":7708:7712   */\n      0x11\n        /* \"#utility.yul\":7705:7706   */\n      0x04\n        /* \"#utility.yul\":7698:7713   */\n      mstore\n        /* \"#utility.yul\":7732:7736   */\n      0x24\n        /* \"#utility.yul\":7729:7730   */\n      0x00\n        /* \"#utility.yul\":7722:7737   */\n      revert\n        /* \"#utility.yul\":7749:7940   */\n    tag_77:\n        /* \"#utility.yul\":7789:7792   */\n      0x00\n        /* \"#utility.yul\":7808:7828   */\n      tag_271\n        /* \"#utility.yul\":7826:7827   */\n      dup3\n        /* \"#utility.yul\":7808:7828   */\n      tag_156\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7803:7828   */\n      swap2\n      pop\n        /* \"#utility.yul\":7842:7862   */\n      tag_272\n        /* \"#utility.yul\":7860:7861   */\n      dup4\n        /* \"#utility.yul\":7842:7862   */\n      tag_156\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7837:7862   */\n      swap3\n      pop\n        /* \"#utility.yul\":7885:7886   */\n      dup3\n        /* \"#utility.yul\":7882:7883   */\n      dup3\n        /* \"#utility.yul\":7878:7887   */\n      add\n        /* \"#utility.yul\":7871:7887   */\n      swap1\n      pop\n        /* \"#utility.yul\":7906:7909   */\n      dup1\n        /* \"#utility.yul\":7903:7904   */\n      dup3\n        /* \"#utility.yul\":7900:7910   */\n      gt\n        /* \"#utility.yul\":7897:7933   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":7913:7931   */\n      tag_274\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7897:7933   */\n    tag_273:\n        /* \"#utility.yul\":7749:7940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7946:8054   */\n    tag_169:\n        /* \"#utility.yul\":8023:8047   */\n      tag_276\n        /* \"#utility.yul\":8041:8046   */\n      dup2\n        /* \"#utility.yul\":8023:8047   */\n      tag_142\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8018:8021   */\n      dup3\n        /* \"#utility.yul\":8011:8048   */\n      mstore\n        /* \"#utility.yul\":7946:8054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8060:8165   */\n    tag_170:\n        /* \"#utility.yul\":8135:8158   */\n      tag_278\n        /* \"#utility.yul\":8152:8157   */\n      dup2\n        /* \"#utility.yul\":8135:8158   */\n      tag_139\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8130:8133   */\n      dup3\n        /* \"#utility.yul\":8123:8159   */\n      mstore\n        /* \"#utility.yul\":8060:8165   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8171:8279   */\n    tag_171:\n        /* \"#utility.yul\":8248:8272   */\n      tag_280\n        /* \"#utility.yul\":8266:8271   */\n      dup2\n        /* \"#utility.yul\":8248:8272   */\n      tag_156\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8243:8246   */\n      dup3\n        /* \"#utility.yul\":8236:8273   */\n      mstore\n        /* \"#utility.yul\":8171:8279   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8285:8393   */\n    tag_172:\n        /* \"#utility.yul\":8362:8386   */\n      tag_282\n        /* \"#utility.yul\":8380:8385   */\n      dup2\n        /* \"#utility.yul\":8362:8386   */\n      tag_141\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8357:8360   */\n      dup3\n        /* \"#utility.yul\":8350:8387   */\n      mstore\n        /* \"#utility.yul\":8285:8393   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8493:10116   */\n    tag_173:\n        /* \"#utility.yul\":8668:8674   */\n      0x0100\n        /* \"#utility.yul\":8663:8666   */\n      dup3\n        /* \"#utility.yul\":8659:8675   */\n      add\n        /* \"#utility.yul\":8760:8764   */\n      0x00\n        /* \"#utility.yul\":8753:8758   */\n      dup3\n        /* \"#utility.yul\":8749:8765   */\n      add\n        /* \"#utility.yul\":8743:8766   */\n      mload\n        /* \"#utility.yul\":8779:8842   */\n      tag_284\n        /* \"#utility.yul\":8836:8840   */\n      0x00\n        /* \"#utility.yul\":8831:8834   */\n      dup6\n        /* \"#utility.yul\":8827:8841   */\n      add\n        /* \"#utility.yul\":8813:8825   */\n      dup3\n        /* \"#utility.yul\":8779:8842   */\n      tag_169\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8685:8852   */\n      pop\n        /* \"#utility.yul\":8938:8942   */\n      0x20\n        /* \"#utility.yul\":8931:8936   */\n      dup3\n        /* \"#utility.yul\":8927:8943   */\n      add\n        /* \"#utility.yul\":8921:8944   */\n      mload\n        /* \"#utility.yul\":8957:9020   */\n      tag_285\n        /* \"#utility.yul\":9014:9018   */\n      0x20\n        /* \"#utility.yul\":9009:9012   */\n      dup6\n        /* \"#utility.yul\":9005:9019   */\n      add\n        /* \"#utility.yul\":8991:9003   */\n      dup3\n        /* \"#utility.yul\":8957:9020   */\n      tag_169\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8862:9030   */\n      pop\n        /* \"#utility.yul\":9111:9115   */\n      0x40\n        /* \"#utility.yul\":9104:9109   */\n      dup3\n        /* \"#utility.yul\":9100:9116   */\n      add\n        /* \"#utility.yul\":9094:9117   */\n      mload\n        /* \"#utility.yul\":9130:9191   */\n      tag_286\n        /* \"#utility.yul\":9185:9189   */\n      0x40\n        /* \"#utility.yul\":9180:9183   */\n      dup6\n        /* \"#utility.yul\":9176:9190   */\n      add\n        /* \"#utility.yul\":9162:9174   */\n      dup3\n        /* \"#utility.yul\":9130:9191   */\n      tag_170\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9040:9201   */\n      pop\n        /* \"#utility.yul\":9288:9292   */\n      0x60\n        /* \"#utility.yul\":9281:9286   */\n      dup3\n        /* \"#utility.yul\":9277:9293   */\n      add\n        /* \"#utility.yul\":9271:9294   */\n      mload\n        /* \"#utility.yul\":9307:9370   */\n      tag_287\n        /* \"#utility.yul\":9364:9368   */\n      0x60\n        /* \"#utility.yul\":9359:9362   */\n      dup6\n        /* \"#utility.yul\":9355:9369   */\n      add\n        /* \"#utility.yul\":9341:9353   */\n      dup3\n        /* \"#utility.yul\":9307:9370   */\n      tag_169\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9211:9380   */\n      pop\n        /* \"#utility.yul\":9466:9470   */\n      0x80\n        /* \"#utility.yul\":9459:9464   */\n      dup3\n        /* \"#utility.yul\":9455:9471   */\n      add\n        /* \"#utility.yul\":9449:9472   */\n      mload\n        /* \"#utility.yul\":9485:9548   */\n      tag_288\n        /* \"#utility.yul\":9542:9546   */\n      0x80\n        /* \"#utility.yul\":9537:9540   */\n      dup6\n        /* \"#utility.yul\":9533:9547   */\n      add\n        /* \"#utility.yul\":9519:9531   */\n      dup3\n        /* \"#utility.yul\":9485:9548   */\n      tag_171\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9390:9558   */\n      pop\n        /* \"#utility.yul\":9644:9648   */\n      0xa0\n        /* \"#utility.yul\":9637:9642   */\n      dup3\n        /* \"#utility.yul\":9633:9649   */\n      add\n        /* \"#utility.yul\":9627:9650   */\n      mload\n        /* \"#utility.yul\":9663:9726   */\n      tag_289\n        /* \"#utility.yul\":9720:9724   */\n      0xa0\n        /* \"#utility.yul\":9715:9718   */\n      dup6\n        /* \"#utility.yul\":9711:9725   */\n      add\n        /* \"#utility.yul\":9697:9709   */\n      dup3\n        /* \"#utility.yul\":9663:9726   */\n      tag_171\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9568:9736   */\n      pop\n        /* \"#utility.yul\":9830:9834   */\n      0xc0\n        /* \"#utility.yul\":9823:9828   */\n      dup3\n        /* \"#utility.yul\":9819:9835   */\n      add\n        /* \"#utility.yul\":9813:9836   */\n      mload\n        /* \"#utility.yul\":9849:9912   */\n      tag_290\n        /* \"#utility.yul\":9906:9910   */\n      0xc0\n        /* \"#utility.yul\":9901:9904   */\n      dup6\n        /* \"#utility.yul\":9897:9911   */\n      add\n        /* \"#utility.yul\":9883:9895   */\n      dup3\n        /* \"#utility.yul\":9849:9912   */\n      tag_171\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9746:9922   */\n      pop\n        /* \"#utility.yul\":10017:10021   */\n      0xe0\n        /* \"#utility.yul\":10010:10015   */\n      dup3\n        /* \"#utility.yul\":10006:10022   */\n      add\n        /* \"#utility.yul\":10000:10023   */\n      mload\n        /* \"#utility.yul\":10036:10099   */\n      tag_291\n        /* \"#utility.yul\":10093:10097   */\n      0xe0\n        /* \"#utility.yul\":10088:10091   */\n      dup6\n        /* \"#utility.yul\":10084:10098   */\n      add\n        /* \"#utility.yul\":10070:10082   */\n      dup3\n        /* \"#utility.yul\":10036:10099   */\n      tag_172\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9932:10109   */\n      pop\n        /* \"#utility.yul\":8637:10116   */\n      pop\n        /* \"#utility.yul\":8493:10116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10122:10501   */\n    tag_79:\n        /* \"#utility.yul\":10293:10297   */\n      0x00\n        /* \"#utility.yul\":10331:10334   */\n      0x0100\n        /* \"#utility.yul\":10320:10329   */\n      dup3\n        /* \"#utility.yul\":10316:10335   */\n      add\n        /* \"#utility.yul\":10308:10335   */\n      swap1\n      pop\n        /* \"#utility.yul\":10345:10494   */\n      tag_293\n        /* \"#utility.yul\":10491:10492   */\n      0x00\n        /* \"#utility.yul\":10480:10489   */\n      dup4\n        /* \"#utility.yul\":10476:10493   */\n      add\n        /* \"#utility.yul\":10467:10473   */\n      dup5\n        /* \"#utility.yul\":10345:10494   */\n      tag_173\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":10122:10501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10507:10650   */\n    tag_174:\n        /* \"#utility.yul\":10564:10569   */\n      0x00\n        /* \"#utility.yul\":10595:10601   */\n      dup2\n        /* \"#utility.yul\":10589:10602   */\n      mload\n        /* \"#utility.yul\":10580:10602   */\n      swap1\n      pop\n        /* \"#utility.yul\":10611:10644   */\n      tag_295\n        /* \"#utility.yul\":10638:10643   */\n      dup2\n        /* \"#utility.yul\":10611:10644   */\n      tag_157\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10507:10650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10656:11007   */\n    tag_83:\n        /* \"#utility.yul\":10726:10732   */\n      0x00\n        /* \"#utility.yul\":10775:10777   */\n      0x20\n        /* \"#utility.yul\":10763:10772   */\n      dup3\n        /* \"#utility.yul\":10754:10761   */\n      dup5\n        /* \"#utility.yul\":10750:10773   */\n      sub\n        /* \"#utility.yul\":10746:10778   */\n      slt\n        /* \"#utility.yul\":10743:10862   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":10781:10860   */\n      tag_298\n      tag_150\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10743:10862   */\n    tag_297:\n        /* \"#utility.yul\":10901:10902   */\n      0x00\n        /* \"#utility.yul\":10926:10990   */\n      tag_299\n        /* \"#utility.yul\":10982:10989   */\n      dup5\n        /* \"#utility.yul\":10973:10979   */\n      dup3\n        /* \"#utility.yul\":10962:10971   */\n      dup6\n        /* \"#utility.yul\":10958:10980   */\n      add\n        /* \"#utility.yul\":10926:10990   */\n      tag_174\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10916:10990   */\n      swap2\n      pop\n        /* \"#utility.yul\":10872:11000   */\n      pop\n        /* \"#utility.yul\":10656:11007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11013:11345   */\n    tag_85:\n        /* \"#utility.yul\":11134:11138   */\n      0x00\n        /* \"#utility.yul\":11172:11174   */\n      0x40\n        /* \"#utility.yul\":11161:11170   */\n      dup3\n        /* \"#utility.yul\":11157:11175   */\n      add\n        /* \"#utility.yul\":11149:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":11185:11256   */\n      tag_301\n        /* \"#utility.yul\":11253:11254   */\n      0x00\n        /* \"#utility.yul\":11242:11251   */\n      dup4\n        /* \"#utility.yul\":11238:11255   */\n      add\n        /* \"#utility.yul\":11229:11235   */\n      dup6\n        /* \"#utility.yul\":11185:11256   */\n      tag_164\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11266:11338   */\n      tag_302\n        /* \"#utility.yul\":11334:11336   */\n      0x20\n        /* \"#utility.yul\":11323:11332   */\n      dup4\n        /* \"#utility.yul\":11319:11337   */\n      add\n        /* \"#utility.yul\":11310:11316   */\n      dup5\n        /* \"#utility.yul\":11266:11338   */\n      tag_164\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11013:11345   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11351:11573   */\n    tag_99:\n        /* \"#utility.yul\":11444:11448   */\n      0x00\n        /* \"#utility.yul\":11482:11484   */\n      0x20\n        /* \"#utility.yul\":11471:11480   */\n      dup3\n        /* \"#utility.yul\":11467:11485   */\n      add\n        /* \"#utility.yul\":11459:11485   */\n      swap1\n      pop\n        /* \"#utility.yul\":11495:11566   */\n      tag_304\n        /* \"#utility.yul\":11563:11564   */\n      0x00\n        /* \"#utility.yul\":11552:11561   */\n      dup4\n        /* \"#utility.yul\":11548:11565   */\n      add\n        /* \"#utility.yul\":11539:11545   */\n      dup5\n        /* \"#utility.yul\":11495:11566   */\n      tag_164\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11351:11573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11579:11799   */\n    tag_175:\n        /* \"#utility.yul\":11719:11753   */\n      0x43616e6e6f74207769746864726177207468652074617267657420746f6b656e\n        /* \"#utility.yul\":11715:11716   */\n      0x00\n        /* \"#utility.yul\":11707:11713   */\n      dup3\n        /* \"#utility.yul\":11703:11717   */\n      add\n        /* \"#utility.yul\":11696:11754   */\n      mstore\n        /* \"#utility.yul\":11788:11791   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11783:11785   */\n      0x20\n        /* \"#utility.yul\":11775:11781   */\n      dup3\n        /* \"#utility.yul\":11771:11786   */\n      add\n        /* \"#utility.yul\":11764:11792   */\n      mstore\n        /* \"#utility.yul\":11579:11799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11805:12171   */\n    tag_176:\n        /* \"#utility.yul\":11947:11950   */\n      0x00\n        /* \"#utility.yul\":11968:12035   */\n      tag_307\n        /* \"#utility.yul\":12032:12034   */\n      0x21\n        /* \"#utility.yul\":12027:12030   */\n      dup4\n        /* \"#utility.yul\":11968:12035   */\n      tag_161\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11961:12035   */\n      swap2\n      pop\n        /* \"#utility.yul\":12044:12137   */\n      tag_308\n        /* \"#utility.yul\":12133:12136   */\n      dup3\n        /* \"#utility.yul\":12044:12137   */\n      tag_175\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":12162:12164   */\n      0x40\n        /* \"#utility.yul\":12157:12160   */\n      dup3\n        /* \"#utility.yul\":12153:12165   */\n      add\n        /* \"#utility.yul\":12146:12165   */\n      swap1\n      pop\n        /* \"#utility.yul\":11805:12171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12177:12596   */\n    tag_111:\n        /* \"#utility.yul\":12343:12347   */\n      0x00\n        /* \"#utility.yul\":12381:12383   */\n      0x20\n        /* \"#utility.yul\":12370:12379   */\n      dup3\n        /* \"#utility.yul\":12366:12384   */\n      add\n        /* \"#utility.yul\":12358:12384   */\n      swap1\n      pop\n        /* \"#utility.yul\":12430:12439   */\n      dup2\n        /* \"#utility.yul\":12424:12428   */\n      dup2\n        /* \"#utility.yul\":12420:12440   */\n      sub\n        /* \"#utility.yul\":12416:12417   */\n      0x00\n        /* \"#utility.yul\":12405:12414   */\n      dup4\n        /* \"#utility.yul\":12401:12418   */\n      add\n        /* \"#utility.yul\":12394:12441   */\n      mstore\n        /* \"#utility.yul\":12458:12589   */\n      tag_310\n        /* \"#utility.yul\":12584:12588   */\n      dup2\n        /* \"#utility.yul\":12458:12589   */\n      tag_176\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":12450:12589   */\n      swap1\n      pop\n        /* \"#utility.yul\":12177:12596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12602:12837   */\n    tag_177:\n        /* \"#utility.yul\":12742:12776   */\n      0x43616e6e6f74207769746864726177205745544839206469726563746c792c20\n        /* \"#utility.yul\":12738:12739   */\n      0x00\n        /* \"#utility.yul\":12730:12736   */\n      dup3\n        /* \"#utility.yul\":12726:12740   */\n      add\n        /* \"#utility.yul\":12719:12777   */\n      mstore\n        /* \"#utility.yul\":12811:12829   */\n      0x7573652077697468647261775745544800000000000000000000000000000000\n        /* \"#utility.yul\":12806:12808   */\n      0x20\n        /* \"#utility.yul\":12798:12804   */\n      dup3\n        /* \"#utility.yul\":12794:12809   */\n      add\n        /* \"#utility.yul\":12787:12830   */\n      mstore\n        /* \"#utility.yul\":12602:12837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12843:13209   */\n    tag_178:\n        /* \"#utility.yul\":12985:12988   */\n      0x00\n        /* \"#utility.yul\":13006:13073   */\n      tag_313\n        /* \"#utility.yul\":13070:13072   */\n      0x30\n        /* \"#utility.yul\":13065:13068   */\n      dup4\n        /* \"#utility.yul\":13006:13073   */\n      tag_161\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12999:13073   */\n      swap2\n      pop\n        /* \"#utility.yul\":13082:13175   */\n      tag_314\n        /* \"#utility.yul\":13171:13174   */\n      dup3\n        /* \"#utility.yul\":13082:13175   */\n      tag_177\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13200:13202   */\n      0x40\n        /* \"#utility.yul\":13195:13198   */\n      dup3\n        /* \"#utility.yul\":13191:13203   */\n      add\n        /* \"#utility.yul\":13184:13203   */\n      swap1\n      pop\n        /* \"#utility.yul\":12843:13209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13215:13634   */\n    tag_114:\n        /* \"#utility.yul\":13381:13385   */\n      0x00\n        /* \"#utility.yul\":13419:13421   */\n      0x20\n        /* \"#utility.yul\":13408:13417   */\n      dup3\n        /* \"#utility.yul\":13404:13422   */\n      add\n        /* \"#utility.yul\":13396:13422   */\n      swap1\n      pop\n        /* \"#utility.yul\":13468:13477   */\n      dup2\n        /* \"#utility.yul\":13462:13466   */\n      dup2\n        /* \"#utility.yul\":13458:13478   */\n      sub\n        /* \"#utility.yul\":13454:13455   */\n      0x00\n        /* \"#utility.yul\":13443:13452   */\n      dup4\n        /* \"#utility.yul\":13439:13456   */\n      add\n        /* \"#utility.yul\":13432:13479   */\n      mstore\n        /* \"#utility.yul\":13496:13627   */\n      tag_316\n        /* \"#utility.yul\":13622:13626   */\n      dup2\n        /* \"#utility.yul\":13496:13627   */\n      tag_178\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":13488:13627   */\n      swap1\n      pop\n        /* \"#utility.yul\":13215:13634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122069b368b22ecc3b59547182fca88e25396aa7fe96aae6a22590b46935173c8b7764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1142": {
									"entryPoint": null,
									"id": 1142,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 320,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24_fromMemory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint24_fromMemory": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2231:9",
										"nodeType": "YulBlock",
										"src": "0:2231:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "889:47:9",
													"nodeType": "YulBlock",
													"src": "889:47:9",
													"statements": [
														{
															"nativeSrc": "899:31:9",
															"nodeType": "YulAssignment",
															"src": "899:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "914:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "921:8:9",
																		"nodeType": "YulLiteral",
																		"src": "921:8:9",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "910:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:9"
																},
																"nativeSrc": "910:20:9",
																"nodeType": "YulFunctionCall",
																"src": "910:20:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "899:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "845:91:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "871:5:9",
														"nodeType": "YulTypedName",
														"src": "871:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "881:7:9",
														"nodeType": "YulTypedName",
														"src": "881:7:9",
														"type": ""
													}
												],
												"src": "845:91:9"
											},
											{
												"body": {
													"nativeSrc": "984:78:9",
													"nodeType": "YulBlock",
													"src": "984:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1040:16:9",
																"nodeType": "YulBlock",
																"src": "1040:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1049:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1052:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1042:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1042:6:9"
																			},
																			"nativeSrc": "1042:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1042:12:9"
																		},
																		"nativeSrc": "1042:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1007:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1007:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1031:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1031:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "1014:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "1014:16:9"
																				},
																				"nativeSrc": "1014:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1014:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1004:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1004:2:9"
																		},
																		"nativeSrc": "1004:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "997:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:9"
																},
																"nativeSrc": "997:42:9",
																"nodeType": "YulFunctionCall",
																"src": "997:42:9"
															},
															"nativeSrc": "994:62:9",
															"nodeType": "YulIf",
															"src": "994:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "942:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "977:5:9",
														"nodeType": "YulTypedName",
														"src": "977:5:9",
														"type": ""
													}
												],
												"src": "942:120:9"
											},
											{
												"body": {
													"nativeSrc": "1130:79:9",
													"nodeType": "YulBlock",
													"src": "1130:79:9",
													"statements": [
														{
															"nativeSrc": "1140:22:9",
															"nodeType": "YulAssignment",
															"src": "1140:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1155:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1155:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1149:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1149:5:9"
																},
																"nativeSrc": "1149:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1149:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1140:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1140:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1197:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1197:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "1171:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "1171:25:9"
																},
																"nativeSrc": "1171:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1171:32:9"
															},
															"nativeSrc": "1171:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "1171:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint24_fromMemory",
												"nativeSrc": "1068:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1108:6:9",
														"nodeType": "YulTypedName",
														"src": "1108:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1116:3:9",
														"nodeType": "YulTypedName",
														"src": "1116:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1124:5:9",
														"nodeType": "YulTypedName",
														"src": "1124:5:9",
														"type": ""
													}
												],
												"src": "1068:141:9"
											},
											{
												"body": {
													"nativeSrc": "1325:551:9",
													"nodeType": "YulBlock",
													"src": "1325:551:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1371:83:9",
																"nodeType": "YulBlock",
																"src": "1371:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1373:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1373:77:9"
																			},
																			"nativeSrc": "1373:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1373:79:9"
																		},
																		"nativeSrc": "1373:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1373:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1355:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1355:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1342:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:9"
																		},
																		"nativeSrc": "1342:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1367:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1367:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1338:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1338:3:9"
																},
																"nativeSrc": "1338:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1338:32:9"
															},
															"nativeSrc": "1335:119:9",
															"nodeType": "YulIf",
															"src": "1335:119:9"
														},
														{
															"nativeSrc": "1464:128:9",
															"nodeType": "YulBlock",
															"src": "1464:128:9",
															"statements": [
																{
																	"nativeSrc": "1479:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1479:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1493:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1493:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1483:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1483:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1508:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1508:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1554:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1554:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1565:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1565:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1550:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1550:3:9"
																				},
																				"nativeSrc": "1550:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1550:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1574:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1574:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1518:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1518:31:9"
																		},
																		"nativeSrc": "1518:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1518:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1508:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1602:129:9",
															"nodeType": "YulBlock",
															"src": "1602:129:9",
															"statements": [
																{
																	"nativeSrc": "1617:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1617:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1631:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1621:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1621:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1647:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1647:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1693:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1693:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1704:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1704:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1689:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1689:3:9"
																				},
																				"nativeSrc": "1689:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1689:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1713:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1713:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1657:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1657:31:9"
																		},
																		"nativeSrc": "1657:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1647:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1647:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1741:128:9",
															"nodeType": "YulBlock",
															"src": "1741:128:9",
															"statements": [
																{
																	"nativeSrc": "1756:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1756:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1770:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1770:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1760:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1760:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1786:73:9",
																	"nodeType": "YulAssignment",
																	"src": "1786:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1831:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1831:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1842:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1842:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1827:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1827:3:9"
																				},
																				"nativeSrc": "1827:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1851:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1851:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nativeSrc": "1796:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "1796:30:9"
																		},
																		"nativeSrc": "1796:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1796:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1786:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1786:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24_fromMemory",
												"nativeSrc": "1215:661:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1279:9:9",
														"nodeType": "YulTypedName",
														"src": "1279:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1290:7:9",
														"nodeType": "YulTypedName",
														"src": "1290:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1302:6:9",
														"nodeType": "YulTypedName",
														"src": "1302:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1310:6:9",
														"nodeType": "YulTypedName",
														"src": "1310:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1318:6:9",
														"nodeType": "YulTypedName",
														"src": "1318:6:9",
														"type": ""
													}
												],
												"src": "1215:661:9"
											},
											{
												"body": {
													"nativeSrc": "1947:53:9",
													"nodeType": "YulBlock",
													"src": "1947:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1964:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1964:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1987:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1987:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1969:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1969:17:9"
																		},
																		"nativeSrc": "1969:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1969:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1957:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1957:6:9"
																},
																"nativeSrc": "1957:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1957:37:9"
															},
															"nativeSrc": "1957:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1957:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1882:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1935:5:9",
														"nodeType": "YulTypedName",
														"src": "1935:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1942:3:9",
														"nodeType": "YulTypedName",
														"src": "1942:3:9",
														"type": ""
													}
												],
												"src": "1882:118:9"
											},
											{
												"body": {
													"nativeSrc": "2104:124:9",
													"nodeType": "YulBlock",
													"src": "2104:124:9",
													"statements": [
														{
															"nativeSrc": "2114:26:9",
															"nodeType": "YulAssignment",
															"src": "2114:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2126:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2126:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2122:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2122:3:9"
																},
																"nativeSrc": "2122:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2122:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2114:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2114:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2194:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2194:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2207:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2207:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2218:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2218:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2203:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2203:3:9"
																		},
																		"nativeSrc": "2203:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2203:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2150:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2150:43:9"
																},
																"nativeSrc": "2150:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2150:71:9"
															},
															"nativeSrc": "2150:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2150:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2006:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2076:9:9",
														"nodeType": "YulTypedName",
														"src": "2076:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2088:6:9",
														"nodeType": "YulTypedName",
														"src": "2088:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2099:4:9",
														"nodeType": "YulTypedName",
														"src": "2099:4:9",
														"type": ""
													}
												],
												"src": "2006:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint24_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b5060405161156838038061156883398181016040528101906100319190610297565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102f6565b60405180910390fd5b6100b18161014060201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050805f60146101000a81548162ffffff021916908362ffffff16021790555050505061030f565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022e82610205565b9050919050565b61023e81610224565b8114610248575f80fd5b50565b5f8151905061025981610235565b92915050565b5f62ffffff82169050919050565b6102768161025f565b8114610280575f80fd5b50565b5f815190506102918161026d565b92915050565b5f805f606084860312156102ae576102ad610201565b5b5f6102bb8682870161024b565b93505060206102cc8682870161024b565b92505060406102dd86828701610283565b9150509250925092565b6102f081610224565b82525050565b5f6020820190506103095f8301846102e7565b92915050565b60805160a05161121c61034c5f395f81816103b2015281816106ba01526108af01525f81816102f5015281816104610152610588015261121c5ff3fe608060405260043610610094575f3560e01c8063ed88c68e11610058578063ed88c68e14610164578063f2fde38b1461016e578063f3fef3a314610196578063fc0c546a146101be578063fc4dd333146101e8576100a4565b806354cf2aeb146100a8578063715018a6146100d25780638da5cb5b146100e8578063c31c9c0714610112578063e4c3a8f81461013c576100a4565b366100a4576100a234610210565b005b5f80fd5b3480156100b3575f80fd5b506100bc610538565b6040516100c99190610b7f565b60405180910390f35b3480156100dd575f80fd5b506100e661054c565b005b3480156100f3575f80fd5b506100fc61055f565b6040516101099190610bd7565b60405180910390f35b34801561011d575f80fd5b50610126610586565b6040516101339190610c4b565b60405180910390f35b348015610147575f80fd5b50610162600480360381019061015d9190610c92565b6105aa565b005b61016c6105d3565b005b348015610179575f80fd5b50610194600480360381019061018f9190610ce7565b61062c565b005b3480156101a1575f80fd5b506101bc60048036038101906101b79190610d45565b6106b0565b005b3480156101c9575f80fd5b506101d26108ad565b6040516101df9190610da3565b60405180910390f35b3480156101f3575f80fd5b5061020e60048036038101906102099190610dbc565b6108d1565b005b5f8111610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610e41565b60405180910390fd5b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b1580156102ac575f80fd5b505af11580156102be573d5f803e3d5ffd5b505050505073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401610332929190610e6e565b6020604051808303815f875af115801561034e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103729190610eca565b505f60405180610100016040528073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020015f60149054906101000a900462ffffff1662ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200161012c426104319190610f22565b81526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389836040518263ffffffff1660e01b81526004016104b89190611031565b6020604051808303815f875af11580156104d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f8919061105f565b90507f4f73e5828387c436ef01a51b03853873e76d7a5551556837d452cbeb6f285cb5838260405161052b92919061108a565b60405180910390a1505050565b5f60149054906101000a900462ffffff1681565b610554610a13565b61055d5f610a9a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105b2610a13565b805f60146101000a81548162ffffff021916908362ffffff16021790555050565b6105dc34610210565b3373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c523460405161062291906110b1565b60405180910390a2565b610634610a13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a4575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161069b9190610bd7565b60405180910390fd5b6106ad81610a9a565b50565b6106b8610a13565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073d9061113a565b60405180910390fd5b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf906111c8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610803929190610e6e565b6020604051808303815f875af115801561081f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108439190610eca565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040516108a191906110b1565b60405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108d9610a13565b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040161092691906110b1565b5f604051808303815f87803b15801561093d575f80fd5b505af115801561094f573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610996573d5f803e3d5ffd5b5073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb83604051610a0891906110b1565b60405180910390a350565b610a1b610b5b565b73ffffffffffffffffffffffffffffffffffffffff16610a3961055f565b73ffffffffffffffffffffffffffffffffffffffff1614610a9857610a5c610b5b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a8f9190610bd7565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f62ffffff82169050919050565b610b7981610b62565b82525050565b5f602082019050610b925f830184610b70565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bc182610b98565b9050919050565b610bd181610bb7565b82525050565b5f602082019050610bea5f830184610bc8565b92915050565b5f819050919050565b5f610c13610c0e610c0984610b98565b610bf0565b610b98565b9050919050565b5f610c2482610bf9565b9050919050565b5f610c3582610c1a565b9050919050565b610c4581610c2b565b82525050565b5f602082019050610c5e5f830184610c3c565b92915050565b5f80fd5b610c7181610b62565b8114610c7b575f80fd5b50565b5f81359050610c8c81610c68565b92915050565b5f60208284031215610ca757610ca6610c64565b5b5f610cb484828501610c7e565b91505092915050565b610cc681610bb7565b8114610cd0575f80fd5b50565b5f81359050610ce181610cbd565b92915050565b5f60208284031215610cfc57610cfb610c64565b5b5f610d0984828501610cd3565b91505092915050565b5f819050919050565b610d2481610d12565b8114610d2e575f80fd5b50565b5f81359050610d3f81610d1b565b92915050565b5f8060408385031215610d5b57610d5a610c64565b5b5f610d6885828601610cd3565b9250506020610d7985828601610d31565b9150509250929050565b5f610d8d82610c1a565b9050919050565b610d9d81610d83565b82525050565b5f602082019050610db65f830184610d94565b92915050565b5f60208284031215610dd157610dd0610c64565b5b5f610dde84828501610d31565b91505092915050565b5f82825260208201905092915050565b7f4d7573742073656e6420455448000000000000000000000000000000000000005f82015250565b5f610e2b600d83610de7565b9150610e3682610df7565b602082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b610e6881610d12565b82525050565b5f604082019050610e815f830185610bc8565b610e8e6020830184610e5f565b9392505050565b5f8115159050919050565b610ea981610e95565b8114610eb3575f80fd5b50565b5f81519050610ec481610ea0565b92915050565b5f60208284031215610edf57610ede610c64565b5b5f610eec84828501610eb6565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f2c82610d12565b9150610f3783610d12565b9250828201905080821115610f4f57610f4e610ef5565b5b92915050565b610f5e81610bb7565b82525050565b610f6d81610b62565b82525050565b610f7c81610d12565b82525050565b610f8b81610b98565b82525050565b61010082015f820151610fa65f850182610f55565b506020820151610fb96020850182610f55565b506040820151610fcc6040850182610f64565b506060820151610fdf6060850182610f55565b506080820151610ff26080850182610f73565b5060a082015161100560a0850182610f73565b5060c082015161101860c0850182610f73565b5060e082015161102b60e0850182610f82565b50505050565b5f610100820190506110455f830184610f91565b92915050565b5f8151905061105981610d1b565b92915050565b5f6020828403121561107457611073610c64565b5b5f6110818482850161104b565b91505092915050565b5f60408201905061109d5f830185610e5f565b6110aa6020830184610e5f565b9392505050565b5f6020820190506110c45f830184610e5f565b92915050565b7f43616e6e6f74207769746864726177207468652074617267657420746f6b656e5f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611124602183610de7565b915061112f826110ca565b604082019050919050565b5f6020820190508181035f83015261115181611118565b9050919050565b7f43616e6e6f74207769746864726177205745544839206469726563746c792c205f8201527f7573652077697468647261775745544800000000000000000000000000000000602082015250565b5f6111b2603083610de7565b91506111bd82611158565b604082019050919050565b5f6020820190508181035f8301526111df816111a6565b905091905056fea264697066735822122069b368b22ecc3b59547182fca88e25396aa7fe96aae6a22590b46935173c8b7764736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1568 CODESIZE SUB DUP1 PUSH2 0x1568 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x140 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x30F JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22E DUP3 PUSH2 0x205 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x224 JUMP JUMPDEST DUP2 EQ PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x259 DUP2 PUSH2 0x235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x25F JUMP JUMPDEST DUP2 EQ PUSH2 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x291 DUP2 PUSH2 0x26D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x201 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BB DUP7 DUP3 DUP8 ADD PUSH2 0x24B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2CC DUP7 DUP3 DUP8 ADD PUSH2 0x24B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2DD DUP7 DUP3 DUP8 ADD PUSH2 0x283 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x224 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x121C PUSH2 0x34C PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3B2 ADD MSTORE DUP2 DUP2 PUSH2 0x6BA ADD MSTORE PUSH2 0x8AF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x2F5 ADD MSTORE DUP2 DUP2 PUSH2 0x461 ADD MSTORE PUSH2 0x588 ADD MSTORE PUSH2 0x121C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xED88C68E GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xFC4DD333 EQ PUSH2 0x1E8 JUMPI PUSH2 0xA4 JUMP JUMPDEST DUP1 PUSH4 0x54CF2AEB EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xE4C3A8F8 EQ PUSH2 0x13C JUMPI PUSH2 0xA4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA4 JUMPI PUSH2 0xA2 CALLVALUE PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x5D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP2 GT PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C TIMESTAMP PUSH2 0x431 SWAP2 SWAP1 PUSH2 0xF22 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP PUSH32 0x4F73E5828387C436EF01A51B03853873E76D7A5551556837D452CBEB6F285CB5 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x52B SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x554 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x55D PUSH0 PUSH2 0xA9A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xA13 JUMP JUMPDEST DUP1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5DC CALLVALUE PUSH2 0x210 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x264F630D9EFA0D07053A31163641D9FCC0ADAFC9D9E76F1C37C2CE3A558D2C52 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x634 PUSH2 0xA13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AD DUP2 PUSH2 0xA9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0xA13 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP1 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x843 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0xA13 JUMP JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x94F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xB5B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA39 PUSH2 0x55F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA98 JUMPI PUSH2 0xA5C PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH2 0xB62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB92 PUSH0 DUP4 ADD DUP5 PUSH2 0xB70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBC1 DUP3 PUSH2 0xB98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD1 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEA PUSH0 DUP4 ADD DUP5 PUSH2 0xBC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC13 PUSH2 0xC0E PUSH2 0xC09 DUP5 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC24 DUP3 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC35 DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC45 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH0 DUP4 ADD DUP5 PUSH2 0xC3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xB62 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8C DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA6 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB4 DUP5 DUP3 DUP6 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE1 DUP2 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD09 DUP5 DUP3 DUP6 ADD PUSH2 0xCD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP2 EQ PUSH2 0xD2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD3F DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD5B JUMPI PUSH2 0xD5A PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD68 DUP6 DUP3 DUP7 ADD PUSH2 0xCD3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD79 DUP6 DUP3 DUP7 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8D DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9D DUP2 PUSH2 0xD83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2B PUSH1 0xD DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE58 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE81 PUSH0 DUP4 ADD DUP6 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xE8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA9 DUP2 PUSH2 0xE95 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEC4 DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDF JUMPI PUSH2 0xEDE PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEEC DUP5 DUP3 DUP6 ADD PUSH2 0xEB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF2C DUP3 PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP PUSH2 0xF37 DUP4 PUSH2 0xD12 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF4F JUMPI PUSH2 0xF4E PUSH2 0xEF5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF5E DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6D DUP2 PUSH2 0xB62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF7C DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xB98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xFA6 PUSH0 DUP6 ADD DUP3 PUSH2 0xF55 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFB9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF55 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFCC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF64 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFDF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF55 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xFF2 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF73 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1005 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF73 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1018 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xF73 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x102B PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xF82 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1045 PUSH0 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1059 DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH2 0x1073 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1081 DUP5 DUP3 DUP6 ADD PUSH2 0x104B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH0 DUP4 ADD DUP6 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x10AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C4 PUSH0 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207769746864726177207468652074617267657420746F6B656E PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1124 PUSH1 0x21 DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x112F DUP3 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1151 DUP2 PUSH2 0x1118 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207769746864726177205745544839206469726563746C792C20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7573652077697468647261775745544800000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B2 PUSH1 0x30 DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x11BD DUP3 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11DF DUP2 PUSH2 0x11A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xB368B22ECC3B59547182 0xFC 0xA8 DUP15 0x25 CODECOPY PUSH11 0xA7FE96AAE6A22590B46935 OR EXTCODECOPY DUP12 PUSH24 0x64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "502:2215:8:-:0;;;944:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1017:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1064:11:8::1;1039:37;;;;;;;;::::0;::::1;1100:6;1086:21;;;;;;;;::::0;::::1;1127:8;1117:7;;:18;;;;;;;;;;;;;;;;;;944:198:::0;;;502:2215;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:91::-;881:7;921:8;914:5;910:20;899:31;;845:91;;;:::o;942:120::-;1014:23;1031:5;1014:23;:::i;:::-;1007:5;1004:34;994:62;;1052:1;1049;1042:12;994:62;942:120;:::o;1068:141::-;1124:5;1155:6;1149:13;1140:22;;1171:32;1197:5;1171:32;:::i;:::-;1068:141;;;;:::o;1215:661::-;1302:6;1310;1318;1367:2;1355:9;1346:7;1342:23;1338:32;1335:119;;;1373:79;;:::i;:::-;1335:119;1493:1;1518:64;1574:7;1565:6;1554:9;1550:22;1518:64;:::i;:::-;1508:74;;1464:128;1631:2;1657:64;1713:7;1704:6;1693:9;1689:22;1657:64;:::i;:::-;1647:74;;1602:129;1770:2;1796:63;1851:7;1842:6;1831:9;1827:22;1796:63;:::i;:::-;1786:73;;1741:128;1215:661;;;;;:::o;1882:118::-;1969:24;1987:5;1969:24;:::i;:::-;1964:3;1957:37;1882:118;;:::o;2006:222::-;2099:4;2137:2;2126:9;2122:18;2114:26;;2150:71;2218:1;2207:9;2203:17;2194:6;2150:71;:::i;:::-;2006:222;;;;:::o;502:2215:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1321": {
									"entryPoint": null,
									"id": 1321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2579,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2907,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_swapETHForToken_1226": {
									"entryPoint": 528,
									"id": 1226,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2714,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donate_1158": {
									"entryPoint": 1491,
									"id": 1158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1375,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1356,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setSwapFee_1312": {
									"entryPoint": 1450,
									"id": 1312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapFee_1092": {
									"entryPoint": 1336,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapRouter_1084": {
									"entryPoint": 1414,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1087": {
									"entryPoint": 2221,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1580,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawWETH_1300": {
									"entryPoint": 2257,
									"id": 1300,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1269": {
									"entryPoint": 1712,
									"id": 1269,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint24": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$1047_to_t_address_fromStack": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$971_memory_ptr_to_t_struct$_ExactInputSingleParams_$971_memory_ptr_fromStack": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$1047__to_t_address__fromStack_reversed": {
									"entryPoint": 3147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$971_memory_ptr__to_t_struct$_ExactInputSingleParams_$971_memory_ptr__fromStack_reversed": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$799_to_t_address": {
									"entryPoint": 3459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$1047_to_t_address": {
									"entryPoint": 3115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13637:9",
										"nodeType": "YulBlock",
										"src": "0:13637:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:47:9",
													"nodeType": "YulBlock",
													"src": "51:47:9",
													"statements": [
														{
															"nativeSrc": "61:31:9",
															"nodeType": "YulAssignment",
															"src": "61:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:8:9",
																		"nodeType": "YulLiteral",
																		"src": "83:8:9",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:9"
																},
																"nativeSrc": "72:20:9",
																"nodeType": "YulFunctionCall",
																"src": "72:20:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7:91:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:9",
														"nodeType": "YulTypedName",
														"src": "33:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:9",
														"nodeType": "YulTypedName",
														"src": "43:7:9",
														"type": ""
													}
												],
												"src": "7:91:9"
											},
											{
												"body": {
													"nativeSrc": "167:52:9",
													"nodeType": "YulBlock",
													"src": "167:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "184:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "206:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "206:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "189:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "189:16:9"
																		},
																		"nativeSrc": "189:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "189:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "177:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:9"
																},
																"nativeSrc": "177:36:9",
																"nodeType": "YulFunctionCall",
																"src": "177:36:9"
															},
															"nativeSrc": "177:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "177:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "104:115:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "155:5:9",
														"nodeType": "YulTypedName",
														"src": "155:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "162:3:9",
														"nodeType": "YulTypedName",
														"src": "162:3:9",
														"type": ""
													}
												],
												"src": "104:115:9"
											},
											{
												"body": {
													"nativeSrc": "321:122:9",
													"nodeType": "YulBlock",
													"src": "321:122:9",
													"statements": [
														{
															"nativeSrc": "331:26:9",
															"nodeType": "YulAssignment",
															"src": "331:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "354:2:9",
																		"nodeType": "YulLiteral",
																		"src": "354:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "339:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:9"
																},
																"nativeSrc": "339:18:9",
																"nodeType": "YulFunctionCall",
																"src": "339:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "331:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "422:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "433:1:9",
																				"nodeType": "YulLiteral",
																				"src": "433:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "418:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:9"
																		},
																		"nativeSrc": "418:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "418:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "367:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "367:41:9"
																},
																"nativeSrc": "367:69:9",
																"nodeType": "YulFunctionCall",
																"src": "367:69:9"
															},
															"nativeSrc": "367:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "367:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "225:218:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "293:9:9",
														"nodeType": "YulTypedName",
														"src": "293:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "305:6:9",
														"nodeType": "YulTypedName",
														"src": "305:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "316:4:9",
														"nodeType": "YulTypedName",
														"src": "316:4:9",
														"type": ""
													}
												],
												"src": "225:218:9"
											},
											{
												"body": {
													"nativeSrc": "494:81:9",
													"nodeType": "YulBlock",
													"src": "494:81:9",
													"statements": [
														{
															"nativeSrc": "504:65:9",
															"nodeType": "YulAssignment",
															"src": "504:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "519:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "519:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:42:9",
																		"nodeType": "YulLiteral",
																		"src": "526:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "515:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:9"
																},
																"nativeSrc": "515:54:9",
																"nodeType": "YulFunctionCall",
																"src": "515:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "504:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "504:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "449:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "476:5:9",
														"nodeType": "YulTypedName",
														"src": "476:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "486:7:9",
														"nodeType": "YulTypedName",
														"src": "486:7:9",
														"type": ""
													}
												],
												"src": "449:126:9"
											},
											{
												"body": {
													"nativeSrc": "626:51:9",
													"nodeType": "YulBlock",
													"src": "626:51:9",
													"statements": [
														{
															"nativeSrc": "636:35:9",
															"nodeType": "YulAssignment",
															"src": "636:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "647:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:9"
																},
																"nativeSrc": "647:24:9",
																"nodeType": "YulFunctionCall",
																"src": "647:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "581:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:9",
														"nodeType": "YulTypedName",
														"src": "608:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:9",
														"nodeType": "YulTypedName",
														"src": "618:7:9",
														"type": ""
													}
												],
												"src": "581:96:9"
											},
											{
												"body": {
													"nativeSrc": "748:53:9",
													"nodeType": "YulBlock",
													"src": "748:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "788:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "788:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "770:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "770:17:9"
																		},
																		"nativeSrc": "770:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "770:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:9"
																},
																"nativeSrc": "758:37:9",
																"nodeType": "YulFunctionCall",
																"src": "758:37:9"
															},
															"nativeSrc": "758:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "758:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "683:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:9",
														"nodeType": "YulTypedName",
														"src": "736:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:9",
														"nodeType": "YulTypedName",
														"src": "743:3:9",
														"type": ""
													}
												],
												"src": "683:118:9"
											},
											{
												"body": {
													"nativeSrc": "905:124:9",
													"nodeType": "YulBlock",
													"src": "905:124:9",
													"statements": [
														{
															"nativeSrc": "915:26:9",
															"nodeType": "YulAssignment",
															"src": "915:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "927:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "927:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "938:2:9",
																		"nodeType": "YulLiteral",
																		"src": "938:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "923:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:9"
																},
																"nativeSrc": "923:18:9",
																"nodeType": "YulFunctionCall",
																"src": "923:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "915:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "995:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "995:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1008:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1019:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1019:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1004:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:9"
																		},
																		"nativeSrc": "1004:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "951:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "951:43:9"
																},
																"nativeSrc": "951:71:9",
																"nodeType": "YulFunctionCall",
																"src": "951:71:9"
															},
															"nativeSrc": "951:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "951:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "807:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:9",
														"nodeType": "YulTypedName",
														"src": "877:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "889:6:9",
														"nodeType": "YulTypedName",
														"src": "889:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "900:4:9",
														"nodeType": "YulTypedName",
														"src": "900:4:9",
														"type": ""
													}
												],
												"src": "807:222:9"
											},
											{
												"body": {
													"nativeSrc": "1067:28:9",
													"nodeType": "YulBlock",
													"src": "1067:28:9",
													"statements": [
														{
															"nativeSrc": "1077:12:9",
															"nodeType": "YulAssignment",
															"src": "1077:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1084:5:9",
																"nodeType": "YulIdentifier",
																"src": "1084:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1077:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1077:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1035:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1053:5:9",
														"nodeType": "YulTypedName",
														"src": "1053:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1063:3:9",
														"nodeType": "YulTypedName",
														"src": "1063:3:9",
														"type": ""
													}
												],
												"src": "1035:60:9"
											},
											{
												"body": {
													"nativeSrc": "1161:82:9",
													"nodeType": "YulBlock",
													"src": "1161:82:9",
													"statements": [
														{
															"nativeSrc": "1171:66:9",
															"nodeType": "YulAssignment",
															"src": "1171:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1229:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1229:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1211:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1211:17:9"
																				},
																				"nativeSrc": "1211:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1211:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1202:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "1202:8:9"
																		},
																		"nativeSrc": "1202:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1184:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1184:17:9"
																},
																"nativeSrc": "1184:53:9",
																"nodeType": "YulFunctionCall",
																"src": "1184:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1171:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1171:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1101:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1141:5:9",
														"nodeType": "YulTypedName",
														"src": "1141:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1151:9:9",
														"nodeType": "YulTypedName",
														"src": "1151:9:9",
														"type": ""
													}
												],
												"src": "1101:142:9"
											},
											{
												"body": {
													"nativeSrc": "1309:66:9",
													"nodeType": "YulBlock",
													"src": "1309:66:9",
													"statements": [
														{
															"nativeSrc": "1319:50:9",
															"nodeType": "YulAssignment",
															"src": "1319:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1363:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1363:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1332:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "1332:30:9"
																},
																"nativeSrc": "1332:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1332:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1319:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1319:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1249:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1289:5:9",
														"nodeType": "YulTypedName",
														"src": "1289:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1299:9:9",
														"nodeType": "YulTypedName",
														"src": "1299:9:9",
														"type": ""
													}
												],
												"src": "1249:126:9"
											},
											{
												"body": {
													"nativeSrc": "1461:66:9",
													"nodeType": "YulBlock",
													"src": "1461:66:9",
													"statements": [
														{
															"nativeSrc": "1471:50:9",
															"nodeType": "YulAssignment",
															"src": "1471:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1515:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1484:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "1484:30:9"
																},
																"nativeSrc": "1484:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1484:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1471:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1471:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$1047_to_t_address",
												"nativeSrc": "1381:146:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1441:5:9",
														"nodeType": "YulTypedName",
														"src": "1441:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1451:9:9",
														"nodeType": "YulTypedName",
														"src": "1451:9:9",
														"type": ""
													}
												],
												"src": "1381:146:9"
											},
											{
												"body": {
													"nativeSrc": "1618:86:9",
													"nodeType": "YulBlock",
													"src": "1618:86:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1635:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1635:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1691:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1691:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$1047_to_t_address",
																			"nativeSrc": "1640:50:9",
																			"nodeType": "YulIdentifier",
																			"src": "1640:50:9"
																		},
																		"nativeSrc": "1640:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1640:57:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:9"
																},
																"nativeSrc": "1628:70:9",
																"nodeType": "YulFunctionCall",
																"src": "1628:70:9"
															},
															"nativeSrc": "1628:70:9",
															"nodeType": "YulExpressionStatement",
															"src": "1628:70:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$1047_to_t_address_fromStack",
												"nativeSrc": "1533:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1606:5:9",
														"nodeType": "YulTypedName",
														"src": "1606:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1613:3:9",
														"nodeType": "YulTypedName",
														"src": "1613:3:9",
														"type": ""
													}
												],
												"src": "1533:171:9"
											},
											{
												"body": {
													"nativeSrc": "1828:144:9",
													"nodeType": "YulBlock",
													"src": "1828:144:9",
													"statements": [
														{
															"nativeSrc": "1838:26:9",
															"nodeType": "YulAssignment",
															"src": "1838:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1850:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1861:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1861:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1846:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1846:3:9"
																},
																"nativeSrc": "1846:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1846:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1838:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1838:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1938:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1938:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1951:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1962:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1962:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1947:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:9"
																		},
																		"nativeSrc": "1947:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1947:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$1047_to_t_address_fromStack",
																	"nativeSrc": "1874:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1874:63:9"
																},
																"nativeSrc": "1874:91:9",
																"nodeType": "YulFunctionCall",
																"src": "1874:91:9"
															},
															"nativeSrc": "1874:91:9",
															"nodeType": "YulExpressionStatement",
															"src": "1874:91:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$1047__to_t_address__fromStack_reversed",
												"nativeSrc": "1710:262:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1800:9:9",
														"nodeType": "YulTypedName",
														"src": "1800:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1812:6:9",
														"nodeType": "YulTypedName",
														"src": "1812:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1823:4:9",
														"nodeType": "YulTypedName",
														"src": "1823:4:9",
														"type": ""
													}
												],
												"src": "1710:262:9"
											},
											{
												"body": {
													"nativeSrc": "2018:35:9",
													"nodeType": "YulBlock",
													"src": "2018:35:9",
													"statements": [
														{
															"nativeSrc": "2028:19:9",
															"nodeType": "YulAssignment",
															"src": "2028:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2044:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2044:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2038:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2038:5:9"
																},
																"nativeSrc": "2038:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2038:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2028:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1978:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2011:6:9",
														"nodeType": "YulTypedName",
														"src": "2011:6:9",
														"type": ""
													}
												],
												"src": "1978:75:9"
											},
											{
												"body": {
													"nativeSrc": "2148:28:9",
													"nodeType": "YulBlock",
													"src": "2148:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2165:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2165:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2168:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2168:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2158:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:9"
																},
																"nativeSrc": "2158:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2158:12:9"
															},
															"nativeSrc": "2158:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2158:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2059:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2059:117:9"
											},
											{
												"body": {
													"nativeSrc": "2271:28:9",
													"nodeType": "YulBlock",
													"src": "2271:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2288:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2288:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2291:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2281:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:9"
																},
																"nativeSrc": "2281:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2281:12:9"
															},
															"nativeSrc": "2281:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2281:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2182:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2182:117:9"
											},
											{
												"body": {
													"nativeSrc": "2347:78:9",
													"nodeType": "YulBlock",
													"src": "2347:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2403:16:9",
																"nodeType": "YulBlock",
																"src": "2403:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2412:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2412:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2415:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2415:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2405:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2405:6:9"
																			},
																			"nativeSrc": "2405:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2405:12:9"
																		},
																		"nativeSrc": "2405:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2405:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2370:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2370:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2394:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2394:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "2377:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "2377:16:9"
																				},
																				"nativeSrc": "2377:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2367:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2367:2:9"
																		},
																		"nativeSrc": "2367:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2360:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:9"
																},
																"nativeSrc": "2360:42:9",
																"nodeType": "YulFunctionCall",
																"src": "2360:42:9"
															},
															"nativeSrc": "2357:62:9",
															"nodeType": "YulIf",
															"src": "2357:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "2305:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2340:5:9",
														"nodeType": "YulTypedName",
														"src": "2340:5:9",
														"type": ""
													}
												],
												"src": "2305:120:9"
											},
											{
												"body": {
													"nativeSrc": "2482:86:9",
													"nodeType": "YulBlock",
													"src": "2482:86:9",
													"statements": [
														{
															"nativeSrc": "2492:29:9",
															"nodeType": "YulAssignment",
															"src": "2492:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2514:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2514:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2501:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2501:12:9"
																},
																"nativeSrc": "2501:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2501:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2492:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2492:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2556:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2556:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "2530:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "2530:25:9"
																},
																"nativeSrc": "2530:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2530:32:9"
															},
															"nativeSrc": "2530:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "2530:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nativeSrc": "2431:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2460:6:9",
														"nodeType": "YulTypedName",
														"src": "2460:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2468:3:9",
														"nodeType": "YulTypedName",
														"src": "2468:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2476:5:9",
														"nodeType": "YulTypedName",
														"src": "2476:5:9",
														"type": ""
													}
												],
												"src": "2431:137:9"
											},
											{
												"body": {
													"nativeSrc": "2639:262:9",
													"nodeType": "YulBlock",
													"src": "2639:262:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2685:83:9",
																"nodeType": "YulBlock",
																"src": "2685:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2687:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2687:77:9"
																			},
																			"nativeSrc": "2687:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:79:9"
																		},
																		"nativeSrc": "2687:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2687:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2660:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2660:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2669:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2669:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2656:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2656:3:9"
																		},
																		"nativeSrc": "2656:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2656:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2681:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2681:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2652:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:9"
																},
																"nativeSrc": "2652:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2652:32:9"
															},
															"nativeSrc": "2649:119:9",
															"nodeType": "YulIf",
															"src": "2649:119:9"
														},
														{
															"nativeSrc": "2778:116:9",
															"nodeType": "YulBlock",
															"src": "2778:116:9",
															"statements": [
																{
																	"nativeSrc": "2793:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2793:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2807:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2807:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2797:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2797:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2822:62:9",
																	"nodeType": "YulAssignment",
																	"src": "2822:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2856:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2856:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2867:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2867:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2852:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2852:3:9"
																				},
																				"nativeSrc": "2852:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2852:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2876:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2876:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "2832:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "2832:19:9"
																		},
																		"nativeSrc": "2832:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2822:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2822:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint24",
												"nativeSrc": "2574:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2609:9:9",
														"nodeType": "YulTypedName",
														"src": "2609:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2620:7:9",
														"nodeType": "YulTypedName",
														"src": "2620:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2632:6:9",
														"nodeType": "YulTypedName",
														"src": "2632:6:9",
														"type": ""
													}
												],
												"src": "2574:327:9"
											},
											{
												"body": {
													"nativeSrc": "2950:79:9",
													"nodeType": "YulBlock",
													"src": "2950:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3007:16:9",
																"nodeType": "YulBlock",
																"src": "3007:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3016:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3016:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3019:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3019:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3009:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3009:6:9"
																			},
																			"nativeSrc": "3009:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3009:12:9"
																		},
																		"nativeSrc": "3009:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3009:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2973:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2973:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2998:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2998:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2980:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2980:17:9"
																				},
																				"nativeSrc": "2980:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2980:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2970:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2970:2:9"
																		},
																		"nativeSrc": "2970:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2970:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2963:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:9"
																},
																"nativeSrc": "2963:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2963:43:9"
															},
															"nativeSrc": "2960:63:9",
															"nodeType": "YulIf",
															"src": "2960:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2907:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2943:5:9",
														"nodeType": "YulTypedName",
														"src": "2943:5:9",
														"type": ""
													}
												],
												"src": "2907:122:9"
											},
											{
												"body": {
													"nativeSrc": "3087:87:9",
													"nodeType": "YulBlock",
													"src": "3087:87:9",
													"statements": [
														{
															"nativeSrc": "3097:29:9",
															"nodeType": "YulAssignment",
															"src": "3097:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3119:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3119:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3106:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3106:12:9"
																},
																"nativeSrc": "3106:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3106:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3097:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3097:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3162:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3162:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3135:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3135:26:9"
																},
																"nativeSrc": "3135:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3135:33:9"
															},
															"nativeSrc": "3135:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3135:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3035:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3065:6:9",
														"nodeType": "YulTypedName",
														"src": "3065:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3073:3:9",
														"nodeType": "YulTypedName",
														"src": "3073:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3081:5:9",
														"nodeType": "YulTypedName",
														"src": "3081:5:9",
														"type": ""
													}
												],
												"src": "3035:139:9"
											},
											{
												"body": {
													"nativeSrc": "3246:263:9",
													"nodeType": "YulBlock",
													"src": "3246:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3292:83:9",
																"nodeType": "YulBlock",
																"src": "3292:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3294:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3294:77:9"
																			},
																			"nativeSrc": "3294:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3294:79:9"
																		},
																		"nativeSrc": "3294:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3267:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3267:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3276:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3276:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3263:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:9"
																		},
																		"nativeSrc": "3263:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3263:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3288:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3288:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3259:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:9"
																},
																"nativeSrc": "3259:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3259:32:9"
															},
															"nativeSrc": "3256:119:9",
															"nodeType": "YulIf",
															"src": "3256:119:9"
														},
														{
															"nativeSrc": "3385:117:9",
															"nodeType": "YulBlock",
															"src": "3385:117:9",
															"statements": [
																{
																	"nativeSrc": "3400:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3400:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3414:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3414:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3404:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3404:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3429:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3429:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3464:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3464:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3475:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3475:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3460:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3460:3:9"
																				},
																				"nativeSrc": "3460:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3460:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3484:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3484:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3439:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3439:20:9"
																		},
																		"nativeSrc": "3439:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3439:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3429:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3180:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3216:9:9",
														"nodeType": "YulTypedName",
														"src": "3216:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3227:7:9",
														"nodeType": "YulTypedName",
														"src": "3227:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3239:6:9",
														"nodeType": "YulTypedName",
														"src": "3239:6:9",
														"type": ""
													}
												],
												"src": "3180:329:9"
											},
											{
												"body": {
													"nativeSrc": "3560:32:9",
													"nodeType": "YulBlock",
													"src": "3560:32:9",
													"statements": [
														{
															"nativeSrc": "3570:16:9",
															"nodeType": "YulAssignment",
															"src": "3570:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "3581:5:9",
																"nodeType": "YulIdentifier",
																"src": "3581:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3570:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3570:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3515:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3542:5:9",
														"nodeType": "YulTypedName",
														"src": "3542:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3552:7:9",
														"nodeType": "YulTypedName",
														"src": "3552:7:9",
														"type": ""
													}
												],
												"src": "3515:77:9"
											},
											{
												"body": {
													"nativeSrc": "3641:79:9",
													"nodeType": "YulBlock",
													"src": "3641:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3698:16:9",
																"nodeType": "YulBlock",
																"src": "3698:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3707:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3707:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3710:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3710:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3700:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:9"
																			},
																			"nativeSrc": "3700:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3700:12:9"
																		},
																		"nativeSrc": "3700:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3700:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3664:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3689:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3689:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3671:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3671:17:9"
																				},
																				"nativeSrc": "3671:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3671:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3661:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3661:2:9"
																		},
																		"nativeSrc": "3661:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3661:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3654:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:9"
																},
																"nativeSrc": "3654:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3654:43:9"
															},
															"nativeSrc": "3651:63:9",
															"nodeType": "YulIf",
															"src": "3651:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3598:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3634:5:9",
														"nodeType": "YulTypedName",
														"src": "3634:5:9",
														"type": ""
													}
												],
												"src": "3598:122:9"
											},
											{
												"body": {
													"nativeSrc": "3778:87:9",
													"nodeType": "YulBlock",
													"src": "3778:87:9",
													"statements": [
														{
															"nativeSrc": "3788:29:9",
															"nodeType": "YulAssignment",
															"src": "3788:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3810:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3810:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3797:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3797:12:9"
																},
																"nativeSrc": "3797:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3797:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3788:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3788:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3853:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3853:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3826:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3826:26:9"
																},
																"nativeSrc": "3826:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3826:33:9"
															},
															"nativeSrc": "3826:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3826:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3726:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3756:6:9",
														"nodeType": "YulTypedName",
														"src": "3756:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3764:3:9",
														"nodeType": "YulTypedName",
														"src": "3764:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3772:5:9",
														"nodeType": "YulTypedName",
														"src": "3772:5:9",
														"type": ""
													}
												],
												"src": "3726:139:9"
											},
											{
												"body": {
													"nativeSrc": "3954:391:9",
													"nodeType": "YulBlock",
													"src": "3954:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4000:83:9",
																"nodeType": "YulBlock",
																"src": "4000:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4002:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4002:77:9"
																			},
																			"nativeSrc": "4002:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4002:79:9"
																		},
																		"nativeSrc": "4002:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4002:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3975:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3975:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3984:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3984:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3971:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3971:3:9"
																		},
																		"nativeSrc": "3971:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3971:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3996:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3996:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3967:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:9"
																},
																"nativeSrc": "3967:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3967:32:9"
															},
															"nativeSrc": "3964:119:9",
															"nodeType": "YulIf",
															"src": "3964:119:9"
														},
														{
															"nativeSrc": "4093:117:9",
															"nodeType": "YulBlock",
															"src": "4093:117:9",
															"statements": [
																{
																	"nativeSrc": "4108:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4108:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4122:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4122:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4112:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4112:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4137:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4137:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4172:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4172:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4183:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4183:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4168:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4168:3:9"
																				},
																				"nativeSrc": "4168:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4168:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4192:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4192:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4147:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4147:20:9"
																		},
																		"nativeSrc": "4147:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4137:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4137:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4220:118:9",
															"nodeType": "YulBlock",
															"src": "4220:118:9",
															"statements": [
																{
																	"nativeSrc": "4235:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4235:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4249:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4249:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4239:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4239:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4265:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4265:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4300:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4300:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4311:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4311:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4296:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4296:3:9"
																				},
																				"nativeSrc": "4296:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4296:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4320:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4320:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4275:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4275:20:9"
																		},
																		"nativeSrc": "4275:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4275:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4265:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4265:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3871:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3916:9:9",
														"nodeType": "YulTypedName",
														"src": "3916:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3927:7:9",
														"nodeType": "YulTypedName",
														"src": "3927:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3939:6:9",
														"nodeType": "YulTypedName",
														"src": "3939:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3947:6:9",
														"nodeType": "YulTypedName",
														"src": "3947:6:9",
														"type": ""
													}
												],
												"src": "3871:474:9"
											},
											{
												"body": {
													"nativeSrc": "4424:66:9",
													"nodeType": "YulBlock",
													"src": "4424:66:9",
													"statements": [
														{
															"nativeSrc": "4434:50:9",
															"nodeType": "YulAssignment",
															"src": "4434:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4478:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4478:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4447:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "4447:30:9"
																},
																"nativeSrc": "4447:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4447:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4434:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4434:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$799_to_t_address",
												"nativeSrc": "4351:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4404:5:9",
														"nodeType": "YulTypedName",
														"src": "4404:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4414:9:9",
														"nodeType": "YulTypedName",
														"src": "4414:9:9",
														"type": ""
													}
												],
												"src": "4351:139:9"
											},
											{
												"body": {
													"nativeSrc": "4574:79:9",
													"nodeType": "YulBlock",
													"src": "4574:79:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4591:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4591:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4640:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4640:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$799_to_t_address",
																			"nativeSrc": "4596:43:9",
																			"nodeType": "YulIdentifier",
																			"src": "4596:43:9"
																		},
																		"nativeSrc": "4596:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4596:50:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4584:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:9"
																},
																"nativeSrc": "4584:63:9",
																"nodeType": "YulFunctionCall",
																"src": "4584:63:9"
															},
															"nativeSrc": "4584:63:9",
															"nodeType": "YulExpressionStatement",
															"src": "4584:63:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
												"nativeSrc": "4496:157:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4562:5:9",
														"nodeType": "YulTypedName",
														"src": "4562:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4569:3:9",
														"nodeType": "YulTypedName",
														"src": "4569:3:9",
														"type": ""
													}
												],
												"src": "4496:157:9"
											},
											{
												"body": {
													"nativeSrc": "4770:137:9",
													"nodeType": "YulBlock",
													"src": "4770:137:9",
													"statements": [
														{
															"nativeSrc": "4780:26:9",
															"nodeType": "YulAssignment",
															"src": "4780:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4792:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4792:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4803:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4788:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:9"
																},
																"nativeSrc": "4788:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4788:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4780:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4780:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4873:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4873:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4886:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4886:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4897:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4897:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4882:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4882:3:9"
																		},
																		"nativeSrc": "4882:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4882:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
																	"nativeSrc": "4816:56:9",
																	"nodeType": "YulIdentifier",
																	"src": "4816:56:9"
																},
																"nativeSrc": "4816:84:9",
																"nodeType": "YulFunctionCall",
																"src": "4816:84:9"
															},
															"nativeSrc": "4816:84:9",
															"nodeType": "YulExpressionStatement",
															"src": "4816:84:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed",
												"nativeSrc": "4659:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4742:9:9",
														"nodeType": "YulTypedName",
														"src": "4742:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4754:6:9",
														"nodeType": "YulTypedName",
														"src": "4754:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4765:4:9",
														"nodeType": "YulTypedName",
														"src": "4765:4:9",
														"type": ""
													}
												],
												"src": "4659:248:9"
											},
											{
												"body": {
													"nativeSrc": "4979:263:9",
													"nodeType": "YulBlock",
													"src": "4979:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5025:83:9",
																"nodeType": "YulBlock",
																"src": "5025:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5027:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5027:77:9"
																			},
																			"nativeSrc": "5027:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5027:79:9"
																		},
																		"nativeSrc": "5027:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5027:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5000:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5000:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5009:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5009:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4996:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4996:3:9"
																		},
																		"nativeSrc": "4996:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4996:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5021:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4992:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4992:3:9"
																},
																"nativeSrc": "4992:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4992:32:9"
															},
															"nativeSrc": "4989:119:9",
															"nodeType": "YulIf",
															"src": "4989:119:9"
														},
														{
															"nativeSrc": "5118:117:9",
															"nodeType": "YulBlock",
															"src": "5118:117:9",
															"statements": [
																{
																	"nativeSrc": "5133:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5133:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5147:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5147:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5137:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5137:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5162:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5162:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5197:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5197:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5208:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5208:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5193:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5193:3:9"
																				},
																				"nativeSrc": "5193:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5193:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5217:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5217:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5172:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5172:20:9"
																		},
																		"nativeSrc": "5172:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5172:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5162:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5162:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4913:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4949:9:9",
														"nodeType": "YulTypedName",
														"src": "4949:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4960:7:9",
														"nodeType": "YulTypedName",
														"src": "4960:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4972:6:9",
														"nodeType": "YulTypedName",
														"src": "4972:6:9",
														"type": ""
													}
												],
												"src": "4913:329:9"
											},
											{
												"body": {
													"nativeSrc": "5344:73:9",
													"nodeType": "YulBlock",
													"src": "5344:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5361:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5361:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5366:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5366:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5354:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:9"
																},
																"nativeSrc": "5354:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5354:19:9"
															},
															"nativeSrc": "5354:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "5354:19:9"
														},
														{
															"nativeSrc": "5382:29:9",
															"nodeType": "YulAssignment",
															"src": "5382:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5401:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5401:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5406:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5406:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5397:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:9"
																},
																"nativeSrc": "5397:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5397:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5382:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "5382:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5248:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5316:3:9",
														"nodeType": "YulTypedName",
														"src": "5316:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5321:6:9",
														"nodeType": "YulTypedName",
														"src": "5321:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5332:11:9",
														"nodeType": "YulTypedName",
														"src": "5332:11:9",
														"type": ""
													}
												],
												"src": "5248:169:9"
											},
											{
												"body": {
													"nativeSrc": "5529:57:9",
													"nodeType": "YulBlock",
													"src": "5529:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5551:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5551:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5559:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5547:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:9"
																		},
																		"nativeSrc": "5547:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:14:9"
																	},
																	{
																		"hexValue": "4d7573742073656e6420455448",
																		"kind": "string",
																		"nativeSrc": "5563:15:9",
																		"nodeType": "YulLiteral",
																		"src": "5563:15:9",
																		"type": "",
																		"value": "Must send ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5540:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:9"
																},
																"nativeSrc": "5540:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5540:39:9"
															},
															"nativeSrc": "5540:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "5540:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
												"nativeSrc": "5423:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5521:6:9",
														"nodeType": "YulTypedName",
														"src": "5521:6:9",
														"type": ""
													}
												],
												"src": "5423:163:9"
											},
											{
												"body": {
													"nativeSrc": "5738:220:9",
													"nodeType": "YulBlock",
													"src": "5738:220:9",
													"statements": [
														{
															"nativeSrc": "5748:74:9",
															"nodeType": "YulAssignment",
															"src": "5748:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5814:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5814:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5755:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "5755:58:9"
																},
																"nativeSrc": "5755:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5755:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5748:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5920:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5920:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																	"nativeSrc": "5831:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "5831:88:9"
																},
																"nativeSrc": "5831:93:9",
																"nodeType": "YulFunctionCall",
																"src": "5831:93:9"
															},
															"nativeSrc": "5831:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "5831:93:9"
														},
														{
															"nativeSrc": "5933:19:9",
															"nodeType": "YulAssignment",
															"src": "5933:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5944:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5944:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5949:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5940:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5940:3:9"
																},
																"nativeSrc": "5940:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5940:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5933:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5933:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5592:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5726:3:9",
														"nodeType": "YulTypedName",
														"src": "5726:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5734:3:9",
														"nodeType": "YulTypedName",
														"src": "5734:3:9",
														"type": ""
													}
												],
												"src": "5592:366:9"
											},
											{
												"body": {
													"nativeSrc": "6135:248:9",
													"nodeType": "YulBlock",
													"src": "6135:248:9",
													"statements": [
														{
															"nativeSrc": "6145:26:9",
															"nodeType": "YulAssignment",
															"src": "6145:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6157:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6157:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6168:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6168:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6153:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:9"
																},
																"nativeSrc": "6153:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6153:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6145:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6145:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6192:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6192:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6203:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6203:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6188:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6188:3:9"
																		},
																		"nativeSrc": "6188:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6188:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6211:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6211:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6217:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6217:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6207:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6207:3:9"
																		},
																		"nativeSrc": "6207:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6207:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6181:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:9"
																},
																"nativeSrc": "6181:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6181:47:9"
															},
															"nativeSrc": "6181:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6181:47:9"
														},
														{
															"nativeSrc": "6237:139:9",
															"nodeType": "YulAssignment",
															"src": "6237:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6371:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6371:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6245:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "6245:124:9"
																},
																"nativeSrc": "6245:131:9",
																"nodeType": "YulFunctionCall",
																"src": "6245:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6237:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6237:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5964:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6115:9:9",
														"nodeType": "YulTypedName",
														"src": "6115:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6130:4:9",
														"nodeType": "YulTypedName",
														"src": "6130:4:9",
														"type": ""
													}
												],
												"src": "5964:419:9"
											},
											{
												"body": {
													"nativeSrc": "6454:53:9",
													"nodeType": "YulBlock",
													"src": "6454:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6471:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6471:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6494:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6494:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6476:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6476:17:9"
																		},
																		"nativeSrc": "6476:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6476:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6464:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6464:6:9"
																},
																"nativeSrc": "6464:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6464:37:9"
															},
															"nativeSrc": "6464:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6464:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6389:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6442:5:9",
														"nodeType": "YulTypedName",
														"src": "6442:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6449:3:9",
														"nodeType": "YulTypedName",
														"src": "6449:3:9",
														"type": ""
													}
												],
												"src": "6389:118:9"
											},
											{
												"body": {
													"nativeSrc": "6639:206:9",
													"nodeType": "YulBlock",
													"src": "6639:206:9",
													"statements": [
														{
															"nativeSrc": "6649:26:9",
															"nodeType": "YulAssignment",
															"src": "6649:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6661:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6661:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6672:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6672:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6657:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6657:3:9"
																},
																"nativeSrc": "6657:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6657:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6649:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6649:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6729:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6729:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6742:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6742:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6753:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6753:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6738:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6738:3:9"
																		},
																		"nativeSrc": "6738:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6738:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6685:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6685:43:9"
																},
																"nativeSrc": "6685:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6685:71:9"
															},
															"nativeSrc": "6685:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6685:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6810:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6810:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6823:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6823:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6834:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6834:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6819:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6819:3:9"
																		},
																		"nativeSrc": "6819:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6819:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6766:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6766:43:9"
																},
																"nativeSrc": "6766:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6766:72:9"
															},
															"nativeSrc": "6766:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6766:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6513:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6603:9:9",
														"nodeType": "YulTypedName",
														"src": "6603:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6615:6:9",
														"nodeType": "YulTypedName",
														"src": "6615:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6623:6:9",
														"nodeType": "YulTypedName",
														"src": "6623:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6634:4:9",
														"nodeType": "YulTypedName",
														"src": "6634:4:9",
														"type": ""
													}
												],
												"src": "6513:332:9"
											},
											{
												"body": {
													"nativeSrc": "6893:48:9",
													"nodeType": "YulBlock",
													"src": "6893:48:9",
													"statements": [
														{
															"nativeSrc": "6903:32:9",
															"nodeType": "YulAssignment",
															"src": "6903:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6928:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6928:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6921:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6921:6:9"
																		},
																		"nativeSrc": "6921:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6921:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6914:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6914:6:9"
																},
																"nativeSrc": "6914:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6914:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6903:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6903:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6851:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6875:5:9",
														"nodeType": "YulTypedName",
														"src": "6875:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6885:7:9",
														"nodeType": "YulTypedName",
														"src": "6885:7:9",
														"type": ""
													}
												],
												"src": "6851:90:9"
											},
											{
												"body": {
													"nativeSrc": "6987:76:9",
													"nodeType": "YulBlock",
													"src": "6987:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7041:16:9",
																"nodeType": "YulBlock",
																"src": "7041:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7050:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7050:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7053:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7053:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7043:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7043:6:9"
																			},
																			"nativeSrc": "7043:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7043:12:9"
																		},
																		"nativeSrc": "7043:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7043:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7010:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7010:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7032:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7032:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7017:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "7017:14:9"
																				},
																				"nativeSrc": "7017:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7017:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7007:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7007:2:9"
																		},
																		"nativeSrc": "7007:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7007:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7000:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:9"
																},
																"nativeSrc": "7000:40:9",
																"nodeType": "YulFunctionCall",
																"src": "7000:40:9"
															},
															"nativeSrc": "6997:60:9",
															"nodeType": "YulIf",
															"src": "6997:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6947:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6980:5:9",
														"nodeType": "YulTypedName",
														"src": "6980:5:9",
														"type": ""
													}
												],
												"src": "6947:116:9"
											},
											{
												"body": {
													"nativeSrc": "7129:77:9",
													"nodeType": "YulBlock",
													"src": "7129:77:9",
													"statements": [
														{
															"nativeSrc": "7139:22:9",
															"nodeType": "YulAssignment",
															"src": "7139:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7154:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7154:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7148:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7148:5:9"
																},
																"nativeSrc": "7148:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7148:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7139:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7139:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7194:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7194:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7170:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "7170:23:9"
																},
																"nativeSrc": "7170:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7170:30:9"
															},
															"nativeSrc": "7170:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7170:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7069:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7107:6:9",
														"nodeType": "YulTypedName",
														"src": "7107:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7115:3:9",
														"nodeType": "YulTypedName",
														"src": "7115:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7123:5:9",
														"nodeType": "YulTypedName",
														"src": "7123:5:9",
														"type": ""
													}
												],
												"src": "7069:137:9"
											},
											{
												"body": {
													"nativeSrc": "7286:271:9",
													"nodeType": "YulBlock",
													"src": "7286:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7332:83:9",
																"nodeType": "YulBlock",
																"src": "7332:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7334:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7334:77:9"
																			},
																			"nativeSrc": "7334:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7334:79:9"
																		},
																		"nativeSrc": "7334:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7334:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7307:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7307:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7316:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7316:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7303:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7303:3:9"
																		},
																		"nativeSrc": "7303:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7303:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7328:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7299:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7299:3:9"
																},
																"nativeSrc": "7299:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7299:32:9"
															},
															"nativeSrc": "7296:119:9",
															"nodeType": "YulIf",
															"src": "7296:119:9"
														},
														{
															"nativeSrc": "7425:125:9",
															"nodeType": "YulBlock",
															"src": "7425:125:9",
															"statements": [
																{
																	"nativeSrc": "7440:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7440:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7454:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7454:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7444:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7444:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7469:71:9",
																	"nodeType": "YulAssignment",
																	"src": "7469:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7512:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7512:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7523:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7523:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7508:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7508:3:9"
																				},
																				"nativeSrc": "7508:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7508:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7532:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7532:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7479:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "7479:28:9"
																		},
																		"nativeSrc": "7479:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7479:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7469:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7469:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7212:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7256:9:9",
														"nodeType": "YulTypedName",
														"src": "7256:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7267:7:9",
														"nodeType": "YulTypedName",
														"src": "7267:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7279:6:9",
														"nodeType": "YulTypedName",
														"src": "7279:6:9",
														"type": ""
													}
												],
												"src": "7212:345:9"
											},
											{
												"body": {
													"nativeSrc": "7591:152:9",
													"nodeType": "YulBlock",
													"src": "7591:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7608:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7608:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7611:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7611:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7601:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7601:6:9"
																},
																"nativeSrc": "7601:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7601:88:9"
															},
															"nativeSrc": "7601:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7601:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7705:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7705:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7708:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7708:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7698:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7698:6:9"
																},
																"nativeSrc": "7698:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7698:15:9"
															},
															"nativeSrc": "7698:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7698:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7729:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7729:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7732:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7732:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7722:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7722:6:9"
																},
																"nativeSrc": "7722:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7722:15:9"
															},
															"nativeSrc": "7722:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7722:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7563:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7563:180:9"
											},
											{
												"body": {
													"nativeSrc": "7793:147:9",
													"nodeType": "YulBlock",
													"src": "7793:147:9",
													"statements": [
														{
															"nativeSrc": "7803:25:9",
															"nodeType": "YulAssignment",
															"src": "7803:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7826:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7826:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7808:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7808:17:9"
																},
																"nativeSrc": "7808:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7808:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7803:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:9"
																}
															]
														},
														{
															"nativeSrc": "7837:25:9",
															"nodeType": "YulAssignment",
															"src": "7837:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7860:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7860:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7842:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7842:17:9"
																},
																"nativeSrc": "7842:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7842:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7837:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7837:1:9"
																}
															]
														},
														{
															"nativeSrc": "7871:16:9",
															"nodeType": "YulAssignment",
															"src": "7871:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7882:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7882:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7885:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7885:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7878:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7878:3:9"
																},
																"nativeSrc": "7878:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7878:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7871:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7871:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7911:22:9",
																"nodeType": "YulBlock",
																"src": "7911:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7913:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7913:16:9"
																			},
																			"nativeSrc": "7913:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7913:18:9"
																		},
																		"nativeSrc": "7913:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7913:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7903:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7903:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7906:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7906:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7900:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7900:2:9"
																},
																"nativeSrc": "7900:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7900:10:9"
															},
															"nativeSrc": "7897:36:9",
															"nodeType": "YulIf",
															"src": "7897:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7749:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7780:1:9",
														"nodeType": "YulTypedName",
														"src": "7780:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7783:1:9",
														"nodeType": "YulTypedName",
														"src": "7783:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7789:3:9",
														"nodeType": "YulTypedName",
														"src": "7789:3:9",
														"type": ""
													}
												],
												"src": "7749:191:9"
											},
											{
												"body": {
													"nativeSrc": "8001:53:9",
													"nodeType": "YulBlock",
													"src": "8001:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8018:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8018:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8041:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8041:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8023:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8023:17:9"
																		},
																		"nativeSrc": "8023:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8023:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8011:6:9"
																},
																"nativeSrc": "8011:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8011:37:9"
															},
															"nativeSrc": "8011:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8011:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "7946:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7989:5:9",
														"nodeType": "YulTypedName",
														"src": "7989:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7996:3:9",
														"nodeType": "YulTypedName",
														"src": "7996:3:9",
														"type": ""
													}
												],
												"src": "7946:108:9"
											},
											{
												"body": {
													"nativeSrc": "8113:52:9",
													"nodeType": "YulBlock",
													"src": "8113:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8130:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8130:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8152:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8152:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "8135:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "8135:16:9"
																		},
																		"nativeSrc": "8135:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8135:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8123:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8123:6:9"
																},
																"nativeSrc": "8123:36:9",
																"nodeType": "YulFunctionCall",
																"src": "8123:36:9"
															},
															"nativeSrc": "8123:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "8123:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "8060:105:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8101:5:9",
														"nodeType": "YulTypedName",
														"src": "8101:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8108:3:9",
														"nodeType": "YulTypedName",
														"src": "8108:3:9",
														"type": ""
													}
												],
												"src": "8060:105:9"
											},
											{
												"body": {
													"nativeSrc": "8226:53:9",
													"nodeType": "YulBlock",
													"src": "8226:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8243:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8243:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8266:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8266:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8248:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8248:17:9"
																		},
																		"nativeSrc": "8248:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8248:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8236:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:9"
																},
																"nativeSrc": "8236:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8236:37:9"
															},
															"nativeSrc": "8236:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8236:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "8171:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8214:5:9",
														"nodeType": "YulTypedName",
														"src": "8214:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8221:3:9",
														"nodeType": "YulTypedName",
														"src": "8221:3:9",
														"type": ""
													}
												],
												"src": "8171:108:9"
											},
											{
												"body": {
													"nativeSrc": "8340:53:9",
													"nodeType": "YulBlock",
													"src": "8340:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8357:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8357:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8380:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8380:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "8362:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8362:17:9"
																		},
																		"nativeSrc": "8362:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8362:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8350:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:9"
																},
																"nativeSrc": "8350:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8350:37:9"
															},
															"nativeSrc": "8350:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8350:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "8285:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8328:5:9",
														"nodeType": "YulTypedName",
														"src": "8328:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8335:3:9",
														"nodeType": "YulTypedName",
														"src": "8335:3:9",
														"type": ""
													}
												],
												"src": "8285:108:9"
											},
											{
												"body": {
													"nativeSrc": "8637:1479:9",
													"nodeType": "YulBlock",
													"src": "8637:1479:9",
													"statements": [
														{
															"nativeSrc": "8647:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8647:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8663:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8663:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8668:6:9",
																		"nodeType": "YulLiteral",
																		"src": "8668:6:9",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8659:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:9"
																},
																"nativeSrc": "8659:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8659:16:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "8651:4:9",
																	"nodeType": "YulTypedName",
																	"src": "8651:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8685:167:9",
															"nodeType": "YulBlock",
															"src": "8685:167:9",
															"statements": [
																{
																	"nativeSrc": "8723:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8723:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8753:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8753:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8760:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8760:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8749:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8749:3:9"
																				},
																				"nativeSrc": "8749:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8749:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8743:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8743:5:9"
																		},
																		"nativeSrc": "8743:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8743:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8727:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8727:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8813:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8813:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8831:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8831:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8836:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8836:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8827:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8827:3:9"
																				},
																				"nativeSrc": "8827:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8827:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "8779:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "8779:33:9"
																		},
																		"nativeSrc": "8779:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:63:9"
																	},
																	"nativeSrc": "8779:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8779:63:9"
																}
															]
														},
														{
															"nativeSrc": "8862:168:9",
															"nodeType": "YulBlock",
															"src": "8862:168:9",
															"statements": [
																{
																	"nativeSrc": "8901:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8901:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8931:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8931:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8938:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8938:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8927:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8927:3:9"
																				},
																				"nativeSrc": "8927:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8927:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8921:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8921:5:9"
																		},
																		"nativeSrc": "8921:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8921:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8905:12:9",
																			"nodeType": "YulTypedName",
																			"src": "8905:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8991:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "8991:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9009:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9009:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9014:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9014:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9005:3:9"
																				},
																				"nativeSrc": "9005:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9005:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "8957:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "8957:33:9"
																		},
																		"nativeSrc": "8957:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8957:63:9"
																	},
																	"nativeSrc": "8957:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "8957:63:9"
																}
															]
														},
														{
															"nativeSrc": "9040:161:9",
															"nodeType": "YulBlock",
															"src": "9040:161:9",
															"statements": [
																{
																	"nativeSrc": "9074:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9074:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9104:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9104:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9111:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9111:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9100:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9100:3:9"
																				},
																				"nativeSrc": "9100:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9100:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9094:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9094:5:9"
																		},
																		"nativeSrc": "9094:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9094:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9078:12:9",
																			"nodeType": "YulTypedName",
																			"src": "9078:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9162:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "9162:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9180:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9180:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9185:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9185:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9176:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9176:3:9"
																				},
																				"nativeSrc": "9176:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9176:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "9130:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "9130:31:9"
																		},
																		"nativeSrc": "9130:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9130:61:9"
																	},
																	"nativeSrc": "9130:61:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "9130:61:9"
																}
															]
														},
														{
															"nativeSrc": "9211:169:9",
															"nodeType": "YulBlock",
															"src": "9211:169:9",
															"statements": [
																{
																	"nativeSrc": "9251:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9251:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9281:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9281:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9288:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9288:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9277:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9277:3:9"
																				},
																				"nativeSrc": "9277:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9277:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9271:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9271:5:9"
																		},
																		"nativeSrc": "9271:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9271:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9255:12:9",
																			"nodeType": "YulTypedName",
																			"src": "9255:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9341:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "9341:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9359:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9359:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9364:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9364:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9355:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9355:3:9"
																				},
																				"nativeSrc": "9355:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9355:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "9307:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "9307:33:9"
																		},
																		"nativeSrc": "9307:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:63:9"
																	},
																	"nativeSrc": "9307:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "9307:63:9"
																}
															]
														},
														{
															"nativeSrc": "9390:168:9",
															"nodeType": "YulBlock",
															"src": "9390:168:9",
															"statements": [
																{
																	"nativeSrc": "9429:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9429:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9459:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9459:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9466:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9466:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9455:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9455:3:9"
																				},
																				"nativeSrc": "9455:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9455:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9449:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9449:5:9"
																		},
																		"nativeSrc": "9449:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9449:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9433:12:9",
																			"nodeType": "YulTypedName",
																			"src": "9433:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9519:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "9519:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9537:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9537:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9542:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9542:4:9",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9533:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9533:3:9"
																				},
																				"nativeSrc": "9533:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9533:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9485:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "9485:33:9"
																		},
																		"nativeSrc": "9485:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9485:63:9"
																	},
																	"nativeSrc": "9485:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "9485:63:9"
																}
															]
														},
														{
															"nativeSrc": "9568:168:9",
															"nodeType": "YulBlock",
															"src": "9568:168:9",
															"statements": [
																{
																	"nativeSrc": "9607:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9607:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9637:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9637:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9644:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9644:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9633:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9633:3:9"
																				},
																				"nativeSrc": "9633:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9633:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9627:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9627:5:9"
																		},
																		"nativeSrc": "9627:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9627:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9611:12:9",
																			"nodeType": "YulTypedName",
																			"src": "9611:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9697:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "9697:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9715:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9715:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9720:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9720:4:9",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9711:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9711:3:9"
																				},
																				"nativeSrc": "9711:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9711:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9663:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "9663:33:9"
																		},
																		"nativeSrc": "9663:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:63:9"
																	},
																	"nativeSrc": "9663:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "9663:63:9"
																}
															]
														},
														{
															"nativeSrc": "9746:176:9",
															"nodeType": "YulBlock",
															"src": "9746:176:9",
															"statements": [
																{
																	"nativeSrc": "9793:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9793:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9823:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9823:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9830:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9830:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9819:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9819:3:9"
																				},
																				"nativeSrc": "9819:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9819:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9813:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9813:5:9"
																		},
																		"nativeSrc": "9813:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9813:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9797:12:9",
																			"nodeType": "YulTypedName",
																			"src": "9797:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9883:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "9883:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9901:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9901:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9906:4:9",
																						"nodeType": "YulLiteral",
																						"src": "9906:4:9",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9897:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9897:3:9"
																				},
																				"nativeSrc": "9897:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9897:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9849:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "9849:33:9"
																		},
																		"nativeSrc": "9849:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9849:63:9"
																	},
																	"nativeSrc": "9849:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "9849:63:9"
																}
															]
														},
														{
															"nativeSrc": "9932:177:9",
															"nodeType": "YulBlock",
															"src": "9932:177:9",
															"statements": [
																{
																	"nativeSrc": "9980:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9980:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10010:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "10010:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10017:4:9",
																						"nodeType": "YulLiteral",
																						"src": "10017:4:9",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10006:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10006:3:9"
																				},
																				"nativeSrc": "10006:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10006:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10000:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "10000:5:9"
																		},
																		"nativeSrc": "10000:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10000:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9984:12:9",
																			"nodeType": "YulTypedName",
																			"src": "9984:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10070:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "10070:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10088:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "10088:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10093:4:9",
																						"nodeType": "YulLiteral",
																						"src": "10093:4:9",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10084:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10084:3:9"
																				},
																				"nativeSrc": "10084:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10084:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "10036:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "10036:33:9"
																		},
																		"nativeSrc": "10036:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10036:63:9"
																	},
																	"nativeSrc": "10036:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "10036:63:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$971_memory_ptr_to_t_struct$_ExactInputSingleParams_$971_memory_ptr_fromStack",
												"nativeSrc": "8493:1623:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8624:5:9",
														"nodeType": "YulTypedName",
														"src": "8624:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8631:3:9",
														"nodeType": "YulTypedName",
														"src": "8631:3:9",
														"type": ""
													}
												],
												"src": "8493:1623:9"
											},
											{
												"body": {
													"nativeSrc": "10298:203:9",
													"nodeType": "YulBlock",
													"src": "10298:203:9",
													"statements": [
														{
															"nativeSrc": "10308:27:9",
															"nodeType": "YulAssignment",
															"src": "10308:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10320:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10320:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10331:3:9",
																		"nodeType": "YulLiteral",
																		"src": "10331:3:9",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10316:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:9"
																},
																"nativeSrc": "10316:19:9",
																"nodeType": "YulFunctionCall",
																"src": "10316:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10308:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10308:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10467:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10467:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10480:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10480:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10491:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10491:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10476:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10476:3:9"
																		},
																		"nativeSrc": "10476:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10476:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$971_memory_ptr_to_t_struct$_ExactInputSingleParams_$971_memory_ptr_fromStack",
																	"nativeSrc": "10345:121:9",
																	"nodeType": "YulIdentifier",
																	"src": "10345:121:9"
																},
																"nativeSrc": "10345:149:9",
																"nodeType": "YulFunctionCall",
																"src": "10345:149:9"
															},
															"nativeSrc": "10345:149:9",
															"nodeType": "YulExpressionStatement",
															"src": "10345:149:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$971_memory_ptr__to_t_struct$_ExactInputSingleParams_$971_memory_ptr__fromStack_reversed",
												"nativeSrc": "10122:379:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10270:9:9",
														"nodeType": "YulTypedName",
														"src": "10270:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10282:6:9",
														"nodeType": "YulTypedName",
														"src": "10282:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10293:4:9",
														"nodeType": "YulTypedName",
														"src": "10293:4:9",
														"type": ""
													}
												],
												"src": "10122:379:9"
											},
											{
												"body": {
													"nativeSrc": "10570:80:9",
													"nodeType": "YulBlock",
													"src": "10570:80:9",
													"statements": [
														{
															"nativeSrc": "10580:22:9",
															"nodeType": "YulAssignment",
															"src": "10580:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10595:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10595:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10589:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10589:5:9"
																},
																"nativeSrc": "10589:13:9",
																"nodeType": "YulFunctionCall",
																"src": "10589:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10580:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10580:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10638:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10638:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10611:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "10611:26:9"
																},
																"nativeSrc": "10611:33:9",
																"nodeType": "YulFunctionCall",
																"src": "10611:33:9"
															},
															"nativeSrc": "10611:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "10611:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10507:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10548:6:9",
														"nodeType": "YulTypedName",
														"src": "10548:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10556:3:9",
														"nodeType": "YulTypedName",
														"src": "10556:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10564:5:9",
														"nodeType": "YulTypedName",
														"src": "10564:5:9",
														"type": ""
													}
												],
												"src": "10507:143:9"
											},
											{
												"body": {
													"nativeSrc": "10733:274:9",
													"nodeType": "YulBlock",
													"src": "10733:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10779:83:9",
																"nodeType": "YulBlock",
																"src": "10779:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10781:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "10781:77:9"
																			},
																			"nativeSrc": "10781:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10781:79:9"
																		},
																		"nativeSrc": "10781:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10781:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10754:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10754:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10763:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10763:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10750:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10750:3:9"
																		},
																		"nativeSrc": "10750:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10750:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10775:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10775:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10746:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10746:3:9"
																},
																"nativeSrc": "10746:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10746:32:9"
															},
															"nativeSrc": "10743:119:9",
															"nodeType": "YulIf",
															"src": "10743:119:9"
														},
														{
															"nativeSrc": "10872:128:9",
															"nodeType": "YulBlock",
															"src": "10872:128:9",
															"statements": [
																{
																	"nativeSrc": "10887:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10887:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10901:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10901:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10891:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10891:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10916:74:9",
																	"nodeType": "YulAssignment",
																	"src": "10916:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10962:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10962:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10973:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10973:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10958:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10958:3:9"
																				},
																				"nativeSrc": "10958:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10958:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10982:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10982:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10926:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "10926:31:9"
																		},
																		"nativeSrc": "10926:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10926:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10916:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10916:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10656:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10703:9:9",
														"nodeType": "YulTypedName",
														"src": "10703:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10714:7:9",
														"nodeType": "YulTypedName",
														"src": "10714:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10726:6:9",
														"nodeType": "YulTypedName",
														"src": "10726:6:9",
														"type": ""
													}
												],
												"src": "10656:351:9"
											},
											{
												"body": {
													"nativeSrc": "11139:206:9",
													"nodeType": "YulBlock",
													"src": "11139:206:9",
													"statements": [
														{
															"nativeSrc": "11149:26:9",
															"nodeType": "YulAssignment",
															"src": "11149:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11161:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11161:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11172:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11172:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11157:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11157:3:9"
																},
																"nativeSrc": "11157:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11157:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11149:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11149:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11229:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11229:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11242:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11242:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11253:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11253:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11238:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11238:3:9"
																		},
																		"nativeSrc": "11238:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11185:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11185:43:9"
																},
																"nativeSrc": "11185:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11185:71:9"
															},
															"nativeSrc": "11185:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11185:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11310:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11310:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11323:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11323:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11334:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11334:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11319:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:9"
																		},
																		"nativeSrc": "11319:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11266:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11266:43:9"
																},
																"nativeSrc": "11266:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11266:72:9"
															},
															"nativeSrc": "11266:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11266:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11013:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11103:9:9",
														"nodeType": "YulTypedName",
														"src": "11103:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11115:6:9",
														"nodeType": "YulTypedName",
														"src": "11115:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11123:6:9",
														"nodeType": "YulTypedName",
														"src": "11123:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11134:4:9",
														"nodeType": "YulTypedName",
														"src": "11134:4:9",
														"type": ""
													}
												],
												"src": "11013:332:9"
											},
											{
												"body": {
													"nativeSrc": "11449:124:9",
													"nodeType": "YulBlock",
													"src": "11449:124:9",
													"statements": [
														{
															"nativeSrc": "11459:26:9",
															"nodeType": "YulAssignment",
															"src": "11459:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11471:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11471:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11482:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11482:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11467:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11467:3:9"
																},
																"nativeSrc": "11467:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11467:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11459:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11459:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11539:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11539:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11552:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11552:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11563:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11563:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11548:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11548:3:9"
																		},
																		"nativeSrc": "11548:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11548:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11495:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11495:43:9"
																},
																"nativeSrc": "11495:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11495:71:9"
															},
															"nativeSrc": "11495:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11495:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11351:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11421:9:9",
														"nodeType": "YulTypedName",
														"src": "11421:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11433:6:9",
														"nodeType": "YulTypedName",
														"src": "11433:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11444:4:9",
														"nodeType": "YulTypedName",
														"src": "11444:4:9",
														"type": ""
													}
												],
												"src": "11351:222:9"
											},
											{
												"body": {
													"nativeSrc": "11685:114:9",
													"nodeType": "YulBlock",
													"src": "11685:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11707:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11707:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11715:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11715:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11703:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11703:3:9"
																		},
																		"nativeSrc": "11703:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11703:14:9"
																	},
																	{
																		"hexValue": "43616e6e6f74207769746864726177207468652074617267657420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "11719:34:9",
																		"nodeType": "YulLiteral",
																		"src": "11719:34:9",
																		"type": "",
																		"value": "Cannot withdraw the target token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11696:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11696:6:9"
																},
																"nativeSrc": "11696:58:9",
																"nodeType": "YulFunctionCall",
																"src": "11696:58:9"
															},
															"nativeSrc": "11696:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "11696:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11775:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11775:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11783:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11783:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11771:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11771:3:9"
																		},
																		"nativeSrc": "11771:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11771:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "11788:3:9",
																		"nodeType": "YulLiteral",
																		"src": "11788:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11764:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11764:6:9"
																},
																"nativeSrc": "11764:28:9",
																"nodeType": "YulFunctionCall",
																"src": "11764:28:9"
															},
															"nativeSrc": "11764:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "11764:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52",
												"nativeSrc": "11579:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11677:6:9",
														"nodeType": "YulTypedName",
														"src": "11677:6:9",
														"type": ""
													}
												],
												"src": "11579:220:9"
											},
											{
												"body": {
													"nativeSrc": "11951:220:9",
													"nodeType": "YulBlock",
													"src": "11951:220:9",
													"statements": [
														{
															"nativeSrc": "11961:74:9",
															"nodeType": "YulAssignment",
															"src": "11961:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12027:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12027:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12032:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12032:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11968:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11968:58:9"
																},
																"nativeSrc": "11968:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11968:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11961:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11961:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12133:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12133:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52",
																	"nativeSrc": "12044:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12044:88:9"
																},
																"nativeSrc": "12044:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12044:93:9"
															},
															"nativeSrc": "12044:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12044:93:9"
														},
														{
															"nativeSrc": "12146:19:9",
															"nodeType": "YulAssignment",
															"src": "12146:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12157:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12157:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12162:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12162:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12153:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12153:3:9"
																},
																"nativeSrc": "12153:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12153:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12146:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12146:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11805:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11939:3:9",
														"nodeType": "YulTypedName",
														"src": "11939:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11947:3:9",
														"nodeType": "YulTypedName",
														"src": "11947:3:9",
														"type": ""
													}
												],
												"src": "11805:366:9"
											},
											{
												"body": {
													"nativeSrc": "12348:248:9",
													"nodeType": "YulBlock",
													"src": "12348:248:9",
													"statements": [
														{
															"nativeSrc": "12358:26:9",
															"nodeType": "YulAssignment",
															"src": "12358:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12370:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12370:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12381:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12381:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12366:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12366:3:9"
																},
																"nativeSrc": "12366:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12366:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12358:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12358:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12405:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12405:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12416:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12416:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12401:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12401:3:9"
																		},
																		"nativeSrc": "12401:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12401:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12424:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12424:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12430:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12430:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12420:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12420:3:9"
																		},
																		"nativeSrc": "12420:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12420:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12394:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12394:6:9"
																},
																"nativeSrc": "12394:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12394:47:9"
															},
															"nativeSrc": "12394:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12394:47:9"
														},
														{
															"nativeSrc": "12450:139:9",
															"nodeType": "YulAssignment",
															"src": "12450:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12584:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12584:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12458:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12458:124:9"
																},
																"nativeSrc": "12458:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12458:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12450:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12450:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12177:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12328:9:9",
														"nodeType": "YulTypedName",
														"src": "12328:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12343:4:9",
														"nodeType": "YulTypedName",
														"src": "12343:4:9",
														"type": ""
													}
												],
												"src": "12177:419:9"
											},
											{
												"body": {
													"nativeSrc": "12708:129:9",
													"nodeType": "YulBlock",
													"src": "12708:129:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12730:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12730:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12738:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12738:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12726:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12726:3:9"
																		},
																		"nativeSrc": "12726:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12726:14:9"
																	},
																	{
																		"hexValue": "43616e6e6f74207769746864726177205745544839206469726563746c792c20",
																		"kind": "string",
																		"nativeSrc": "12742:34:9",
																		"nodeType": "YulLiteral",
																		"src": "12742:34:9",
																		"type": "",
																		"value": "Cannot withdraw WETH9 directly, "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12719:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12719:6:9"
																},
																"nativeSrc": "12719:58:9",
																"nodeType": "YulFunctionCall",
																"src": "12719:58:9"
															},
															"nativeSrc": "12719:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "12719:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12798:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12798:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12806:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12806:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12794:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12794:3:9"
																		},
																		"nativeSrc": "12794:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12794:15:9"
																	},
																	{
																		"hexValue": "75736520776974686472617757455448",
																		"kind": "string",
																		"nativeSrc": "12811:18:9",
																		"nodeType": "YulLiteral",
																		"src": "12811:18:9",
																		"type": "",
																		"value": "use withdrawWETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12787:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12787:6:9"
																},
																"nativeSrc": "12787:43:9",
																"nodeType": "YulFunctionCall",
																"src": "12787:43:9"
															},
															"nativeSrc": "12787:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "12787:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0",
												"nativeSrc": "12602:235:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12700:6:9",
														"nodeType": "YulTypedName",
														"src": "12700:6:9",
														"type": ""
													}
												],
												"src": "12602:235:9"
											},
											{
												"body": {
													"nativeSrc": "12989:220:9",
													"nodeType": "YulBlock",
													"src": "12989:220:9",
													"statements": [
														{
															"nativeSrc": "12999:74:9",
															"nodeType": "YulAssignment",
															"src": "12999:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13065:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13065:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13070:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13070:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13006:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13006:58:9"
																},
																"nativeSrc": "13006:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13006:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12999:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12999:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13171:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0",
																	"nativeSrc": "13082:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13082:88:9"
																},
																"nativeSrc": "13082:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13082:93:9"
															},
															"nativeSrc": "13082:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13082:93:9"
														},
														{
															"nativeSrc": "13184:19:9",
															"nodeType": "YulAssignment",
															"src": "13184:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13195:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13195:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13200:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13200:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13191:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13191:3:9"
																},
																"nativeSrc": "13191:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13191:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13184:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13184:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12843:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12977:3:9",
														"nodeType": "YulTypedName",
														"src": "12977:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12985:3:9",
														"nodeType": "YulTypedName",
														"src": "12985:3:9",
														"type": ""
													}
												],
												"src": "12843:366:9"
											},
											{
												"body": {
													"nativeSrc": "13386:248:9",
													"nodeType": "YulBlock",
													"src": "13386:248:9",
													"statements": [
														{
															"nativeSrc": "13396:26:9",
															"nodeType": "YulAssignment",
															"src": "13396:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13408:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13408:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13419:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13419:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13404:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13404:3:9"
																},
																"nativeSrc": "13404:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13404:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13396:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13396:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13443:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13443:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13454:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13454:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13439:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13439:3:9"
																		},
																		"nativeSrc": "13439:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13439:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13462:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13462:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13468:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13468:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13458:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13458:3:9"
																		},
																		"nativeSrc": "13458:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13458:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13432:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13432:6:9"
																},
																"nativeSrc": "13432:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13432:47:9"
															},
															"nativeSrc": "13432:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13432:47:9"
														},
														{
															"nativeSrc": "13488:139:9",
															"nodeType": "YulAssignment",
															"src": "13488:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13622:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13622:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13496:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13496:124:9"
																},
																"nativeSrc": "13496:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13496:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13488:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13488:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13215:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13366:9:9",
														"nodeType": "YulTypedName",
														"src": "13366:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13381:4:9",
														"nodeType": "YulTypedName",
														"src": "13381:4:9",
														"type": ""
													}
												],
												"src": "13215:419:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$1047_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$1047_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$1047_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$1047__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$1047_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_uint24(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_ERC20_$799_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$799_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$971_memory_ptr_to_t_struct$_ExactInputSingleParams_$971_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$971_memory_ptr__to_t_struct$_ExactInputSingleParams_$971_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$971_memory_ptr_to_t_struct$_ExactInputSingleParams_$971_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw the target token\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw WETH9 directly, \")\n\n        mstore(add(memPtr, 32), \"use withdrawWETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1084": [
									{
										"length": 32,
										"start": 757
									},
									{
										"length": 32,
										"start": 1121
									},
									{
										"length": 32,
										"start": 1416
									}
								],
								"1087": [
									{
										"length": 32,
										"start": 946
									},
									{
										"length": 32,
										"start": 1722
									},
									{
										"length": 32,
										"start": 2223
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610094575f3560e01c8063ed88c68e11610058578063ed88c68e14610164578063f2fde38b1461016e578063f3fef3a314610196578063fc0c546a146101be578063fc4dd333146101e8576100a4565b806354cf2aeb146100a8578063715018a6146100d25780638da5cb5b146100e8578063c31c9c0714610112578063e4c3a8f81461013c576100a4565b366100a4576100a234610210565b005b5f80fd5b3480156100b3575f80fd5b506100bc610538565b6040516100c99190610b7f565b60405180910390f35b3480156100dd575f80fd5b506100e661054c565b005b3480156100f3575f80fd5b506100fc61055f565b6040516101099190610bd7565b60405180910390f35b34801561011d575f80fd5b50610126610586565b6040516101339190610c4b565b60405180910390f35b348015610147575f80fd5b50610162600480360381019061015d9190610c92565b6105aa565b005b61016c6105d3565b005b348015610179575f80fd5b50610194600480360381019061018f9190610ce7565b61062c565b005b3480156101a1575f80fd5b506101bc60048036038101906101b79190610d45565b6106b0565b005b3480156101c9575f80fd5b506101d26108ad565b6040516101df9190610da3565b60405180910390f35b3480156101f3575f80fd5b5061020e60048036038101906102099190610dbc565b6108d1565b005b5f8111610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610e41565b60405180910390fd5b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b1580156102ac575f80fd5b505af11580156102be573d5f803e3d5ffd5b505050505073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401610332929190610e6e565b6020604051808303815f875af115801561034e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103729190610eca565b505f60405180610100016040528073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020015f60149054906101000a900462ffffff1662ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200161012c426104319190610f22565b81526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389836040518263ffffffff1660e01b81526004016104b89190611031565b6020604051808303815f875af11580156104d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f8919061105f565b90507f4f73e5828387c436ef01a51b03853873e76d7a5551556837d452cbeb6f285cb5838260405161052b92919061108a565b60405180910390a1505050565b5f60149054906101000a900462ffffff1681565b610554610a13565b61055d5f610a9a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105b2610a13565b805f60146101000a81548162ffffff021916908362ffffff16021790555050565b6105dc34610210565b3373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c523460405161062291906110b1565b60405180910390a2565b610634610a13565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a4575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161069b9190610bd7565b60405180910390fd5b6106ad81610a9a565b50565b6106b8610a13565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073d9061113a565b60405180910390fd5b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf906111c8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610803929190610e6e565b6020604051808303815f875af115801561081f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108439190610eca565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040516108a191906110b1565b60405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108d9610a13565b73420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040161092691906110b1565b5f604051808303815f87803b15801561093d575f80fd5b505af115801561094f573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610996573d5f803e3d5ffd5b5073420000000000000000000000000000000000000673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb83604051610a0891906110b1565b60405180910390a350565b610a1b610b5b565b73ffffffffffffffffffffffffffffffffffffffff16610a3961055f565b73ffffffffffffffffffffffffffffffffffffffff1614610a9857610a5c610b5b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a8f9190610bd7565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f62ffffff82169050919050565b610b7981610b62565b82525050565b5f602082019050610b925f830184610b70565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bc182610b98565b9050919050565b610bd181610bb7565b82525050565b5f602082019050610bea5f830184610bc8565b92915050565b5f819050919050565b5f610c13610c0e610c0984610b98565b610bf0565b610b98565b9050919050565b5f610c2482610bf9565b9050919050565b5f610c3582610c1a565b9050919050565b610c4581610c2b565b82525050565b5f602082019050610c5e5f830184610c3c565b92915050565b5f80fd5b610c7181610b62565b8114610c7b575f80fd5b50565b5f81359050610c8c81610c68565b92915050565b5f60208284031215610ca757610ca6610c64565b5b5f610cb484828501610c7e565b91505092915050565b610cc681610bb7565b8114610cd0575f80fd5b50565b5f81359050610ce181610cbd565b92915050565b5f60208284031215610cfc57610cfb610c64565b5b5f610d0984828501610cd3565b91505092915050565b5f819050919050565b610d2481610d12565b8114610d2e575f80fd5b50565b5f81359050610d3f81610d1b565b92915050565b5f8060408385031215610d5b57610d5a610c64565b5b5f610d6885828601610cd3565b9250506020610d7985828601610d31565b9150509250929050565b5f610d8d82610c1a565b9050919050565b610d9d81610d83565b82525050565b5f602082019050610db65f830184610d94565b92915050565b5f60208284031215610dd157610dd0610c64565b5b5f610dde84828501610d31565b91505092915050565b5f82825260208201905092915050565b7f4d7573742073656e6420455448000000000000000000000000000000000000005f82015250565b5f610e2b600d83610de7565b9150610e3682610df7565b602082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b610e6881610d12565b82525050565b5f604082019050610e815f830185610bc8565b610e8e6020830184610e5f565b9392505050565b5f8115159050919050565b610ea981610e95565b8114610eb3575f80fd5b50565b5f81519050610ec481610ea0565b92915050565b5f60208284031215610edf57610ede610c64565b5b5f610eec84828501610eb6565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f2c82610d12565b9150610f3783610d12565b9250828201905080821115610f4f57610f4e610ef5565b5b92915050565b610f5e81610bb7565b82525050565b610f6d81610b62565b82525050565b610f7c81610d12565b82525050565b610f8b81610b98565b82525050565b61010082015f820151610fa65f850182610f55565b506020820151610fb96020850182610f55565b506040820151610fcc6040850182610f64565b506060820151610fdf6060850182610f55565b506080820151610ff26080850182610f73565b5060a082015161100560a0850182610f73565b5060c082015161101860c0850182610f73565b5060e082015161102b60e0850182610f82565b50505050565b5f610100820190506110455f830184610f91565b92915050565b5f8151905061105981610d1b565b92915050565b5f6020828403121561107457611073610c64565b5b5f6110818482850161104b565b91505092915050565b5f60408201905061109d5f830185610e5f565b6110aa6020830184610e5f565b9392505050565b5f6020820190506110c45f830184610e5f565b92915050565b7f43616e6e6f74207769746864726177207468652074617267657420746f6b656e5f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611124602183610de7565b915061112f826110ca565b604082019050919050565b5f6020820190508181035f83015261115181611118565b9050919050565b7f43616e6e6f74207769746864726177205745544839206469726563746c792c205f8201527f7573652077697468647261775745544800000000000000000000000000000000602082015250565b5f6111b2603083610de7565b91506111bd82611158565b604082019050919050565b5f6020820190508181035f8301526111df816111a6565b905091905056fea264697066735822122069b368b22ecc3b59547182fca88e25396aa7fe96aae6a22590b46935173c8b7764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xED88C68E GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xFC4DD333 EQ PUSH2 0x1E8 JUMPI PUSH2 0xA4 JUMP JUMPDEST DUP1 PUSH4 0x54CF2AEB EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xE4C3A8F8 EQ PUSH2 0x13C JUMPI PUSH2 0xA4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA4 JUMPI PUSH2 0xA2 CALLVALUE PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x5D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP2 GT PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C TIMESTAMP PUSH2 0x431 SWAP2 SWAP1 PUSH2 0xF22 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP PUSH32 0x4F73E5828387C436EF01A51B03853873E76D7A5551556837D452CBEB6F285CB5 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x52B SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x554 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x55D PUSH0 PUSH2 0xA9A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xA13 JUMP JUMPDEST DUP1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5DC CALLVALUE PUSH2 0x210 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x264F630D9EFA0D07053A31163641D9FCC0ADAFC9D9E76F1C37C2CE3A558D2C52 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x634 PUSH2 0xA13 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AD DUP2 PUSH2 0xA9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0xA13 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP1 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP3 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x843 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0xA13 JUMP JUMPDEST PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x94F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH20 0x4200000000000000000000000000000000000006 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xB5B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA39 PUSH2 0x55F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA98 JUMPI PUSH2 0xA5C PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH2 0xB62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB92 PUSH0 DUP4 ADD DUP5 PUSH2 0xB70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBC1 DUP3 PUSH2 0xB98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD1 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEA PUSH0 DUP4 ADD DUP5 PUSH2 0xBC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC13 PUSH2 0xC0E PUSH2 0xC09 DUP5 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC24 DUP3 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC35 DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC45 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH0 DUP4 ADD DUP5 PUSH2 0xC3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xB62 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8C DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA6 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB4 DUP5 DUP3 DUP6 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE1 DUP2 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD09 DUP5 DUP3 DUP6 ADD PUSH2 0xCD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP2 EQ PUSH2 0xD2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD3F DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD5B JUMPI PUSH2 0xD5A PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD68 DUP6 DUP3 DUP7 ADD PUSH2 0xCD3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD79 DUP6 DUP3 DUP7 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD8D DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9D DUP2 PUSH2 0xD83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xD31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2B PUSH1 0xD DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE58 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE81 PUSH0 DUP4 ADD DUP6 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xE8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA9 DUP2 PUSH2 0xE95 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEC4 DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDF JUMPI PUSH2 0xEDE PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEEC DUP5 DUP3 DUP6 ADD PUSH2 0xEB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF2C DUP3 PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP PUSH2 0xF37 DUP4 PUSH2 0xD12 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF4F JUMPI PUSH2 0xF4E PUSH2 0xEF5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF5E DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6D DUP2 PUSH2 0xB62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF7C DUP2 PUSH2 0xD12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xB98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xFA6 PUSH0 DUP6 ADD DUP3 PUSH2 0xF55 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFB9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF55 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFCC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF64 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFDF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF55 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xFF2 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF73 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1005 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF73 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1018 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xF73 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x102B PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xF82 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1045 PUSH0 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1059 DUP2 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH2 0x1073 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1081 DUP5 DUP3 DUP6 ADD PUSH2 0x104B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH0 DUP4 ADD DUP6 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x10AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C4 PUSH0 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207769746864726177207468652074617267657420746F6B656E PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1124 PUSH1 0x21 DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x112F DUP3 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1151 DUP2 PUSH2 0x1118 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207769746864726177205745544839206469726563746C792C20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7573652077697468647261775745544800000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B2 PUSH1 0x30 DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x11BD DUP3 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11DF DUP2 PUSH2 0x11A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xB368B22ECC3B59547182 0xFC 0xA8 DUP15 0x25 CODECOPY PUSH11 0xA7FE96AAE6A22590B46935 OR EXTCODECOPY DUP12 PUSH24 0x64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "502:2215:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2681:27;2698:9;2681:16;:27::i;:::-;502:2215;;;;;705:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;545:39:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2552:87;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1147:131;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1992:346:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;590:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2344:202;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1284:702;1362:1;1353:6;:10;1345:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;657:42;1392:21;;;1421:6;1392:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:42;1440:21;;;1470:10;1483:6;1440:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1501:48;1552:315;;;;;;;;657:42;1552:315;;;;;;1647:5;1552:315;;;;;;1672:7;;;;;;;;;;;1552:315;;;;;;1704:10;1552:315;;;;;;1756:3;1738:15;:21;;;;:::i;:::-;1552:315;;;;1783:6;1552:315;;;;1821:1;1552:315;;;;1855:1;1552:315;;;;;1501:366;;1878:17;1898:10;:27;;;1926:6;1898:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1878:55;;1948:31;1961:6;1969:9;1948:31;;;;;;;:::i;:::-;;;;;;;;1335:651;;1284:702;:::o;705:21::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;545:39:8:-;;;:::o;2552:87::-;1531:13:0;:11;:13::i;:::-;2625:7:8::1;2615;;:17;;;;;;;;;;;;;;;;;;2552:87:::0;:::o;1147:131::-;1190:27;1207:9;1190:16;:27::i;:::-;1249:10;1232:39;;;1261:9;1232:39;;;;;;:::i;:::-;;;;;;;;1147:131::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1992:346:8:-;1531:13:0;:11;:13::i;:::-;2096:5:8::1;2078:24;;:6;:24;;::::0;2070:70:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;657:42;2158:15;;:6;:15;;::::0;2150:76:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2242:6;2236:22;;;2259:10;2271:7;2236:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2315:6;2294:37;;2303:10;2294:37;;;2323:7;2294:37;;;;;;:::i;:::-;;;;;;;;1992:346:::0;;:::o;590:28::-;;;:::o;2344:202::-;1531:13:0;:11;:13::i;:::-;657:42:8::1;2410:22;;;2433:7;2410:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2459:10;2451:28;;:37;2480:7;2451:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;657:42;2503:36;;2512:10;2503:36;;;2531:7;2503:36;;;;;;:::i;:::-;;;;;;;;2344:202:::0;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;7:91:9:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:115::-;189:23;206:5;189:23;:::i;:::-;184:3;177:36;104:115;;:::o;225:218::-;316:4;354:2;343:9;339:18;331:26;;367:69;433:1;422:9;418:17;409:6;367:69;:::i;:::-;225:218;;;;:::o;449:126::-;486:7;526:42;519:5;515:54;504:65;;449:126;;;:::o;581:96::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;581:96;;;:::o;683:118::-;770:24;788:5;770:24;:::i;:::-;765:3;758:37;683:118;;:::o;807:222::-;900:4;938:2;927:9;923:18;915:26;;951:71;1019:1;1008:9;1004:17;995:6;951:71;:::i;:::-;807:222;;;;:::o;1035:60::-;1063:3;1084:5;1077:12;;1035:60;;;:::o;1101:142::-;1151:9;1184:53;1202:34;1211:24;1229:5;1211:24;:::i;:::-;1202:34;:::i;:::-;1184:53;:::i;:::-;1171:66;;1101:142;;;:::o;1249:126::-;1299:9;1332:37;1363:5;1332:37;:::i;:::-;1319:50;;1249:126;;;:::o;1381:146::-;1451:9;1484:37;1515:5;1484:37;:::i;:::-;1471:50;;1381:146;;;:::o;1533:171::-;1640:57;1691:5;1640:57;:::i;:::-;1635:3;1628:70;1533:171;;:::o;1710:262::-;1823:4;1861:2;1850:9;1846:18;1838:26;;1874:91;1962:1;1951:9;1947:17;1938:6;1874:91;:::i;:::-;1710:262;;;;:::o;2059:117::-;2168:1;2165;2158:12;2305:120;2377:23;2394:5;2377:23;:::i;:::-;2370:5;2367:34;2357:62;;2415:1;2412;2405:12;2357:62;2305:120;:::o;2431:137::-;2476:5;2514:6;2501:20;2492:29;;2530:32;2556:5;2530:32;:::i;:::-;2431:137;;;;:::o;2574:327::-;2632:6;2681:2;2669:9;2660:7;2656:23;2652:32;2649:119;;;2687:79;;:::i;:::-;2649:119;2807:1;2832:52;2876:7;2867:6;2856:9;2852:22;2832:52;:::i;:::-;2822:62;;2778:116;2574:327;;;;:::o;2907:122::-;2980:24;2998:5;2980:24;:::i;:::-;2973:5;2970:35;2960:63;;3019:1;3016;3009:12;2960:63;2907:122;:::o;3035:139::-;3081:5;3119:6;3106:20;3097:29;;3135:33;3162:5;3135:33;:::i;:::-;3035:139;;;;:::o;3180:329::-;3239:6;3288:2;3276:9;3267:7;3263:23;3259:32;3256:119;;;3294:79;;:::i;:::-;3256:119;3414:1;3439:53;3484:7;3475:6;3464:9;3460:22;3439:53;:::i;:::-;3429:63;;3385:117;3180:329;;;;:::o;3515:77::-;3552:7;3581:5;3570:16;;3515:77;;;:::o;3598:122::-;3671:24;3689:5;3671:24;:::i;:::-;3664:5;3661:35;3651:63;;3710:1;3707;3700:12;3651:63;3598:122;:::o;3726:139::-;3772:5;3810:6;3797:20;3788:29;;3826:33;3853:5;3826:33;:::i;:::-;3726:139;;;;:::o;3871:474::-;3939:6;3947;3996:2;3984:9;3975:7;3971:23;3967:32;3964:119;;;4002:79;;:::i;:::-;3964:119;4122:1;4147:53;4192:7;4183:6;4172:9;4168:22;4147:53;:::i;:::-;4137:63;;4093:117;4249:2;4275:53;4320:7;4311:6;4300:9;4296:22;4275:53;:::i;:::-;4265:63;;4220:118;3871:474;;;;;:::o;4351:139::-;4414:9;4447:37;4478:5;4447:37;:::i;:::-;4434:50;;4351:139;;;:::o;4496:157::-;4596:50;4640:5;4596:50;:::i;:::-;4591:3;4584:63;4496:157;;:::o;4659:248::-;4765:4;4803:2;4792:9;4788:18;4780:26;;4816:84;4897:1;4886:9;4882:17;4873:6;4816:84;:::i;:::-;4659:248;;;;:::o;4913:329::-;4972:6;5021:2;5009:9;5000:7;4996:23;4992:32;4989:119;;;5027:79;;:::i;:::-;4989:119;5147:1;5172:53;5217:7;5208:6;5197:9;5193:22;5172:53;:::i;:::-;5162:63;;5118:117;4913:329;;;;:::o;5248:169::-;5332:11;5366:6;5361:3;5354:19;5406:4;5401:3;5397:14;5382:29;;5248:169;;;;:::o;5423:163::-;5563:15;5559:1;5551:6;5547:14;5540:39;5423:163;:::o;5592:366::-;5734:3;5755:67;5819:2;5814:3;5755:67;:::i;:::-;5748:74;;5831:93;5920:3;5831:93;:::i;:::-;5949:2;5944:3;5940:12;5933:19;;5592:366;;;:::o;5964:419::-;6130:4;6168:2;6157:9;6153:18;6145:26;;6217:9;6211:4;6207:20;6203:1;6192:9;6188:17;6181:47;6245:131;6371:4;6245:131;:::i;:::-;6237:139;;5964:419;;;:::o;6389:118::-;6476:24;6494:5;6476:24;:::i;:::-;6471:3;6464:37;6389:118;;:::o;6513:332::-;6634:4;6672:2;6661:9;6657:18;6649:26;;6685:71;6753:1;6742:9;6738:17;6729:6;6685:71;:::i;:::-;6766:72;6834:2;6823:9;6819:18;6810:6;6766:72;:::i;:::-;6513:332;;;;;:::o;6851:90::-;6885:7;6928:5;6921:13;6914:21;6903:32;;6851:90;;;:::o;6947:116::-;7017:21;7032:5;7017:21;:::i;:::-;7010:5;7007:32;6997:60;;7053:1;7050;7043:12;6997:60;6947:116;:::o;7069:137::-;7123:5;7154:6;7148:13;7139:22;;7170:30;7194:5;7170:30;:::i;:::-;7069:137;;;;:::o;7212:345::-;7279:6;7328:2;7316:9;7307:7;7303:23;7299:32;7296:119;;;7334:79;;:::i;:::-;7296:119;7454:1;7479:61;7532:7;7523:6;7512:9;7508:22;7479:61;:::i;:::-;7469:71;;7425:125;7212:345;;;;:::o;7563:180::-;7611:77;7608:1;7601:88;7708:4;7705:1;7698:15;7732:4;7729:1;7722:15;7749:191;7789:3;7808:20;7826:1;7808:20;:::i;:::-;7803:25;;7842:20;7860:1;7842:20;:::i;:::-;7837:25;;7885:1;7882;7878:9;7871:16;;7906:3;7903:1;7900:10;7897:36;;;7913:18;;:::i;:::-;7897:36;7749:191;;;;:::o;7946:108::-;8023:24;8041:5;8023:24;:::i;:::-;8018:3;8011:37;7946:108;;:::o;8060:105::-;8135:23;8152:5;8135:23;:::i;:::-;8130:3;8123:36;8060:105;;:::o;8171:108::-;8248:24;8266:5;8248:24;:::i;:::-;8243:3;8236:37;8171:108;;:::o;8285:::-;8362:24;8380:5;8362:24;:::i;:::-;8357:3;8350:37;8285:108;;:::o;8493:1623::-;8668:6;8663:3;8659:16;8760:4;8753:5;8749:16;8743:23;8779:63;8836:4;8831:3;8827:14;8813:12;8779:63;:::i;:::-;8685:167;8938:4;8931:5;8927:16;8921:23;8957:63;9014:4;9009:3;9005:14;8991:12;8957:63;:::i;:::-;8862:168;9111:4;9104:5;9100:16;9094:23;9130:61;9185:4;9180:3;9176:14;9162:12;9130:61;:::i;:::-;9040:161;9288:4;9281:5;9277:16;9271:23;9307:63;9364:4;9359:3;9355:14;9341:12;9307:63;:::i;:::-;9211:169;9466:4;9459:5;9455:16;9449:23;9485:63;9542:4;9537:3;9533:14;9519:12;9485:63;:::i;:::-;9390:168;9644:4;9637:5;9633:16;9627:23;9663:63;9720:4;9715:3;9711:14;9697:12;9663:63;:::i;:::-;9568:168;9830:4;9823:5;9819:16;9813:23;9849:63;9906:4;9901:3;9897:14;9883:12;9849:63;:::i;:::-;9746:176;10017:4;10010:5;10006:16;10000:23;10036:63;10093:4;10088:3;10084:14;10070:12;10036:63;:::i;:::-;9932:177;8637:1479;8493:1623;;:::o;10122:379::-;10293:4;10331:3;10320:9;10316:19;10308:27;;10345:149;10491:1;10480:9;10476:17;10467:6;10345:149;:::i;:::-;10122:379;;;;:::o;10507:143::-;10564:5;10595:6;10589:13;10580:22;;10611:33;10638:5;10611:33;:::i;:::-;10507:143;;;;:::o;10656:351::-;10726:6;10775:2;10763:9;10754:7;10750:23;10746:32;10743:119;;;10781:79;;:::i;:::-;10743:119;10901:1;10926:64;10982:7;10973:6;10962:9;10958:22;10926:64;:::i;:::-;10916:74;;10872:128;10656:351;;;;:::o;11013:332::-;11134:4;11172:2;11161:9;11157:18;11149:26;;11185:71;11253:1;11242:9;11238:17;11229:6;11185:71;:::i;:::-;11266:72;11334:2;11323:9;11319:18;11310:6;11266:72;:::i;:::-;11013:332;;;;;:::o;11351:222::-;11444:4;11482:2;11471:9;11467:18;11459:26;;11495:71;11563:1;11552:9;11548:17;11539:6;11495:71;:::i;:::-;11351:222;;;;:::o;11579:220::-;11719:34;11715:1;11707:6;11703:14;11696:58;11788:3;11783:2;11775:6;11771:15;11764:28;11579:220;:::o;11805:366::-;11947:3;11968:67;12032:2;12027:3;11968:67;:::i;:::-;11961:74;;12044:93;12133:3;12044:93;:::i;:::-;12162:2;12157:3;12153:12;12146:19;;11805:366;;;:::o;12177:419::-;12343:4;12381:2;12370:9;12366:18;12358:26;;12430:9;12424:4;12420:20;12416:1;12405:9;12401:17;12394:47;12458:131;12584:4;12458:131;:::i;:::-;12450:139;;12177:419;;;:::o;12602:235::-;12742:34;12738:1;12730:6;12726:14;12719:58;12811:18;12806:2;12798:6;12794:15;12787:43;12602:235;:::o;12843:366::-;12985:3;13006:67;13070:2;13065:3;13006:67;:::i;:::-;12999:74;;13082:93;13171:3;13082:93;:::i;:::-;13200:2;13195:3;13191:12;13184:19;;12843:366;;;:::o;13215:419::-;13381:4;13419:2;13408:9;13404:18;13396:26;;13468:9;13462:4;13458:20;13454:1;13443:9;13439:17;13432:47;13496:131;13622:4;13496:131;:::i;:::-;13488:139;;13215:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "927200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"donate()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"setSwapFee(uint24)": "infinite",
								"swapFee()": "2517",
								"swapRouter()": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite",
								"withdrawWETH(uint256)": "infinite"
							},
							"internal": {
								"_swapETHForToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 944,
									"end": 1142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1027,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1075,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1076,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1076,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1106,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1107,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1107,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1135,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1124,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1117,
									"end": 1124,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFF"
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFF"
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1135,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 944,
									"end": 1142,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 936,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 936,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 929,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 910,
									"end": 930,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 899,
									"end": 930,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 899,
									"end": 930,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 936,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 936,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 936,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 936,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 942,
									"end": 1062,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 942,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1031,
									"end": 1036,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1014,
									"end": 1037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1037,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1007,
									"end": 1012,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 994,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 994,
									"end": 1056,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1042,
									"end": 1054,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 994,
									"end": 1056,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 994,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 942,
									"end": 1062,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 942,
									"end": 1062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1209,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1068,
									"end": 1209,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1124,
									"end": 1129,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1155,
									"end": 1161,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1162,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1162,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1197,
									"end": 1202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1171,
									"end": 1203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1203,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1171,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1209,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1209,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1209,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1209,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1876,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1215,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 1369,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1355,
									"end": 1364,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1353,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1365,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1338,
									"end": 1370,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1454,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1335,
									"end": 1454,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1373,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1373,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1373,
									"end": 1452,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1373,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1454,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1335,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1494,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1518,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1574,
									"end": 1581,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1565,
									"end": 1571,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1554,
									"end": 1563,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1572,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1518,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1518,
									"end": 1582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1518,
									"end": 1582,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1518,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1582,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1582,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1464,
									"end": 1592,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1631,
									"end": 1633,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1657,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1713,
									"end": 1720,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1704,
									"end": 1710,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1702,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1711,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1657,
									"end": 1721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1721,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1657,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1647,
									"end": 1721,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1647,
									"end": 1721,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1602,
									"end": 1731,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1770,
									"end": 1772,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1796,
									"end": 1859,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1851,
									"end": 1858,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1842,
									"end": 1848,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1831,
									"end": 1840,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1849,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 1859,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1796,
									"end": 1859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 1859,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1796,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1786,
									"end": 1859,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1786,
									"end": 1859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1741,
									"end": 1869,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1876,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1876,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1876,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1882,
									"end": 2000,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1882,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1969,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1987,
									"end": 1992,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1969,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1969,
									"end": 1993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1969,
									"end": 1993,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1969,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 1967,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 1994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1882,
									"end": 2000,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1882,
									"end": 2000,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1882,
									"end": 2000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2006,
									"end": 2228,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2006,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2099,
									"end": 2103,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2137,
									"end": 2139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2135,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2122,
									"end": 2140,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2114,
									"end": 2140,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2114,
									"end": 2140,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2150,
									"end": 2221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2218,
									"end": 2219,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2207,
									"end": 2216,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2203,
									"end": 2220,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2150,
									"end": 2221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2150,
									"end": 2221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2150,
									"end": 2221,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2150,
									"end": 2221,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2006,
									"end": 2228,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2006,
									"end": 2228,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2006,
									"end": 2228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2006,
									"end": 2228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2006,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1087"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1084"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 2717,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069b368b22ecc3b59547182fca88e25396aa7fe96aae6a22590b46935173c8b7764736f6c634300081a0033",
									".code": [
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "ED88C68E"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "ED88C68E"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "F3FEF3A3"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "FC4DD333"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "54CF2AEB"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "C31C9C07"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "E4C3A8F8"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2681,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 502,
											"end": 2717,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 705,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 545,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 545,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 545,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2552,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1147,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1992,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1992,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 590,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 590,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2344,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2344,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1986,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1284,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1363,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1345,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1345,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 657,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 1392,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1413,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "D0E30DB0"
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 657,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 1440,
											"end": 1461,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1461,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1461,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 1470,
											"end": 1480,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1084"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1440,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1440,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1501,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 657,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1087"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1714,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1759,
											"name": "PUSH",
											"source": 8,
											"value": "12C"
										},
										{
											"begin": 1738,
											"end": 1753,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1738,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1501,
											"end": 1867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1501,
											"end": 1867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1908,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1084"
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "414BF389"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1898,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1898,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1898,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "PUSH",
											"source": 8,
											"value": "4F73E5828387C436EF01A51B03853873E76D7A5551556837D452CBEB6F285CB5"
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1948,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1979,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1335,
											"end": 1986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1335,
											"end": 1986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 705,
											"end": 726,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 705,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1084"
										},
										{
											"begin": 545,
											"end": 584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1147,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1190,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1217,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1190,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1259,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "264F630D9EFA0D07053A31163641D9FCC0ADAFC9D9E76F1C37C2CE3A558D2C52"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1232,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1271,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1087"
										},
										{
											"begin": 2078,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2084,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2070,
											"end": 2140,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2070,
											"end": 2140,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 657,
											"end": 699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 2158,
											"end": 2173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2158,
											"end": 2173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2158,
											"end": 2173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2150,
											"end": 2226,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2150,
											"end": 2226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2258,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 2259,
											"end": 2269,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2278,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2236,
											"end": 2279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2279,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2236,
											"end": 2279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2321,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2313,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 2323,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2294,
											"end": 2331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2331,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1087"
										},
										{
											"begin": 590,
											"end": 618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 590,
											"end": 618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 2410,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2433,
											"end": 2440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2410,
											"end": 2441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2469,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 2480,
											"end": 2487,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2488,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 657,
											"end": 699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4200000000000000000000000000000000000006"
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2512,
											"end": 2522,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 2531,
											"end": 2538,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2503,
											"end": 2539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 98,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 7,
											"end": 98,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 91,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 72,
											"end": 92,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 61,
											"end": 92,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 92,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 98,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 98,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 98,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 104,
											"end": 219,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 104,
											"end": 219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 206,
											"end": 211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 189,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 189,
											"end": 212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 189,
											"end": 212,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 189,
											"end": 212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 177,
											"end": 213,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 104,
											"end": 219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 104,
											"end": 219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 225,
											"end": 443,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 225,
											"end": 443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 331,
											"end": 357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 418,
											"end": 435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 409,
											"end": 415,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 367,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 367,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 367,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 225,
											"end": 443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 225,
											"end": 443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 449,
											"end": 575,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 449,
											"end": 575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 486,
											"end": 493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 515,
											"end": 569,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 504,
											"end": 569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 504,
											"end": 569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 449,
											"end": 575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 449,
											"end": 575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 449,
											"end": 575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 449,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 677,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 581,
											"end": 677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 618,
											"end": 625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 647,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 647,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 671,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 647,
											"end": 671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 636,
											"end": 671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 636,
											"end": 671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 677,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 581,
											"end": 677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 581,
											"end": 677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 683,
											"end": 801,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 683,
											"end": 801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 788,
											"end": 793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 770,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 770,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 770,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 795,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 683,
											"end": 801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 683,
											"end": 801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 683,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 915,
											"end": 941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 915,
											"end": 941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 951,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 951,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 1029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1211,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1202,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1202,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1184,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1332,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1319,
											"end": 1369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1319,
											"end": 1369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1527,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1381,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1484,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1521,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1484,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1704,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1533,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 1691,
											"end": 1696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1640,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1697,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 1640,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1972,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1710,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1823,
											"end": 1827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1874,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1972,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1972,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2176,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2059,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2170,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2305,
											"end": 2425,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2305,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2377,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2400,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2377,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2417,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2305,
											"end": 2425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2305,
											"end": 2425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2568,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2431,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2521,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2530,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2568,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2568,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2901,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2574,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2679,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2684,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2687,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2876,
											"end": 2883,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2865,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2832,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2884,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2901,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2901,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 3029,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2907,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2980,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 2978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2960,
											"end": 3023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3017,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3021,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 3023,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2960,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 3029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 3029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3174,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3035,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3097,
											"end": 3126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3097,
											"end": 3126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3162,
											"end": 3167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3135,
											"end": 3168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3174,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3509,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3180,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3286,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3291,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3375,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3256,
											"end": 3375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3294,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3294,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3373,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3294,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3375,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3256,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3484,
											"end": 3491,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3460,
											"end": 3482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3439,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3492,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3439,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3509,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3592,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3515,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3598,
											"end": 3720,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3598,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3671,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3664,
											"end": 3669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3651,
											"end": 3714,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3714,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3651,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3598,
											"end": 3720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3598,
											"end": 3720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3797,
											"end": 3817,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3826,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3859,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3826,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 4345,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3871,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3953,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 3998,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 3993,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3994,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4083,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3964,
											"end": 4083,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4002,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4002,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4081,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4002,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4083,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3964,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4147,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4192,
											"end": 4199,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4181,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4147,
											"end": 4200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4200,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4147,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4200,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4320,
											"end": 4327,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4300,
											"end": 4309,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4296,
											"end": 4318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4275,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4275,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4275,
											"end": 4328,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4275,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 4345,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 4345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 4345,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 4345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 4345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 4345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4490,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4351,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4447,
											"end": 4484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4653,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4496,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4596,
											"end": 4646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4646,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4596,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4907,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4659,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4816,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4886,
											"end": 4895,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4873,
											"end": 4879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4816,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4816,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4816,
											"end": 4900,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4816,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4907,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4907,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 5242,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4913,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5009,
											"end": 5018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5007,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5019,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4992,
											"end": 5024,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5108,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4989,
											"end": 5108,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5027,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5027,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5027,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5027,
											"end": 5106,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5027,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4989,
											"end": 5108,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4989,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5147,
											"end": 5148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5206,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5172,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5172,
											"end": 5225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5172,
											"end": 5225,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5172,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 5242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 5242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 5242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 5242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 5242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5417,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5248,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5417,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5423,
											"end": 5586,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5423,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5563,
											"end": 5578,
											"name": "PUSH",
											"source": 9,
											"value": "4D7573742073656E642045544800000000000000000000000000000000000000"
										},
										{
											"begin": 5559,
											"end": 5560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5423,
											"end": 5586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5423,
											"end": 5586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5958,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5592,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5734,
											"end": 5737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5814,
											"end": 5817,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5755,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5755,
											"end": 5822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5755,
											"end": 5822,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5755,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5748,
											"end": 5822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5748,
											"end": 5822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5920,
											"end": 5923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5831,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 5924,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5831,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 5952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 5952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5964,
											"end": 6383,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5964,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6170,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6215,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6207,
											"end": 6227,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6181,
											"end": 6228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6371,
											"end": 6375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6245,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6245,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6237,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6237,
											"end": 6376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5964,
											"end": 6383,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5964,
											"end": 6383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5964,
											"end": 6383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5964,
											"end": 6383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6507,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6389,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 6494,
											"end": 6499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6476,
											"end": 6500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6464,
											"end": 6501,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6507,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6507,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6845,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6513,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6661,
											"end": 6670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6753,
											"end": 6754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6751,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6735,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6685,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6756,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6685,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6834,
											"end": 6836,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6823,
											"end": 6832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6766,
											"end": 6838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6838,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6766,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6845,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6845,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6941,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6851,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6885,
											"end": 6892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6928,
											"end": 6933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6934,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 6935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6941,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6947,
											"end": 7063,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6947,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7032,
											"end": 7037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7017,
											"end": 7038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7038,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7017,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7010,
											"end": 7015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7007,
											"end": 7039,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6997,
											"end": 7057,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7053,
											"end": 7054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7055,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7057,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6997,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6947,
											"end": 7063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6947,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7069,
											"end": 7206,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7069,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7123,
											"end": 7128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7148,
											"end": 7161,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7194,
											"end": 7199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7170,
											"end": 7200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7200,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7170,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7069,
											"end": 7206,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7069,
											"end": 7206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7069,
											"end": 7206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7069,
											"end": 7206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7069,
											"end": 7206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7557,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 7212,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7330,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7316,
											"end": 7325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7307,
											"end": 7314,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7303,
											"end": 7326,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7331,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7415,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 7296,
											"end": 7415,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7334,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 7334,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7334,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7334,
											"end": 7413,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 7334,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7415,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 7296,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 7532,
											"end": 7539,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7523,
											"end": 7529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7521,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7479,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7540,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 7479,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7425,
											"end": 7550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7557,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7212,
											"end": 7557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7563,
											"end": 7743,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 7563,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7712,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7705,
											"end": 7706,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7698,
											"end": 7713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7736,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7729,
											"end": 7730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7940,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 7749,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7789,
											"end": 7792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7826,
											"end": 7827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7808,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7808,
											"end": 7828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7808,
											"end": 7828,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7808,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 7860,
											"end": 7861,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7842,
											"end": 7862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7862,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 7842,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7837,
											"end": 7862,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7837,
											"end": 7862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7886,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 7887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 7887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7906,
											"end": 7909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 7910,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7897,
											"end": 7933,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7897,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7897,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 7913,
											"end": 7931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7897,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7897,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7940,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 8054,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 7946,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 8041,
											"end": 8046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 8023,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8047,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 8023,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8018,
											"end": 8021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8011,
											"end": 8048,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 8054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 8054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 8054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8060,
											"end": 8165,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 8060,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 8152,
											"end": 8157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 8135,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8130,
											"end": 8133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8060,
											"end": 8165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8060,
											"end": 8165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8060,
											"end": 8165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8279,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 8171,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 8266,
											"end": 8271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 8248,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8272,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 8248,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8236,
											"end": 8273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8393,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 8285,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 8380,
											"end": 8385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 8362,
											"end": 8386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8386,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 8362,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8350,
											"end": 8387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 10116,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 8493,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8674,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8659,
											"end": 8675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8749,
											"end": 8765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8743,
											"end": 8766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8831,
											"end": 8834,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8827,
											"end": 8841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 8779,
											"end": 8842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8842,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8779,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 8942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8931,
											"end": 8936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8921,
											"end": 8944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 9014,
											"end": 9018,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9009,
											"end": 9012,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9005,
											"end": 9019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 8957,
											"end": 9020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9020,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8957,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 9030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9111,
											"end": 9115,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9104,
											"end": 9109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 9185,
											"end": 9189,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9180,
											"end": 9183,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9176,
											"end": 9190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9162,
											"end": 9174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 9130,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 9130,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9281,
											"end": 9286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9277,
											"end": 9293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 9364,
											"end": 9368,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9359,
											"end": 9362,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9355,
											"end": 9369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9307,
											"end": 9370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9370,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 9307,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9211,
											"end": 9380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9470,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9459,
											"end": 9464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9455,
											"end": 9471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9472,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 9542,
											"end": 9546,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 9485,
											"end": 9548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9548,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 9485,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9644,
											"end": 9648,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 9637,
											"end": 9642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9633,
											"end": 9649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9627,
											"end": 9650,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 9720,
											"end": 9724,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 9715,
											"end": 9718,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9711,
											"end": 9725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9709,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 9663,
											"end": 9726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9726,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 9663,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9830,
											"end": 9834,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 9823,
											"end": 9828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9819,
											"end": 9835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9836,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9897,
											"end": 9911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 9849,
											"end": 9912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9912,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 9849,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9746,
											"end": 9922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10021,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10010,
											"end": 10015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10006,
											"end": 10022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10000,
											"end": 10023,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 10093,
											"end": 10097,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10088,
											"end": 10091,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 10036,
											"end": 10099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10099,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 10036,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9932,
											"end": 10109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 10116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10501,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 10122,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10293,
											"end": 10297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10334,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10320,
											"end": 10329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10316,
											"end": 10335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10491,
											"end": 10492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10480,
											"end": 10489,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10467,
											"end": 10473,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 10345,
											"end": 10494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10494,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10345,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10501,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10501,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10650,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 10507,
											"end": 10650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10564,
											"end": 10569,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10601,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 10602,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10580,
											"end": 10602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10580,
											"end": 10602,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 10638,
											"end": 10643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 10611,
											"end": 10644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10644,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 10611,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10650,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10650,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 11007,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 10656,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10775,
											"end": 10777,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10763,
											"end": 10772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10761,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10750,
											"end": 10773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10778,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10743,
											"end": 10862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10743,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 10743,
											"end": 10862,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10781,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 10781,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 10781,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10781,
											"end": 10860,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 10781,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10743,
											"end": 10862,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 10743,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10926,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 10982,
											"end": 10989,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10958,
											"end": 10980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10926,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 10926,
											"end": 10990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10926,
											"end": 10990,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 10926,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 10990,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 10990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10872,
											"end": 11000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 11007,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 11007,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 11007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 11007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10656,
											"end": 11007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11345,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 11013,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11134,
											"end": 11138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11172,
											"end": 11174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11170,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11157,
											"end": 11175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11185,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11253,
											"end": 11254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11238,
											"end": 11255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11229,
											"end": 11235,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11185,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 11185,
											"end": 11256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11185,
											"end": 11256,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11185,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 11334,
											"end": 11336,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11319,
											"end": 11337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11310,
											"end": 11316,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 11266,
											"end": 11338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11266,
											"end": 11338,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 11266,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11345,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11345,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11573,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 11351,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11444,
											"end": 11448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11484,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11471,
											"end": 11480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11459,
											"end": 11485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11459,
											"end": 11485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11495,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 11563,
											"end": 11564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11552,
											"end": 11561,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11548,
											"end": 11565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11545,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11495,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 11495,
											"end": 11566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11495,
											"end": 11566,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 11495,
											"end": 11566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11573,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11579,
											"end": 11799,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 11579,
											"end": 11799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11719,
											"end": 11753,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F74207769746864726177207468652074617267657420746F6B656E"
										},
										{
											"begin": 11715,
											"end": 11716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11703,
											"end": 11717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 11791,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11783,
											"end": 11785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11775,
											"end": 11781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11771,
											"end": 11786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11764,
											"end": 11792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11579,
											"end": 11799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11579,
											"end": 11799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 12171,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11805,
											"end": 12171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11968,
											"end": 12035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 12027,
											"end": 12030,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11968,
											"end": 12035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 11968,
											"end": 12035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11968,
											"end": 12035,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 11968,
											"end": 12035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12044,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 12133,
											"end": 12136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12044,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12044,
											"end": 12137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12044,
											"end": 12137,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 12044,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12162,
											"end": 12164,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12153,
											"end": 12165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12146,
											"end": 12165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12146,
											"end": 12165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 12171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 12171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 12171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 12171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12177,
											"end": 12596,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 12177,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12343,
											"end": 12347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12381,
											"end": 12383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12370,
											"end": 12379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12366,
											"end": 12384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12358,
											"end": 12384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12358,
											"end": 12384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12430,
											"end": 12439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12428,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12420,
											"end": 12440,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12417,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12394,
											"end": 12441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 12584,
											"end": 12588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12458,
											"end": 12589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12589,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 12458,
											"end": 12589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12450,
											"end": 12589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12450,
											"end": 12589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12177,
											"end": 12596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12177,
											"end": 12596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12177,
											"end": 12596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12177,
											"end": 12596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12602,
											"end": 12837,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 12602,
											"end": 12837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12742,
											"end": 12776,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F74207769746864726177205745544839206469726563746C792C20"
										},
										{
											"begin": 12738,
											"end": 12739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12719,
											"end": 12777,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12811,
											"end": 12829,
											"name": "PUSH",
											"source": 9,
											"value": "7573652077697468647261775745544800000000000000000000000000000000"
										},
										{
											"begin": 12806,
											"end": 12808,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12798,
											"end": 12804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12794,
											"end": 12809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12787,
											"end": 12830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12602,
											"end": 12837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12602,
											"end": 12837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12843,
											"end": 13209,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 12843,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12985,
											"end": 12988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13006,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 13070,
											"end": 13072,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 13065,
											"end": 13068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13006,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 13006,
											"end": 13073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13006,
											"end": 13073,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 13006,
											"end": 13073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12999,
											"end": 13073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12999,
											"end": 13073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 13171,
											"end": 13174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 13082,
											"end": 13175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13175,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 13082,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13200,
											"end": 13202,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13195,
											"end": 13198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13191,
											"end": 13203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12843,
											"end": 13209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12843,
											"end": 13209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12843,
											"end": 13209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12843,
											"end": 13209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13634,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 13215,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13381,
											"end": 13385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13419,
											"end": 13421,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13408,
											"end": 13417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13404,
											"end": 13422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13396,
											"end": 13422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13396,
											"end": 13422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13468,
											"end": 13477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13462,
											"end": 13466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13458,
											"end": 13478,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13454,
											"end": 13455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13443,
											"end": 13452,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13432,
											"end": 13479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 13622,
											"end": 13626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 13496,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13627,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 13496,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/build_bounty/prototype/auto_swap_build.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate()": "ed88c68e",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setSwapFee(uint24)": "e4c3a8f8",
							"swapFee()": "54cf2aeb",
							"swapRouter()": "c31c9c07",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawWETH(uint256)": "fc4dd333"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_swapFee\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"DonationReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_newFee\",\"type\":\"uint24\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/build_bounty/prototype/auto_swap_build.sol\":\"AutoSwapDonation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/build_bounty/prototype/auto_swap_build.sol\":{\"keccak256\":\"0xef482b07559cd24f5c8662b1dbd436da00af639443cdc217d6deb38eaec80001\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d157b0d2edc84a0ee90a0cdf6af4bb3f2ab21ea84b160a5f1499190ce18a820\",\"dweb:/ipfs/QmWAPLWDqFJE4EkARchNYYhkZPk2C3NUUDi1oe2UghDz2F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/build_bounty/prototype/auto_swap_build.sol:AutoSwapDonation",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1092,
								"contract": "contracts/build_bounty/prototype/auto_swap_build.sol:AutoSwapDonation",
								"label": "swapFee",
								"offset": 20,
								"slot": "0",
								"type": "t_uint24"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint24": {
								"encoding": "inplace",
								"label": "uint24",
								"numberOfBytes": "3"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWETH9": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/build_bounty/prototype/auto_swap_build.sol\":\"IWETH9\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/build_bounty/prototype/auto_swap_build.sol\":{\"keccak256\":\"0xef482b07559cd24f5c8662b1dbd436da00af639443cdc217d6deb38eaec80001\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d157b0d2edc84a0ee90a0cdf6af4bb3f2ab21ea84b160a5f1499190ce18a820\",\"dweb:/ipfs/QmWAPLWDqFJE4EkARchNYYhkZPk2C3NUUDi1oe2UghDz2F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							947
						]
					},
					"id": 948,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:6",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 947,
							"linearizedBaseContracts": [
								947
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:6",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1197:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 938,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1226:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 940,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1255:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:6"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:6"
									},
									"scope": 947,
									"src": "1157:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 948,
							"src": "215:1077:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:6"
				},
				"id": 6
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							1047
						],
						"IUniswapV3SwapCallback": [
							947
						]
					},
					"id": 1048,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 949,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"id": 950,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:7"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 951,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 948,
							"src": "91:83:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 953,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 947,
										"src": "305:22:7"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:7"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:7",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 1047,
							"linearizedBaseContracts": [
								1047,
								947
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 971,
									"members": [
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "374:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 955,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 958,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "399:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 957,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "425:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 959,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "445:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 961,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 964,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "472:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 963,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "498:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 965,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 968,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "524:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 967,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "558:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 969,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "334:256:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:7",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "877:38:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 973,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "877:22:7"
													},
													"referencedDeclaration": 971,
													"src": "877:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:7"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "943:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:7"
									},
									"scope": 1047,
									"src": "851:111:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 991,
									"members": [
										{
											"constant": false,
											"id": 982,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1002:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 981,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 984,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1022:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 983,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 986,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1049:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 985,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1075:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 987,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1101:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "968:164:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:7",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1436:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$991_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 993,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 991,
														"src": "1436:16:7"
													},
													"referencedDeclaration": 991,
													"src": "1436:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$991_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:7"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1496:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:7"
									},
									"scope": 1047,
									"src": "1416:99:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 1017,
									"members": [
										{
											"constant": false,
											"id": 1002,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1562:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1001,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1004,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1587:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1003,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1006,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1613:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1005,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1008,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1633:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1007,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1010,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1660:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1009,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1012,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1686:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1014,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1713:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1013,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1016,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1746:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1015,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "1521:257:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:7",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2066:39:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1017_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 1020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1019,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "2066:23:7"
													},
													"referencedDeclaration": 1017,
													"src": "2066:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1017_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2133:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:7"
									},
									"scope": 1047,
									"src": "2039:112:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 1037,
									"members": [
										{
											"constant": false,
											"id": 1028,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2192:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1027,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1030,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2212:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1029,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1032,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2239:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1031,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1034,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2265:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1033,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1036,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2292:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "2157:165:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:7",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2638:33:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$1037_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 1040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1039,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1037,
														"src": "2638:17:7"
													},
													"referencedDeclaration": 1037,
													"src": "2638:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$1037_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:7"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2699:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:7"
									},
									"scope": 1047,
									"src": "2617:100:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1048,
							"src": "280:2439:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:7"
				},
				"id": 7
			},
			"contracts/build_bounty/prototype/auto_swap_build.sol": {
				"ast": {
					"absolutePath": "contracts/build_bounty/prototype/auto_swap_build.sol",
					"exportedSymbols": {
						"AutoSwapDonation": [
							1322
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"ISwapRouter": [
							1047
						],
						"IUniswapV3SwapCallback": [
							947
						],
						"IWETH9": [
							1079
						],
						"Ownable": [
							147
						]
					},
					"id": 1323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1049,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 1050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 1048,
							"src": "58:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 800,
							"src": "127:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 148,
							"src": "183:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "IWETH9",
							"nameLocation": "247:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "269:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:2:8"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:0:8"
									},
									"scope": 1079,
									"src": "260:36:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "310:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "319:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:9:8"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:0:8"
									},
									"scope": 1079,
									"src": "301:36:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "351:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "367:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "359:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "384:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "376:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:33:8"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "410:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:6:8"
									},
									"scope": 1079,
									"src": "342:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "430:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "447:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "439:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "466:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "458:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:35:8"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "492:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "492:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:6:8"
									},
									"scope": 1079,
									"src": "421:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1323,
							"src": "237:263:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1080,
										"name": "Ownable",
										"nameLocations": [
											"531:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "531:7:8"
									},
									"id": 1081,
									"nodeType": "InheritanceSpecifier",
									"src": "531:7:8"
								}
							],
							"canonicalName": "AutoSwapDonation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1322,
							"linearizedBaseContracts": [
								1322,
								147,
								933
							],
							"name": "AutoSwapDonation",
							"nameLocation": "511:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 1084,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "574:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1322,
									"src": "545:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$1047",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 1083,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1082,
											"name": "ISwapRouter",
											"nameLocations": [
												"545:11:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1047,
											"src": "545:11:8"
										},
										"referencedDeclaration": 1047,
										"src": "545:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$1047",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1087,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "613:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1322,
									"src": "590:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1086,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1085,
											"name": "ERC20",
											"nameLocations": [
												"590:5:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "590:5:8"
										},
										"referencedDeclaration": 799,
										"src": "590:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1090,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "649:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1322,
									"src": "624:75:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1088,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
										"id": 1089,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "657:42:8",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4200000000000000000000000000000000000006"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "54cf2aeb",
									"id": 1092,
									"mutability": "mutable",
									"name": "swapFee",
									"nameLocation": "719:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1322,
									"src": "705:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 1091,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "705:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c52",
									"id": 1098,
									"name": "DonationReceived",
									"nameLocation": "739:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "772:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "756:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "787:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "779:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:42:8"
									},
									"src": "733:65:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4f73e5828387c436ef01a51b03853873e76d7a5551556837d452cbeb6f285cb5",
									"id": 1104,
									"name": "SwapExecuted",
									"nameLocation": "809:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "830:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "822:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "848:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "840:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:37:8"
									},
									"src": "803:56:8"
								},
								{
									"anonymous": false,
									"eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
									"id": 1112,
									"name": "Withdraw",
									"nameLocation": "870:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "895:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "879:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "899:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "930:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "922:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:59:8"
									},
									"src": "864:74:8"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "1029:113:8",
										"statements": [
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1125,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1039:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1047",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1127,
																"name": "_swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "1064:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1126,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1052:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1047_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1052:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1047",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "1039:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1047",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "1039:37:8"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "1086:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1133,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1100:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1132,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "1094:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1094:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "1086:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "1086:21:8"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1137,
														"name": "swapFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "1117:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1138,
														"name": "_swapFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "1127:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "1117:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "1117:18:8"
											}
										]
									},
									"id": 1142,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1017:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1021:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1017:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1123,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1120,
												"name": "Ownable",
												"nameLocations": [
													"1009:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1009:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1009:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "964:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "956:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "980:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "972:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_swapFee",
												"nameLocation": "1000:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "993:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1117,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:54:8"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:0:8"
									},
									"scope": 1322,
									"src": "944:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "1180:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1146,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1207:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1211:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1207:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "_swapETHForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "1190:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1190:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "1190:27:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1249:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1253:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1249:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1153,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1261:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1265:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1261:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "DonationReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "1232:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1232:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "EmitStatement",
												"src": "1227:44:8"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "1156:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:2:8"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:0:8"
									},
									"scope": 1322,
									"src": "1147:131:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "1335:651:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1164,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "1353:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1362:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1353:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e6420455448",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1365:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																"typeString": "literal_string \"Must send ETH\""
															},
															"value": "Must send ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																"typeString": "literal_string \"Must send ETH\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1345:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "1345:36:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1171,
																		"name": "WETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "1399:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1170,
																	"name": "IWETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "1392:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH9_$1079_$",
																		"typeString": "type(contract IWETH9)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1392:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH9_$1079",
																	"typeString": "contract IWETH9"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1406:7:8",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "1392:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1174,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "1421:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1392:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "1392:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1184,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "1470:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1462:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1182,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1462:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1462:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "1483:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1179,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "1447:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1178,
																"name": "IWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "1440:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH9_$1079_$",
																	"typeString": "type(contract IWETH9)"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1440:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$1079",
																"typeString": "contract IWETH9"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1454:7:8",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1069,
														"src": "1440:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1440:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "1440:50:8"
											},
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1543:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "1501:48:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 1192,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1191,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1501:11:8",
																	"1513:22:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 971,
																"src": "1501:34:8"
															},
															"referencedDeclaration": 971,
															"src": "1501:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1196,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "1610:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1199,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "1647:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$799",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$799",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1639:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1197,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1639:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1639:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "swapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "1672:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 1202,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1704:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1708:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1704:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1204,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1738:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1744:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1738:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333030",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1756:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "1738:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1208,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "1783:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1855:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1194,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1552:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1047_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1564:22:8",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 971,
														"src": "1552:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$971_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1601:7:8",
														"1629:8:8",
														"1667:3:8",
														"1693:9:8",
														"1728:8:8",
														"1773:8:8",
														"1803:16:8",
														"1836:17:8"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1552:315:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1501:366:8"
											},
											{
												"assignments": [
													1214
												],
												"declarations": [
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "1886:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "1878:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1878:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"id": 1217,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "1926:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 1215,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "1898:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1909:16:8",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 980,
														"src": "1898:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$971_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1878:55:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "1961:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1222,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "1969:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "SwapExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1948:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1948:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "EmitStatement",
												"src": "1943:36:8"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapETHForToken",
									"nameLocation": "1293:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1318:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1310:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:16:8"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1335:0:8"
									},
									"scope": 1322,
									"src": "1284:702:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "2060:278:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1236,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "2078:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1239,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "2096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$799",
																			"typeString": "contract ERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ERC20_$799",
																			"typeString": "contract ERC20"
																		}
																	],
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2088:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1237,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2088:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2088:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2078:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207769746864726177207468652074617267657420746f6b656e2e",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2104:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52",
																"typeString": "literal_string \"Cannot withdraw the target token.\""
															},
															"value": "Cannot withdraw the target token."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99edf5e92406597b820781876ee931ef4ed17477b7bed397b8ede55d4966bc52",
																"typeString": "literal_string \"Cannot withdraw the target token.\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2070:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "2070:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1246,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "2158:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1247,
																"name": "WETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "2168:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2158:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207769746864726177205745544839206469726563746c792c2075736520776974686472617757455448",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2175:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0",
																"typeString": "literal_string \"Cannot withdraw WETH9 directly, use withdrawWETH\""
															},
															"value": "Cannot withdraw WETH9 directly, use withdrawWETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c1c04d8d0127561ef095f69e58ba332ef080bd72d670237d136a18ae0639bc0",
																"typeString": "literal_string \"Cannot withdraw WETH9 directly, use withdrawWETH\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2150:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2150:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2150:76:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1256,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2259:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2263:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2259:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "2271:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1253,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "2242:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1252,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "2236:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2236:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2250:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "2236:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "2236:43:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1262,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2303:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2307:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2303:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "2315:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1265,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "2323:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2294:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "EmitStatement",
												"src": "2289:42:8"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1233,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1232,
												"name": "onlyOwner",
												"nameLocations": [
													"2050:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2050:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2050:9:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "2001:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2018:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2010:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2034:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2026:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2009:33:8"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2060:0:8"
									},
									"scope": 1322,
									"src": "1992:346:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "2400:146:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1280,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2433:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1277,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "2417:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1276,
																"name": "IWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "2410:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH9_$1079_$",
																	"typeString": "type(contract IWETH9)"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2410:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$1079",
																"typeString": "contract IWETH9"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2424:8:8",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1060,
														"src": "2410:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "2410:31:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1289,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2480:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1285,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2459:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2463:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2459:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2451:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1283,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2451:8:8",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2451:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2471:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2451:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2451:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "2451:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2512:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2516:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2512:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2524:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2531:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1292,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2503:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2503:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "EmitStatement",
												"src": "2498:41:8"
											}
										]
									},
									"functionSelector": "fc4dd333",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1274,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1273,
												"name": "onlyOwner",
												"nameLocations": [
													"2390:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2390:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2390:9:8"
										}
									],
									"name": "withdrawWETH",
									"nameLocation": "2353:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2374:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2366:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2365:17:8"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:8"
									},
									"scope": 1322,
									"src": "2344:202:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "2605:34:8",
										"statements": [
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1307,
														"name": "swapFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "2615:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1308,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "2625:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "2615:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "2615:17:8"
											}
										]
									},
									"functionSelector": "e4c3a8f8",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1305,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1304,
												"name": "onlyOwner",
												"nameLocations": [
													"2595:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2595:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2595:9:8"
										}
									],
									"name": "setSwapFee",
									"nameLocation": "2561:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "2579:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "2572:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1301,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2572:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:16:8"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2605:0:8"
									},
									"scope": 1322,
									"src": "2552:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "2671:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1316,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2698:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2702:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2698:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1315,
														"name": "_swapETHForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "2681:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "2681:27:8"
											}
										]
									},
									"id": 1321,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2651:2:8"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2671:0:8"
									},
									"scope": 1322,
									"src": "2644:71:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1323,
							"src": "502:2215:8",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								1098,
								1104,
								1112
							]
						}
					],
					"src": "32:2686:8"
				},
				"id": 8
			}
		}
	}
}