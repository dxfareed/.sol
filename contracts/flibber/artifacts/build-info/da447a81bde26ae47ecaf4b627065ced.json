{
	"id": "da447a81bde26ae47ecaf4b627065ced",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/flibber/flibberToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\n\ncontract FIBToken is ERC20, ERC20Burnable, Ownable {\n    uint256 public constant TOKEN_PRICE_USD = 400; // $400 per token\n    uint256 public constant FAUCET_AMOUNT = 9000000000000000; // 0.009 tokens (considering 18 decimals)\n    uint256 public constant FAUCET_COOLDOWN = 24 hours;\n    \n    AggregatorV3Interface internal priceFeed;\n    \n    // Mapping to track last faucet request time for each address\n    mapping(address => uint256) public lastFaucetRequest;\n    \n    // Events\n    event TokensPurchased(address buyer, uint256 amount, uint256 cost);\n    event TokensSold(address seller, uint256 amount, uint256 payment);\n    event FaucetDispensed(address recipient, uint256 amount);\n\n    constructor(\n        address initialOwner,\n        address _priceFeedAddress\n    ) ERC20(\"FLIBBER\", \"$FIB\") Ownable(initialOwner) {\n        priceFeed = AggregatorV3Interface(_priceFeedAddress);\n        _mint(msg.sender, 1000000 * 10 ** decimals());\n    }\n\n    // Faucet function to dispense tokens\n    function requestFaucet() public {\n        require(\n            block.timestamp >= lastFaucetRequest[msg.sender] + FAUCET_COOLDOWN,\n            \"Please wait 24 hours between faucet requests\"\n        );\n        \n        require(\n            balanceOf(address(this)) >= FAUCET_AMOUNT,\n            \"Faucet is empty\"\n        );\n\n        lastFaucetRequest[msg.sender] = block.timestamp;\n        _transfer(address(this), msg.sender, FAUCET_AMOUNT);\n        \n        emit FaucetDispensed(msg.sender, FAUCET_AMOUNT);\n    }\n\n    // Check time remaining until next faucet request\n    function timeUntilNextFaucet(address user) public view returns (uint256) {\n        uint256 timePassed = block.timestamp - lastFaucetRequest[user];\n        if (timePassed >= FAUCET_COOLDOWN) {\n            return 0;\n        }\n        return FAUCET_COOLDOWN - timePassed;\n    }\n\n    // Get the latest ETH/USD price from Chainlink\n    function getLatestPrice() public view returns (uint256) {\n        (, int256 price,,,) = priceFeed.latestRoundData();\n        return uint256(price) * 1e10; // Convert to 18 decimals\n    }\n\n    // Calculate how many tokens can be bought with the provided ETH\n    function getTokenAmount(uint256 ethAmount) public view returns (uint256) {\n        uint256 ethUsdPrice = getLatestPrice();\n        uint256 ethValueInUsd = (ethAmount * ethUsdPrice) / 1e18;\n        return (ethValueInUsd * 1e18) / (TOKEN_PRICE_USD * 1e18);\n    }\n\n    // Buy tokens with ETH\n    function buyTokens() public payable {\n        require(msg.value > 0, \"Must send ETH to buy tokens\");\n        \n        uint256 tokenAmount = getTokenAmount(msg.value);\n        require(tokenAmount > 0, \"ETH amount too small\");\n        \n        _mint(msg.sender, tokenAmount);\n        \n        emit TokensPurchased(msg.sender, tokenAmount, msg.value);\n    }\n\n    // Sell tokens back for ETH\n    function sellTokens(uint256 tokenAmount) public {\n        require(tokenAmount > 0, \"Must sell more than 0 tokens\");\n        require(balanceOf(msg.sender) >= tokenAmount, \"Insufficient token balance\");\n\n        uint256 ethUsdPrice = getLatestPrice();\n        uint256 usdValue = tokenAmount * TOKEN_PRICE_USD;\n        uint256 ethAmount = (usdValue * 1e18) / ethUsdPrice;\n\n        require(address(this).balance >= ethAmount, \"Insufficient contract balance\");\n\n        _burn(msg.sender, tokenAmount);\n        payable(msg.sender).transfer(ethAmount);\n\n        emit TokensSold(msg.sender, tokenAmount, ethAmount);\n    }\n\n    // Fund the faucet\n    function fundFaucet(uint256 amount) public onlyOwner {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n        _transfer(msg.sender, address(this), amount);\n    }\n\n    // Allow the contract to receive ETH\n    receive() external payable {}\n\n    // Owner functions\n    function withdrawETH() public onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n        payable(owner()).transfer(balance);\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function setPriceFeed(address newPriceFeed) public onlyOwner {\n        require(newPriceFeed != address(0), \"Invalid price feed address\");\n        priceFeed = AggregatorV3Interface(newPriceFeed);\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 353,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 361,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 365,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 353,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 361,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 365,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/flibber/flibberToken.sol": {
				"FIBToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FaucetDispensed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								}
							],
							"name": "TokensSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "FAUCET_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FAUCET_COOLDOWN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKEN_PRICE_USD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fundFaucet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "getTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastFaucetRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestFaucet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "sellTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceFeed",
									"type": "address"
								}
							],
							"name": "setPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "timeUntilNextFaucet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/flibber/flibberToken.sol\":327:4666  contract FIBToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/flibber/flibberToken.sol\":1018:1272  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/flibber/flibberToken.sol\":1134:1146  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x464c494242455200000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x2446494200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/flibber/flibberToken.sol\":1192:1209  _priceFeedAddress */\n  dup1\n    /* \"contracts/flibber/flibberToken.sol\":1158:1167  priceFeed */\n  0x06\n  0x00\n    /* \"contracts/flibber/flibberToken.sol\":1158:1210  priceFeed = AggregatorV3Interface(_priceFeedAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/flibber/flibberToken.sol\":1220:1265  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  tag_18\n    /* \"contracts/flibber/flibberToken.sol\":1226:1236  msg.sender */\n  caller\n    /* \"contracts/flibber/flibberToken.sol\":1254:1264  decimals() */\n  tag_19\n    /* \"contracts/flibber/flibberToken.sol\":1254:1262  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/flibber/flibberToken.sol\":1254:1264  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/flibber/flibberToken.sol\":1248:1250  10 */\n  0x0a\n    /* \"contracts/flibber/flibberToken.sol\":1248:1264  10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/flibber/flibberToken.sol\":1238:1245  1000000 */\n  0x0f4240\n    /* \"contracts/flibber/flibberToken.sol\":1238:1264  1000000 * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/flibber/flibberToken.sol\":1220:1225  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/flibber/flibberToken.sol\":1220:1265  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/flibber/flibberToken.sol\":1018:1272  constructor(... */\n  pop\n  pop\n    /* \"contracts/flibber/flibberToken.sol\":327:4666  contract FIBToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_47:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_49:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_50:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_86\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_51:\n    /* \"#utility.yul\":641:665   */\n  tag_88\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_89:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_52:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_91\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_51\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_94\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":949:1068   */\ntag_93:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_95\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_52\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_96\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_52\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_53:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_54:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_55:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_56:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_101:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_103\n  tag_55\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2065:2149   */\ntag_102:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_57:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_58:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_59:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_60:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_108\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_59\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2780:2819   */\n  tag_109\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_59\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_61:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_62:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_63:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_113\n    /* \"#utility.yul\":3169:3203   */\n  tag_114\n    /* \"#utility.yul\":3178:3202   */\n  tag_115\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_61\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3169:3203   */\n  tag_62\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3151:3204   */\n  tag_61\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_64:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_65:\n    /* \"#utility.yul\":3407:3446   */\n  tag_118\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_63\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3468:3559   */\n  tag_119\n    /* \"#utility.yul\":3517:3558   */\n  tag_120\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_64\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_60\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_66:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_67:\n    /* \"#utility.yul\":3728:3760   */\n  tag_123\n  tag_66\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3769:3834   */\n  tag_124\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_65\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_68:\n    /* \"#utility.yul\":3906:4026   */\ntag_126:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_129\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_67\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_69:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_132\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_57\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4257:4286   */\n  tag_133\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_58\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_134:\n    /* \"#utility.yul\":4484:4564   */\n  tag_135\n    /* \"#utility.yul\":4540:4562   */\n  tag_136\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_58\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_68\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_131:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_70:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_71:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_139\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_70\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_72:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_141\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_71\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_9:\n    /* \"#utility.yul\":5301:5338   */\n  tag_143\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_53\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_145\n  tag_54\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5389:5445   */\ntag_144:\n    /* \"#utility.yul\":5469:5507   */\n  tag_146\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_56\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5554:5621   */\n  tag_147\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_69\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_150:\n    /* \"#utility.yul\":6495:6562   */\n  tag_151\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_72\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_148)\n    /* \"#utility.yul\":5716:6334   */\ntag_149:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_152\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_57\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_153:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_157\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_71\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_156:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_148:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_73:\n    /* \"#utility.yul\":6672:6696   */\n  tag_159\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_50\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_14:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_161\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_73\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7117   */\ntag_74:\n    /* \"#utility.yul\":6985:7062   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6982:6983   */\n  0x00\n    /* \"#utility.yul\":6975:7063   */\n  mstore\n    /* \"#utility.yul\":7082:7086   */\n  0x11\n    /* \"#utility.yul\":7079:7080   */\n  0x04\n    /* \"#utility.yul\":7072:7087   */\n  mstore\n    /* \"#utility.yul\":7106:7110   */\n  0x24\n    /* \"#utility.yul\":7103:7104   */\n  0x00\n    /* \"#utility.yul\":7096:7111   */\n  revert\n    /* \"#utility.yul\":7123:7225   */\ntag_75:\n    /* \"#utility.yul\":7165:7173   */\n  0x00\n    /* \"#utility.yul\":7212:7217   */\n  dup2\n    /* \"#utility.yul\":7209:7210   */\n  0x01\n    /* \"#utility.yul\":7205:7218   */\n  shr\n    /* \"#utility.yul\":7184:7218   */\n  swap1\n  pop\n    /* \"#utility.yul\":7123:7225   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7231:8079   */\ntag_76:\n    /* \"#utility.yul\":7292:7297   */\n  0x00\n    /* \"#utility.yul\":7299:7303   */\n  dup1\n    /* \"#utility.yul\":7323:7329   */\n  dup3\n    /* \"#utility.yul\":7314:7329   */\n  swap2\n  pop\n    /* \"#utility.yul\":7347:7352   */\n  dup4\n    /* \"#utility.yul\":7338:7352   */\n  swap1\n  pop\n    /* \"#utility.yul\":7361:8073   */\ntag_165:\n    /* \"#utility.yul\":7382:7383   */\n  0x01\n    /* \"#utility.yul\":7372:7380   */\n  dup6\n    /* \"#utility.yul\":7369:7384   */\n  gt\n    /* \"#utility.yul\":7361:8073   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7477:7481   */\n  dup1\n    /* \"#utility.yul\":7472:7475   */\n  dup7\n    /* \"#utility.yul\":7468:7482   */\n  div\n    /* \"#utility.yul\":7462:7466   */\n  dup2\n    /* \"#utility.yul\":7459:7483   */\n  gt\n    /* \"#utility.yul\":7456:7506   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":7486:7504   */\n  tag_169\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7456:7506   */\ntag_168:\n    /* \"#utility.yul\":7536:7537   */\n  0x01\n    /* \"#utility.yul\":7526:7534   */\n  dup6\n    /* \"#utility.yul\":7522:7538   */\n  and\n    /* \"#utility.yul\":7519:7970   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":7951:7955   */\n  dup1\n    /* \"#utility.yul\":7944:7949   */\n  dup3\n    /* \"#utility.yul\":7940:7956   */\n  mul\n    /* \"#utility.yul\":7931:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":7519:7970   */\ntag_170:\n    /* \"#utility.yul\":8001:8005   */\n  dup1\n    /* \"#utility.yul\":7995:7999   */\n  dup2\n    /* \"#utility.yul\":7991:8006   */\n  mul\n    /* \"#utility.yul\":7983:8006   */\n  swap1\n  pop\n    /* \"#utility.yul\":8031:8063   */\n  tag_171\n    /* \"#utility.yul\":8054:8062   */\n  dup6\n    /* \"#utility.yul\":8031:8063   */\n  tag_75\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8019:8063   */\n  swap5\n  pop\n    /* \"#utility.yul\":7361:8073   */\n  jump(tag_165)\ntag_167:\n    /* \"#utility.yul\":7231:8079   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8085:9158   */\ntag_77:\n    /* \"#utility.yul\":8139:8144   */\n  0x00\n    /* \"#utility.yul\":8330:8338   */\n  dup3\n    /* \"#utility.yul\":8320:8360   */\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8351:8352   */\n  0x01\n    /* \"#utility.yul\":8342:8352   */\n  swap1\n  pop\n    /* \"#utility.yul\":8353:8358   */\n  jump(tag_172)\n    /* \"#utility.yul\":8320:8360   */\ntag_173:\n    /* \"#utility.yul\":8379:8383   */\n  dup2\n    /* \"#utility.yul\":8369:8405   */\n  tag_174\n  jumpi\n    /* \"#utility.yul\":8396:8397   */\n  0x00\n    /* \"#utility.yul\":8387:8397   */\n  swap1\n  pop\n    /* \"#utility.yul\":8398:8403   */\n  jump(tag_172)\n    /* \"#utility.yul\":8369:8405   */\ntag_174:\n    /* \"#utility.yul\":8465:8469   */\n  dup2\n    /* \"#utility.yul\":8513:8514   */\n  0x01\n    /* \"#utility.yul\":8508:8535   */\n  dup2\n  eq\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8549:8550   */\n  0x02\n    /* \"#utility.yul\":8544:8735   */\n  dup2\n  eq\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8458:8735   */\n  jump(tag_175)\n    /* \"#utility.yul\":8508:8535   */\ntag_176:\n    /* \"#utility.yul\":8526:8527   */\n  0x01\n    /* \"#utility.yul\":8517:8527   */\n  swap2\n  pop\n    /* \"#utility.yul\":8528:8533   */\n  pop\n  jump(tag_172)\n    /* \"#utility.yul\":8544:8735   */\ntag_177:\n    /* \"#utility.yul\":8589:8592   */\n  0xff\n    /* \"#utility.yul\":8579:8587   */\n  dup5\n    /* \"#utility.yul\":8576:8593   */\n  gt\n    /* \"#utility.yul\":8573:8616   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8596:8614   */\n  tag_179\n  tag_74\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8573:8616   */\ntag_178:\n    /* \"#utility.yul\":8645:8653   */\n  dup4\n    /* \"#utility.yul\":8642:8643   */\n  0x02\n    /* \"#utility.yul\":8638:8654   */\n  exp\n    /* \"#utility.yul\":8629:8654   */\n  swap2\n  pop\n    /* \"#utility.yul\":8680:8683   */\n  dup5\n    /* \"#utility.yul\":8673:8678   */\n  dup3\n    /* \"#utility.yul\":8670:8684   */\n  gt\n    /* \"#utility.yul\":8667:8707   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":8687:8705   */\n  tag_181\n  tag_74\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8667:8707   */\ntag_180:\n    /* \"#utility.yul\":8720:8725   */\n  pop\n  jump(tag_172)\n    /* \"#utility.yul\":8458:8735   */\ntag_175:\n  pop\n    /* \"#utility.yul\":8844:8846   */\n  0x20\n    /* \"#utility.yul\":8834:8842   */\n  dup4\n    /* \"#utility.yul\":8831:8847   */\n  lt\n    /* \"#utility.yul\":8825:8828   */\n  0x0133\n    /* \"#utility.yul\":8819:8823   */\n  dup4\n    /* \"#utility.yul\":8816:8829   */\n  lt\n    /* \"#utility.yul\":8812:8848   */\n  and\n    /* \"#utility.yul\":8794:8796   */\n  0x4e\n    /* \"#utility.yul\":8784:8792   */\n  dup5\n    /* \"#utility.yul\":8781:8797   */\n  lt\n    /* \"#utility.yul\":8776:8778   */\n  0x0b\n    /* \"#utility.yul\":8770:8774   */\n  dup5\n    /* \"#utility.yul\":8767:8779   */\n  lt\n    /* \"#utility.yul\":8763:8798   */\n  and\n    /* \"#utility.yul\":8747:8858   */\n  or\n    /* \"#utility.yul\":8744:8990   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8900:8908   */\n  dup3\n    /* \"#utility.yul\":8894:8898   */\n  dup3\n    /* \"#utility.yul\":8890:8909   */\n  exp\n    /* \"#utility.yul\":8881:8909   */\n  swap1\n  pop\n    /* \"#utility.yul\":8935:8938   */\n  dup4\n    /* \"#utility.yul\":8928:8933   */\n  dup2\n    /* \"#utility.yul\":8925:8939   */\n  gt\n    /* \"#utility.yul\":8922:8962   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_184\n  tag_74\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8922:8962   */\ntag_183:\n    /* \"#utility.yul\":8975:8980   */\n  jump(tag_172)\n    /* \"#utility.yul\":8744:8990   */\ntag_182:\n    /* \"#utility.yul\":9015:9057   */\n  tag_185\n    /* \"#utility.yul\":9053:9056   */\n  dup5\n    /* \"#utility.yul\":9043:9051   */\n  dup5\n    /* \"#utility.yul\":9037:9041   */\n  dup5\n    /* \"#utility.yul\":9034:9035   */\n  0x01\n    /* \"#utility.yul\":9015:9057   */\n  tag_76\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9000:9057   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9089:9093   */\n  dup2\n    /* \"#utility.yul\":9084:9087   */\n  dup5\n    /* \"#utility.yul\":9080:9094   */\n  div\n    /* \"#utility.yul\":9073:9078   */\n  dup2\n    /* \"#utility.yul\":9070:9095   */\n  gt\n    /* \"#utility.yul\":9067:9118   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":9098:9116   */\n  tag_187\n  tag_74\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9067:9118   */\ntag_186:\n    /* \"#utility.yul\":9147:9151   */\n  dup2\n    /* \"#utility.yul\":9140:9145   */\n  dup2\n    /* \"#utility.yul\":9136:9152   */\n  mul\n    /* \"#utility.yul\":9127:9152   */\n  swap1\n  pop\n    /* \"#utility.yul\":8085:9158   */\ntag_172:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9164:9250   */\ntag_78:\n    /* \"#utility.yul\":9199:9206   */\n  0x00\n    /* \"#utility.yul\":9239:9243   */\n  0xff\n    /* \"#utility.yul\":9232:9237   */\n  dup3\n    /* \"#utility.yul\":9228:9244   */\n  and\n    /* \"#utility.yul\":9217:9244   */\n  swap1\n  pop\n    /* \"#utility.yul\":9164:9250   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9256:9537   */\ntag_22:\n    /* \"#utility.yul\":9314:9319   */\n  0x00\n    /* \"#utility.yul\":9338:9361   */\n  tag_190\n    /* \"#utility.yul\":9356:9360   */\n  dup3\n    /* \"#utility.yul\":9338:9361   */\n  tag_61\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9330:9361   */\n  swap2\n  pop\n    /* \"#utility.yul\":9382:9407   */\n  tag_191\n    /* \"#utility.yul\":9398:9406   */\n  dup4\n    /* \"#utility.yul\":9382:9407   */\n  tag_78\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9370:9407   */\n  swap3\n  pop\n    /* \"#utility.yul\":9426:9530   */\n  tag_192\n    /* \"#utility.yul\":9463:9529   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9453:9461   */\n  dup5\n    /* \"#utility.yul\":9447:9451   */\n  dup5\n    /* \"#utility.yul\":9426:9530   */\n  tag_77\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9417:9530   */\n  swap1\n  pop\n    /* \"#utility.yul\":9256:9537   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9543:9953   */\ntag_24:\n    /* \"#utility.yul\":9583:9590   */\n  0x00\n    /* \"#utility.yul\":9606:9626   */\n  tag_194\n    /* \"#utility.yul\":9624:9625   */\n  dup3\n    /* \"#utility.yul\":9606:9626   */\n  tag_61\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9601:9626   */\n  swap2\n  pop\n    /* \"#utility.yul\":9640:9660   */\n  tag_195\n    /* \"#utility.yul\":9658:9659   */\n  dup4\n    /* \"#utility.yul\":9640:9660   */\n  tag_61\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9635:9660   */\n  swap3\n  pop\n    /* \"#utility.yul\":9695:9696   */\n  dup3\n    /* \"#utility.yul\":9692:9693   */\n  dup3\n    /* \"#utility.yul\":9688:9697   */\n  mul\n    /* \"#utility.yul\":9717:9747   */\n  tag_196\n    /* \"#utility.yul\":9735:9746   */\n  dup2\n    /* \"#utility.yul\":9717:9747   */\n  tag_61\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9706:9747   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9897   */\n  dup3\n    /* \"#utility.yul\":9887:9894   */\n  dup3\n    /* \"#utility.yul\":9883:9898   */\n  div\n    /* \"#utility.yul\":9880:9881   */\n  dup5\n    /* \"#utility.yul\":9877:9899   */\n  eq\n    /* \"#utility.yul\":9857:9858   */\n  dup4\n    /* \"#utility.yul\":9850:9859   */\n  iszero\n    /* \"#utility.yul\":9830:9913   */\n  or\n    /* \"#utility.yul\":9807:9946   */\n  tag_197\n  jumpi\n    /* \"#utility.yul\":9926:9944   */\n  tag_198\n  tag_74\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9807:9946   */\ntag_197:\n    /* \"#utility.yul\":9591:9953   */\n  pop\n    /* \"#utility.yul\":9543:9953   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9959:10150   */\ntag_37:\n    /* \"#utility.yul\":9999:10002   */\n  0x00\n    /* \"#utility.yul\":10018:10038   */\n  tag_200\n    /* \"#utility.yul\":10036:10037   */\n  dup3\n    /* \"#utility.yul\":10018:10038   */\n  tag_61\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10013:10038   */\n  swap2\n  pop\n    /* \"#utility.yul\":10052:10072   */\n  tag_201\n    /* \"#utility.yul\":10070:10071   */\n  dup4\n    /* \"#utility.yul\":10052:10072   */\n  tag_61\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10047:10072   */\n  swap3\n  pop\n    /* \"#utility.yul\":10095:10096   */\n  dup3\n    /* \"#utility.yul\":10092:10093   */\n  dup3\n    /* \"#utility.yul\":10088:10097   */\n  add\n    /* \"#utility.yul\":10081:10097   */\n  swap1\n  pop\n    /* \"#utility.yul\":10116:10119   */\n  dup1\n    /* \"#utility.yul\":10113:10114   */\n  dup3\n    /* \"#utility.yul\":10110:10120   */\n  gt\n    /* \"#utility.yul\":10107:10143   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":10123:10141   */\n  tag_203\n  tag_74\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10107:10143   */\ntag_202:\n    /* \"#utility.yul\":9959:10150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10156:10274   */\ntag_79:\n    /* \"#utility.yul\":10243:10267   */\n  tag_205\n    /* \"#utility.yul\":10261:10266   */\n  dup2\n    /* \"#utility.yul\":10243:10267   */\n  tag_61\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10238:10241   */\n  dup3\n    /* \"#utility.yul\":10231:10268   */\n  mstore\n    /* \"#utility.yul\":10156:10274   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10280:10722   */\ntag_41:\n    /* \"#utility.yul\":10429:10433   */\n  0x00\n    /* \"#utility.yul\":10467:10469   */\n  0x60\n    /* \"#utility.yul\":10456:10465   */\n  dup3\n    /* \"#utility.yul\":10452:10470   */\n  add\n    /* \"#utility.yul\":10444:10470   */\n  swap1\n  pop\n    /* \"#utility.yul\":10480:10551   */\n  tag_207\n    /* \"#utility.yul\":10548:10549   */\n  0x00\n    /* \"#utility.yul\":10537:10546   */\n  dup4\n    /* \"#utility.yul\":10533:10550   */\n  add\n    /* \"#utility.yul\":10524:10530   */\n  dup7\n    /* \"#utility.yul\":10480:10551   */\n  tag_73\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10561:10633   */\n  tag_208\n    /* \"#utility.yul\":10629:10631   */\n  0x20\n    /* \"#utility.yul\":10618:10627   */\n  dup4\n    /* \"#utility.yul\":10614:10632   */\n  add\n    /* \"#utility.yul\":10605:10611   */\n  dup6\n    /* \"#utility.yul\":10561:10633   */\n  tag_79\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10643:10715   */\n  tag_209\n    /* \"#utility.yul\":10711:10713   */\n  0x40\n    /* \"#utility.yul\":10700:10709   */\n  dup4\n    /* \"#utility.yul\":10696:10714   */\n  add\n    /* \"#utility.yul\":10687:10693   */\n  dup5\n    /* \"#utility.yul\":10643:10715   */\n  tag_79\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10280:10722   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10728:10950   */\ntag_45:\n    /* \"#utility.yul\":10821:10825   */\n  0x00\n    /* \"#utility.yul\":10859:10861   */\n  0x20\n    /* \"#utility.yul\":10848:10857   */\n  dup3\n    /* \"#utility.yul\":10844:10862   */\n  add\n    /* \"#utility.yul\":10836:10862   */\n  swap1\n  pop\n    /* \"#utility.yul\":10872:10943   */\n  tag_211\n    /* \"#utility.yul\":10940:10941   */\n  0x00\n    /* \"#utility.yul\":10929:10938   */\n  dup4\n    /* \"#utility.yul\":10925:10942   */\n  add\n    /* \"#utility.yul\":10916:10922   */\n  dup5\n    /* \"#utility.yul\":10872:10943   */\n  tag_79\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10728:10950   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/flibber/flibberToken.sol\":327:4666  contract FIBToken is ERC20, ERC20Burnable, Ownable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/flibber/flibberToken.sol\":327:4666  contract FIBToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc2507ac1\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe086e5ec\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf7a182f5\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xc2507ac1\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd5ace7ba\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xa9059cbb\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xacde1241\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xae0140b4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb8664f59\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8e15f473\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x6c11bcd3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x724e78da\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x724e78da\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x76697640\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7d1d5d19\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x6c11bcd3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x23b872dd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flibber/flibberToken.sol\":4365:4458  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":3170:3783  function sellTokens(uint256 tokenAmount) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":4464:4664  function setPriceFeed(address newPriceFeed) public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":453:509  uint256 public constant FAUCET_AMOUNT = 9000000000000000 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":557:607  uint256 public constant FAUCET_COOLDOWN = 24 hours */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flibber/flibberToken.sol\":2224:2410  function getLatestPrice() public view returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flibber/flibberToken.sol\":1893:2167  function timeUntilNextFaucet(address user) public view returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flibber/flibberToken.sol\":3812:4062  function fundFaucet(uint256 amount) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":1320:1833  function requestFaucet() public {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":2485:2745  function getTokenAmount(uint256 ethAmount) public view returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flibber/flibberToken.sol\":2778:3132  function buyTokens() public payable {... */\n    tag_25:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":735:787  mapping(address => uint256) public lastFaucetRequest */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flibber/flibberToken.sol\":4167:4359  function withdrawETH() public onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      stop\n        /* \"contracts/flibber/flibberToken.sol\":384:429  uint256 public constant TOKEN_PRICE_USD = 400 */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_167\n      jump\t// in\n    tag_168:\n      dup1\n      iszero\n      tag_169\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_170\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_169)\n    tag_170:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_171:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_171\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":4365:4458  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/flibber/flibberToken.sol\":4434:4451  _mint(to, amount) */\n      tag_189\n        /* \"contracts/flibber/flibberToken.sol\":4440:4442  to */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":4444:4450  amount */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":4434:4439  _mint */\n      tag_190\n        /* \"contracts/flibber/flibberToken.sol\":4434:4451  _mint(to, amount) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/flibber/flibberToken.sol\":4365:4458  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":3170:3783  function sellTokens(uint256 tokenAmount) public {... */\n    tag_80:\n        /* \"contracts/flibber/flibberToken.sol\":3250:3251  0 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":3236:3247  tokenAmount */\n      dup2\n        /* \"contracts/flibber/flibberToken.sol\":3236:3251  tokenAmount > 0 */\n      gt\n        /* \"contracts/flibber/flibberToken.sol\":3228:3284  require(tokenAmount > 0, \"Must sell more than 0 tokens\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/flibber/flibberToken.sol\":3327:3338  tokenAmount */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":3302:3323  balanceOf(msg.sender) */\n      tag_199\n        /* \"contracts/flibber/flibberToken.sol\":3312:3322  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":3302:3311  balanceOf */\n      tag_85\n        /* \"contracts/flibber/flibberToken.sol\":3302:3323  balanceOf(msg.sender) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/flibber/flibberToken.sol\":3302:3338  balanceOf(msg.sender) >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/flibber/flibberToken.sol\":3294:3369  require(balanceOf(msg.sender) >= tokenAmount, \"Insufficient token balance\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/flibber/flibberToken.sol\":3380:3399  uint256 ethUsdPrice */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":3402:3418  getLatestPrice() */\n      tag_203\n        /* \"contracts/flibber/flibberToken.sol\":3402:3416  getLatestPrice */\n      tag_113\n        /* \"contracts/flibber/flibberToken.sol\":3402:3418  getLatestPrice() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/flibber/flibberToken.sol\":3380:3418  uint256 ethUsdPrice = getLatestPrice() */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":3428:3444  uint256 usdValue */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":426:429  400 */\n      0x0190\n        /* \"contracts/flibber/flibberToken.sol\":3447:3458  tokenAmount */\n      dup4\n        /* \"contracts/flibber/flibberToken.sol\":3447:3476  tokenAmount * TOKEN_PRICE_USD */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/flibber/flibberToken.sol\":3428:3476  uint256 usdValue = tokenAmount * TOKEN_PRICE_USD */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":3486:3503  uint256 ethAmount */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":3526:3537  ethUsdPrice */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":3518:3522  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flibber/flibberToken.sol\":3507:3515  usdValue */\n      dup4\n        /* \"contracts/flibber/flibberToken.sol\":3507:3522  usdValue * 1e18 */\n      tag_206\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_206:\n        /* \"contracts/flibber/flibberToken.sol\":3506:3537  (usdValue * 1e18) / ethUsdPrice */\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/flibber/flibberToken.sol\":3486:3537  uint256 ethAmount = (usdValue * 1e18) / ethUsdPrice */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":3581:3590  ethAmount */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":3556:3577  address(this).balance */\n      selfbalance\n        /* \"contracts/flibber/flibberToken.sol\":3556:3590  address(this).balance >= ethAmount */\n      lt\n      iszero\n        /* \"contracts/flibber/flibberToken.sol\":3548:3624  require(address(this).balance >= ethAmount, \"Insufficient contract balance\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/flibber/flibberToken.sol\":3635:3665  _burn(msg.sender, tokenAmount) */\n      tag_212\n        /* \"contracts/flibber/flibberToken.sol\":3641:3651  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":3653:3664  tokenAmount */\n      dup6\n        /* \"contracts/flibber/flibberToken.sol\":3635:3640  _burn */\n      tag_194\n        /* \"contracts/flibber/flibberToken.sol\":3635:3665  _burn(msg.sender, tokenAmount) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/flibber/flibberToken.sol\":3683:3693  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":3675:3703  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flibber/flibberToken.sol\":3675:3714  payable(msg.sender).transfer(ethAmount) */\n      0x08fc\n        /* \"contracts/flibber/flibberToken.sol\":3704:3713  ethAmount */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":3675:3714  payable(msg.sender).transfer(ethAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":3730:3776  TokensSold(msg.sender, tokenAmount, ethAmount) */\n      0x2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d\n        /* \"contracts/flibber/flibberToken.sol\":3741:3751  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":3753:3764  tokenAmount */\n      dup6\n        /* \"contracts/flibber/flibberToken.sol\":3766:3775  ethAmount */\n      dup4\n        /* \"contracts/flibber/flibberToken.sol\":3730:3776  TokensSold(msg.sender, tokenAmount, ethAmount) */\n      mload(0x40)\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/flibber/flibberToken.sol\":3218:3783  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":3170:3783  function sellTokens(uint256 tokenAmount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":4464:4664  function setPriceFeed(address newPriceFeed) public onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/flibber/flibberToken.sol\":4567:4568  0 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":4543:4569  newPriceFeed != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flibber/flibberToken.sol\":4543:4555  newPriceFeed */\n      dup2\n        /* \"contracts/flibber/flibberToken.sol\":4543:4569  newPriceFeed != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/flibber/flibberToken.sol\":4535:4600  require(newPriceFeed != address(0), \"Invalid price feed address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/flibber/flibberToken.sol\":4644:4656  newPriceFeed */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":4610:4619  priceFeed */\n      0x06\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":4610:4657  priceFeed = AggregatorV3Interface(newPriceFeed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":4464:4664  function setPriceFeed(address newPriceFeed) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":453:509  uint256 public constant FAUCET_AMOUNT = 9000000000000000 */\n    tag_96:\n        /* \"contracts/flibber/flibberToken.sol\":493:509  9000000000000000 */\n      0x1ff973cafa8000\n        /* \"contracts/flibber/flibberToken.sol\":453:509  uint256 public constant FAUCET_AMOUNT = 9000000000000000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":557:607  uint256 public constant FAUCET_COOLDOWN = 24 hours */\n    tag_104:\n        /* \"contracts/flibber/flibberToken.sol\":599:607  24 hours */\n      0x015180\n        /* \"contracts/flibber/flibberToken.sol\":557:607  uint256 public constant FAUCET_COOLDOWN = 24 hours */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":2224:2410  function getLatestPrice() public view returns (uint256) {... */\n    tag_113:\n        /* \"contracts/flibber/flibberToken.sol\":2271:2278  uint256 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2293:2305  int256 price */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":2312:2321  priceFeed */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flibber/flibberToken.sol\":2312:2337  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/flibber/flibberToken.sol\":2312:2339  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"contracts/flibber/flibberToken.sol\":2290:2339  (, int256 price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":2373:2377  1e10 */\n      0x02540be400\n        /* \"contracts/flibber/flibberToken.sol\":2364:2369  price */\n      dup2\n        /* \"contracts/flibber/flibberToken.sol\":2356:2377  uint256(price) * 1e10 */\n      tag_239\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_239:\n        /* \"contracts/flibber/flibberToken.sol\":2349:2377  return uint256(price) * 1e10 */\n      swap2\n      pop\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":2224:2410  function getLatestPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_241\n      swap1\n      tag_167\n      jump\t// in\n    tag_241:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_242\n      swap1\n      tag_167\n      jump\t// in\n    tag_242:\n      dup1\n      iszero\n      tag_243\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_244\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_243)\n    tag_244:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_245:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_245\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":1893:2167  function timeUntilNextFaucet(address user) public view returns (uint256) {... */\n    tag_127:\n        /* \"contracts/flibber/flibberToken.sol\":1957:1964  uint256 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":1976:1994  uint256 timePassed */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":2015:2032  lastFaucetRequest */\n      0x07\n        /* \"contracts/flibber/flibberToken.sol\":2015:2038  lastFaucetRequest[user] */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2033:2037  user */\n      dup5\n        /* \"contracts/flibber/flibberToken.sol\":2015:2038  lastFaucetRequest[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/flibber/flibberToken.sol\":1997:2012  block.timestamp */\n      timestamp\n        /* \"contracts/flibber/flibberToken.sol\":1997:2038  block.timestamp - lastFaucetRequest[user] */\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"contracts/flibber/flibberToken.sol\":1976:2038  uint256 timePassed = block.timestamp - lastFaucetRequest[user] */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":599:607  24 hours */\n      0x015180\n        /* \"contracts/flibber/flibberToken.sol\":2052:2062  timePassed */\n      dup2\n        /* \"contracts/flibber/flibberToken.sol\":2052:2081  timePassed >= FAUCET_COOLDOWN */\n      lt\n        /* \"contracts/flibber/flibberToken.sol\":2048:2116  if (timePassed >= FAUCET_COOLDOWN) {... */\n      tag_252\n      jumpi\n        /* \"contracts/flibber/flibberToken.sol\":2104:2105  0 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2097:2105  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_249)\n        /* \"contracts/flibber/flibberToken.sol\":2048:2116  if (timePassed >= FAUCET_COOLDOWN) {... */\n    tag_252:\n        /* \"contracts/flibber/flibberToken.sol\":2150:2160  timePassed */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":599:607  24 hours */\n      0x015180\n        /* \"contracts/flibber/flibberToken.sol\":2132:2160  FAUCET_COOLDOWN - timePassed */\n      tag_253\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_253:\n        /* \"contracts/flibber/flibberToken.sol\":2125:2160  return FAUCET_COOLDOWN - timePassed */\n      swap2\n      pop\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":1893:2167  function timeUntilNextFaucet(address user) public view returns (uint256) {... */\n    tag_249:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":3812:4062  function fundFaucet(uint256 amount) public onlyOwner {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/flibber/flibberToken.sol\":3892:3893  0 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":3883:3889  amount */\n      dup2\n        /* \"contracts/flibber/flibberToken.sol\":3883:3893  amount > 0 */\n      gt\n        /* \"contracts/flibber/flibberToken.sol\":3875:3927  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/flibber/flibberToken.sol\":3970:3976  amount */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":3945:3966  balanceOf(msg.sender) */\n      tag_260\n        /* \"contracts/flibber/flibberToken.sol\":3955:3965  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":3945:3954  balanceOf */\n      tag_85\n        /* \"contracts/flibber/flibberToken.sol\":3945:3966  balanceOf(msg.sender) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/flibber/flibberToken.sol\":3945:3976  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/flibber/flibberToken.sol\":3937:4001  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/flibber/flibberToken.sol\":4011:4055  _transfer(msg.sender, address(this), amount) */\n      tag_264\n        /* \"contracts/flibber/flibberToken.sol\":4021:4031  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":4041:4045  this */\n      address\n        /* \"contracts/flibber/flibberToken.sol\":4048:4054  amount */\n      dup4\n        /* \"contracts/flibber/flibberToken.sol\":4011:4020  _transfer */\n      tag_183\n        /* \"contracts/flibber/flibberToken.sol\":4011:4055  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/flibber/flibberToken.sol\":3812:4062  function fundFaucet(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":1320:1833  function requestFaucet() public {... */\n    tag_135:\n        /* \"contracts/flibber/flibberToken.sol\":599:607  24 hours */\n      0x015180\n        /* \"contracts/flibber/flibberToken.sol\":1402:1419  lastFaucetRequest */\n      0x07\n        /* \"contracts/flibber/flibberToken.sol\":1402:1431  lastFaucetRequest[msg.sender] */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":1420:1430  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":1402:1431  lastFaucetRequest[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/flibber/flibberToken.sol\":1402:1449  lastFaucetRequest[msg.sender] + FAUCET_COOLDOWN */\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"contracts/flibber/flibberToken.sol\":1383:1398  block.timestamp */\n      timestamp\n        /* \"contracts/flibber/flibberToken.sol\":1383:1449  block.timestamp >= lastFaucetRequest[msg.sender] + FAUCET_COOLDOWN */\n      lt\n      iszero\n        /* \"contracts/flibber/flibberToken.sol\":1362:1519  require(... */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"contracts/flibber/flibberToken.sol\":493:509  9000000000000000 */\n      0x1ff973cafa8000\n        /* \"contracts/flibber/flibberToken.sol\":1559:1583  balanceOf(address(this)) */\n      tag_271\n        /* \"contracts/flibber/flibberToken.sol\":1577:1581  this */\n      address\n        /* \"contracts/flibber/flibberToken.sol\":1559:1568  balanceOf */\n      tag_85\n        /* \"contracts/flibber/flibberToken.sol\":1559:1583  balanceOf(address(this)) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/flibber/flibberToken.sol\":1559:1600  balanceOf(address(this)) >= FAUCET_AMOUNT */\n      lt\n      iszero\n        /* \"contracts/flibber/flibberToken.sol\":1538:1641  require(... */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_272:\n        /* \"contracts/flibber/flibberToken.sol\":1684:1699  block.timestamp */\n      timestamp\n        /* \"contracts/flibber/flibberToken.sol\":1652:1669  lastFaucetRequest */\n      0x07\n        /* \"contracts/flibber/flibberToken.sol\":1652:1681  lastFaucetRequest[msg.sender] */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":1670:1680  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":1652:1681  lastFaucetRequest[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/flibber/flibberToken.sol\":1652:1699  lastFaucetRequest[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":1709:1760  _transfer(address(this), msg.sender, FAUCET_AMOUNT) */\n      tag_275\n        /* \"contracts/flibber/flibberToken.sol\":1727:1731  this */\n      address\n        /* \"contracts/flibber/flibberToken.sol\":1734:1744  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":493:509  9000000000000000 */\n      0x1ff973cafa8000\n        /* \"contracts/flibber/flibberToken.sol\":1709:1718  _transfer */\n      tag_183\n        /* \"contracts/flibber/flibberToken.sol\":1709:1760  _transfer(address(this), msg.sender, FAUCET_AMOUNT) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/flibber/flibberToken.sol\":1784:1826  FaucetDispensed(msg.sender, FAUCET_AMOUNT) */\n      0x4ccc2cb57d301275bff907df4fcc7431ca6cef9083f95cdc1098086c2360e29a\n        /* \"contracts/flibber/flibberToken.sol\":1800:1810  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":493:509  9000000000000000 */\n      0x1ff973cafa8000\n        /* \"contracts/flibber/flibberToken.sol\":1784:1826  FaucetDispensed(msg.sender, FAUCET_AMOUNT) */\n      mload(0x40)\n      tag_276\n      swap3\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/flibber/flibberToken.sol\":1320:1833  function requestFaucet() public {... */\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":2485:2745  function getTokenAmount(uint256 ethAmount) public view returns (uint256) {... */\n    tag_139:\n        /* \"contracts/flibber/flibberToken.sol\":2549:2556  uint256 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2568:2587  uint256 ethUsdPrice */\n      dup1\n        /* \"contracts/flibber/flibberToken.sol\":2590:2606  getLatestPrice() */\n      tag_279\n        /* \"contracts/flibber/flibberToken.sol\":2590:2604  getLatestPrice */\n      tag_113\n        /* \"contracts/flibber/flibberToken.sol\":2590:2606  getLatestPrice() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/flibber/flibberToken.sol\":2568:2606  uint256 ethUsdPrice = getLatestPrice() */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":2616:2637  uint256 ethValueInUsd */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2668:2672  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flibber/flibberToken.sol\":2653:2664  ethUsdPrice */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":2641:2650  ethAmount */\n      dup6\n        /* \"contracts/flibber/flibberToken.sol\":2641:2664  ethAmount * ethUsdPrice */\n      tag_280\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_280:\n        /* \"contracts/flibber/flibberToken.sol\":2640:2672  (ethAmount * ethUsdPrice) / 1e18 */\n      tag_281\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_281:\n        /* \"contracts/flibber/flibberToken.sol\":2616:2672  uint256 ethValueInUsd = (ethAmount * ethUsdPrice) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":2733:2737  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flibber/flibberToken.sol\":426:429  400 */\n      0x0190\n        /* \"contracts/flibber/flibberToken.sol\":2715:2737  TOKEN_PRICE_USD * 1e18 */\n      tag_282\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_282:\n        /* \"contracts/flibber/flibberToken.sol\":2706:2710  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flibber/flibberToken.sol\":2690:2703  ethValueInUsd */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":2690:2710  ethValueInUsd * 1e18 */\n      tag_283\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_283:\n        /* \"contracts/flibber/flibberToken.sol\":2689:2738  (ethValueInUsd * 1e18) / (TOKEN_PRICE_USD * 1e18) */\n      tag_284\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_284:\n        /* \"contracts/flibber/flibberToken.sol\":2682:2738  return (ethValueInUsd * 1e18) / (TOKEN_PRICE_USD * 1e18) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":2485:2745  function getTokenAmount(uint256 ethAmount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":2778:3132  function buyTokens() public payable {... */\n    tag_142:\n        /* \"contracts/flibber/flibberToken.sol\":2844:2845  0 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2832:2841  msg.value */\n      callvalue\n        /* \"contracts/flibber/flibberToken.sol\":2832:2845  msg.value > 0 */\n      gt\n        /* \"contracts/flibber/flibberToken.sol\":2824:2877  require(msg.value > 0, \"Must send ETH to buy tokens\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"contracts/flibber/flibberToken.sol\":2896:2915  uint256 tokenAmount */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2918:2943  getTokenAmount(msg.value) */\n      tag_289\n        /* \"contracts/flibber/flibberToken.sol\":2933:2942  msg.value */\n      callvalue\n        /* \"contracts/flibber/flibberToken.sol\":2918:2932  getTokenAmount */\n      tag_139\n        /* \"contracts/flibber/flibberToken.sol\":2918:2943  getTokenAmount(msg.value) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/flibber/flibberToken.sol\":2896:2943  uint256 tokenAmount = getTokenAmount(msg.value) */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":2975:2976  0 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":2961:2972  tokenAmount */\n      dup2\n        /* \"contracts/flibber/flibberToken.sol\":2961:2976  tokenAmount > 0 */\n      gt\n        /* \"contracts/flibber/flibberToken.sol\":2953:3001  require(tokenAmount > 0, \"ETH amount too small\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/flibber/flibberToken.sol\":3020:3050  _mint(msg.sender, tokenAmount) */\n      tag_293\n        /* \"contracts/flibber/flibberToken.sol\":3026:3036  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":3038:3049  tokenAmount */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":3020:3025  _mint */\n      tag_190\n        /* \"contracts/flibber/flibberToken.sol\":3020:3050  _mint(msg.sender, tokenAmount) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/flibber/flibberToken.sol\":3074:3125  TokensPurchased(msg.sender, tokenAmount, msg.value) */\n      0x8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33\n        /* \"contracts/flibber/flibberToken.sol\":3090:3100  msg.sender */\n      caller\n        /* \"contracts/flibber/flibberToken.sol\":3102:3113  tokenAmount */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":3115:3124  msg.value */\n      callvalue\n        /* \"contracts/flibber/flibberToken.sol\":3074:3125  TokensPurchased(msg.sender, tokenAmount, msg.value) */\n      mload(0x40)\n      tag_294\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/flibber/flibberToken.sol\":2814:3132  {... */\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":2778:3132  function buyTokens() public payable {... */\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":735:787  mapping(address => uint256) public lastFaucetRequest */\n    tag_146:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":4167:4359  function withdrawETH() public onlyOwner {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_297\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/flibber/flibberToken.sol\":4217:4232  uint256 balance */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":4235:4256  address(this).balance */\n      selfbalance\n        /* \"contracts/flibber/flibberToken.sol\":4217:4256  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":4284:4285  0 */\n      0x00\n        /* \"contracts/flibber/flibberToken.sol\":4274:4281  balance */\n      dup2\n        /* \"contracts/flibber/flibberToken.sol\":4274:4285  balance > 0 */\n      gt\n        /* \"contracts/flibber/flibberToken.sol\":4266:4308  require(balance > 0, \"No ETH to withdraw\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"contracts/flibber/flibberToken.sol\":4326:4333  owner() */\n      tag_302\n        /* \"contracts/flibber/flibberToken.sol\":4326:4331  owner */\n      tag_108\n        /* \"contracts/flibber/flibberToken.sol\":4326:4333  owner() */\n      jump\t// in\n    tag_302:\n        /* \"contracts/flibber/flibberToken.sol\":4318:4343  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flibber/flibberToken.sol\":4318:4352  payable(owner()).transfer(balance) */\n      0x08fc\n        /* \"contracts/flibber/flibberToken.sol\":4344:4351  balance */\n      dup3\n        /* \"contracts/flibber/flibberToken.sol\":4318:4352  payable(owner()).transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_304:\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":4207:4359  {... */\n      pop\n        /* \"contracts/flibber/flibberToken.sol\":4167:4359  function withdrawETH() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_306\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_310\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/flibber/flibberToken.sol\":384:429  uint256 public constant TOKEN_PRICE_USD = 400 */\n    tag_163:\n        /* \"contracts/flibber/flibberToken.sol\":426:429  400 */\n      0x0190\n        /* \"contracts/flibber/flibberToken.sol\":384:429  uint256 public constant TOKEN_PRICE_USD = 400 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_320\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_329\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_330\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_349\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_352\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_352:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_353)\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_357)\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_358\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_359:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_360:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_361:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_362:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_363:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_418\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_359\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":711:782   */\n      tag_419\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_360\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_420\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_361\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":881:910   */\n      tag_421\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_362\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_44:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_423\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_363\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_365:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_367:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_368:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_429\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_367\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_369:\n        /* \"#utility.yul\":1876:1900   */\n      tag_431\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_368\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_432:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_370:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_434\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_369\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_371:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_372:\n        /* \"#utility.yul\":2232:2256   */\n      tag_437\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_371\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_438:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_373:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_440\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_372\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_48:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_443\n      tag_365\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2525:2644   */\n    tag_442:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_444\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_370\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_445\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_373\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_374:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_375:\n        /* \"#utility.yul\":3089:3110   */\n      tag_448\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_374\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_51:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_450\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_375\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_376:\n        /* \"#utility.yul\":3426:3450   */\n      tag_452\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_371\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_56:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_454\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_376\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_60:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_457\n      tag_365\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3801:3920   */\n    tag_456:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_458\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_370\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_459\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_370\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_460\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_373\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_377:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_378:\n        /* \"#utility.yul\":4491:4513   */\n      tag_463\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_377\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_67:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_465\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_378\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_75:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_468\n      tag_365\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":4822:4941   */\n    tag_467:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_469\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_373\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_84:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_472\n      tag_365\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5157:5276   */\n    tag_471:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_473\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_370\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_379:\n        /* \"#utility.yul\":5503:5527   */\n      tag_475\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_368\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_110:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_477\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_379\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_151:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_480\n      tag_365\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5861:5980   */\n    tag_479:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_481\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_370\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_482\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_370\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_380:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_167:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_485:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_487\n      tag_380\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6664:6748   */\n    tag_486:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6938   */\n    tag_381:\n        /* \"#utility.yul\":6900:6930   */\n      0x4d7573742073656c6c206d6f7265207468616e203020746f6b656e7300000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6931   */\n      mstore\n        /* \"#utility.yul\":6760:6938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6944:7310   */\n    tag_382:\n        /* \"#utility.yul\":7086:7089   */\n      0x00\n        /* \"#utility.yul\":7107:7174   */\n      tag_490\n        /* \"#utility.yul\":7171:7173   */\n      0x1c\n        /* \"#utility.yul\":7166:7169   */\n      dup4\n        /* \"#utility.yul\":7107:7174   */\n      tag_360\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7100:7174   */\n      swap2\n      pop\n        /* \"#utility.yul\":7183:7276   */\n      tag_491\n        /* \"#utility.yul\":7272:7275   */\n      dup3\n        /* \"#utility.yul\":7183:7276   */\n      tag_381\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7301:7303   */\n      0x20\n        /* \"#utility.yul\":7296:7299   */\n      dup3\n        /* \"#utility.yul\":7292:7304   */\n      add\n        /* \"#utility.yul\":7285:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":6944:7310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7316:7735   */\n    tag_198:\n        /* \"#utility.yul\":7482:7486   */\n      0x00\n        /* \"#utility.yul\":7520:7522   */\n      0x20\n        /* \"#utility.yul\":7509:7518   */\n      dup3\n        /* \"#utility.yul\":7505:7523   */\n      add\n        /* \"#utility.yul\":7497:7523   */\n      swap1\n      pop\n        /* \"#utility.yul\":7569:7578   */\n      dup2\n        /* \"#utility.yul\":7563:7567   */\n      dup2\n        /* \"#utility.yul\":7559:7579   */\n      sub\n        /* \"#utility.yul\":7555:7556   */\n      0x00\n        /* \"#utility.yul\":7544:7553   */\n      dup4\n        /* \"#utility.yul\":7540:7557   */\n      add\n        /* \"#utility.yul\":7533:7580   */\n      mstore\n        /* \"#utility.yul\":7597:7728   */\n      tag_493\n        /* \"#utility.yul\":7723:7727   */\n      dup2\n        /* \"#utility.yul\":7597:7728   */\n      tag_382\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7589:7728   */\n      swap1\n      pop\n        /* \"#utility.yul\":7316:7735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7741:7917   */\n    tag_383:\n        /* \"#utility.yul\":7881:7909   */\n      0x496e73756666696369656e7420746f6b656e2062616c616e6365000000000000\n        /* \"#utility.yul\":7877:7878   */\n      0x00\n        /* \"#utility.yul\":7869:7875   */\n      dup3\n        /* \"#utility.yul\":7865:7879   */\n      add\n        /* \"#utility.yul\":7858:7910   */\n      mstore\n        /* \"#utility.yul\":7741:7917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7923:8289   */\n    tag_384:\n        /* \"#utility.yul\":8065:8068   */\n      0x00\n        /* \"#utility.yul\":8086:8153   */\n      tag_496\n        /* \"#utility.yul\":8150:8152   */\n      0x1a\n        /* \"#utility.yul\":8145:8148   */\n      dup4\n        /* \"#utility.yul\":8086:8153   */\n      tag_360\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8079:8153   */\n      swap2\n      pop\n        /* \"#utility.yul\":8162:8255   */\n      tag_497\n        /* \"#utility.yul\":8251:8254   */\n      dup3\n        /* \"#utility.yul\":8162:8255   */\n      tag_383\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8280:8282   */\n      0x20\n        /* \"#utility.yul\":8275:8278   */\n      dup3\n        /* \"#utility.yul\":8271:8283   */\n      add\n        /* \"#utility.yul\":8264:8283   */\n      swap1\n      pop\n        /* \"#utility.yul\":7923:8289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8295:8714   */\n    tag_202:\n        /* \"#utility.yul\":8461:8465   */\n      0x00\n        /* \"#utility.yul\":8499:8501   */\n      0x20\n        /* \"#utility.yul\":8488:8497   */\n      dup3\n        /* \"#utility.yul\":8484:8502   */\n      add\n        /* \"#utility.yul\":8476:8502   */\n      swap1\n      pop\n        /* \"#utility.yul\":8548:8557   */\n      dup2\n        /* \"#utility.yul\":8542:8546   */\n      dup2\n        /* \"#utility.yul\":8538:8558   */\n      sub\n        /* \"#utility.yul\":8534:8535   */\n      0x00\n        /* \"#utility.yul\":8523:8532   */\n      dup4\n        /* \"#utility.yul\":8519:8536   */\n      add\n        /* \"#utility.yul\":8512:8559   */\n      mstore\n        /* \"#utility.yul\":8576:8707   */\n      tag_499\n        /* \"#utility.yul\":8702:8706   */\n      dup2\n        /* \"#utility.yul\":8576:8707   */\n      tag_384\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8568:8707   */\n      swap1\n      pop\n        /* \"#utility.yul\":8295:8714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8720:8900   */\n    tag_385:\n        /* \"#utility.yul\":8768:8845   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8765:8766   */\n      0x00\n        /* \"#utility.yul\":8758:8846   */\n      mstore\n        /* \"#utility.yul\":8865:8869   */\n      0x11\n        /* \"#utility.yul\":8862:8863   */\n      0x04\n        /* \"#utility.yul\":8855:8870   */\n      mstore\n        /* \"#utility.yul\":8889:8893   */\n      0x24\n        /* \"#utility.yul\":8886:8887   */\n      0x00\n        /* \"#utility.yul\":8879:8894   */\n      revert\n        /* \"#utility.yul\":8906:9316   */\n    tag_205:\n        /* \"#utility.yul\":8946:8953   */\n      0x00\n        /* \"#utility.yul\":8969:8989   */\n      tag_502\n        /* \"#utility.yul\":8987:8988   */\n      dup3\n        /* \"#utility.yul\":8969:8989   */\n      tag_371\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8964:8989   */\n      swap2\n      pop\n        /* \"#utility.yul\":9003:9023   */\n      tag_503\n        /* \"#utility.yul\":9021:9022   */\n      dup4\n        /* \"#utility.yul\":9003:9023   */\n      tag_371\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8998:9023   */\n      swap3\n      pop\n        /* \"#utility.yul\":9058:9059   */\n      dup3\n        /* \"#utility.yul\":9055:9056   */\n      dup3\n        /* \"#utility.yul\":9051:9060   */\n      mul\n        /* \"#utility.yul\":9080:9110   */\n      tag_504\n        /* \"#utility.yul\":9098:9109   */\n      dup2\n        /* \"#utility.yul\":9080:9110   */\n      tag_371\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9069:9110   */\n      swap2\n      pop\n        /* \"#utility.yul\":9259:9260   */\n      dup3\n        /* \"#utility.yul\":9250:9257   */\n      dup3\n        /* \"#utility.yul\":9246:9261   */\n      div\n        /* \"#utility.yul\":9243:9244   */\n      dup5\n        /* \"#utility.yul\":9240:9262   */\n      eq\n        /* \"#utility.yul\":9220:9221   */\n      dup4\n        /* \"#utility.yul\":9213:9222   */\n      iszero\n        /* \"#utility.yul\":9193:9276   */\n      or\n        /* \"#utility.yul\":9170:9309   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9289:9307   */\n      tag_506\n      tag_385\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9170:9309   */\n    tag_505:\n        /* \"#utility.yul\":8954:9316   */\n      pop\n        /* \"#utility.yul\":8906:9316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9322:9502   */\n    tag_386:\n        /* \"#utility.yul\":9370:9447   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9367:9368   */\n      0x00\n        /* \"#utility.yul\":9360:9448   */\n      mstore\n        /* \"#utility.yul\":9467:9471   */\n      0x12\n        /* \"#utility.yul\":9464:9465   */\n      0x04\n        /* \"#utility.yul\":9457:9472   */\n      mstore\n        /* \"#utility.yul\":9491:9495   */\n      0x24\n        /* \"#utility.yul\":9488:9489   */\n      0x00\n        /* \"#utility.yul\":9481:9496   */\n      revert\n        /* \"#utility.yul\":9508:9693   */\n    tag_208:\n        /* \"#utility.yul\":9548:9549   */\n      0x00\n        /* \"#utility.yul\":9565:9585   */\n      tag_509\n        /* \"#utility.yul\":9583:9584   */\n      dup3\n        /* \"#utility.yul\":9565:9585   */\n      tag_371\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9560:9585   */\n      swap2\n      pop\n        /* \"#utility.yul\":9599:9619   */\n      tag_510\n        /* \"#utility.yul\":9617:9618   */\n      dup4\n        /* \"#utility.yul\":9599:9619   */\n      tag_371\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9594:9619   */\n      swap3\n      pop\n        /* \"#utility.yul\":9638:9639   */\n      dup3\n        /* \"#utility.yul\":9628:9663   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":9643:9661   */\n      tag_512\n      tag_386\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":9628:9663   */\n    tag_511:\n        /* \"#utility.yul\":9685:9686   */\n      dup3\n        /* \"#utility.yul\":9682:9683   */\n      dup3\n        /* \"#utility.yul\":9678:9687   */\n      div\n        /* \"#utility.yul\":9673:9687   */\n      swap1\n      pop\n        /* \"#utility.yul\":9508:9693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9699:9878   */\n    tag_387:\n        /* \"#utility.yul\":9839:9870   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n        /* \"#utility.yul\":9835:9836   */\n      0x00\n        /* \"#utility.yul\":9827:9833   */\n      dup3\n        /* \"#utility.yul\":9823:9837   */\n      add\n        /* \"#utility.yul\":9816:9871   */\n      mstore\n        /* \"#utility.yul\":9699:9878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9884:10250   */\n    tag_388:\n        /* \"#utility.yul\":10026:10029   */\n      0x00\n        /* \"#utility.yul\":10047:10114   */\n      tag_515\n        /* \"#utility.yul\":10111:10113   */\n      0x1d\n        /* \"#utility.yul\":10106:10109   */\n      dup4\n        /* \"#utility.yul\":10047:10114   */\n      tag_360\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10040:10114   */\n      swap2\n      pop\n        /* \"#utility.yul\":10123:10216   */\n      tag_516\n        /* \"#utility.yul\":10212:10215   */\n      dup3\n        /* \"#utility.yul\":10123:10216   */\n      tag_387\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10241:10243   */\n      0x20\n        /* \"#utility.yul\":10236:10239   */\n      dup3\n        /* \"#utility.yul\":10232:10244   */\n      add\n        /* \"#utility.yul\":10225:10244   */\n      swap1\n      pop\n        /* \"#utility.yul\":9884:10250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10256:10675   */\n    tag_211:\n        /* \"#utility.yul\":10422:10426   */\n      0x00\n        /* \"#utility.yul\":10460:10462   */\n      0x20\n        /* \"#utility.yul\":10449:10458   */\n      dup3\n        /* \"#utility.yul\":10445:10463   */\n      add\n        /* \"#utility.yul\":10437:10463   */\n      swap1\n      pop\n        /* \"#utility.yul\":10509:10518   */\n      dup2\n        /* \"#utility.yul\":10503:10507   */\n      dup2\n        /* \"#utility.yul\":10499:10519   */\n      sub\n        /* \"#utility.yul\":10495:10496   */\n      0x00\n        /* \"#utility.yul\":10484:10493   */\n      dup4\n        /* \"#utility.yul\":10480:10497   */\n      add\n        /* \"#utility.yul\":10473:10520   */\n      mstore\n        /* \"#utility.yul\":10537:10668   */\n      tag_518\n        /* \"#utility.yul\":10663:10667   */\n      dup2\n        /* \"#utility.yul\":10537:10668   */\n      tag_388\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10529:10668   */\n      swap1\n      pop\n        /* \"#utility.yul\":10256:10675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10681:11123   */\n    tag_216:\n        /* \"#utility.yul\":10830:10834   */\n      0x00\n        /* \"#utility.yul\":10868:10870   */\n      0x60\n        /* \"#utility.yul\":10857:10866   */\n      dup3\n        /* \"#utility.yul\":10853:10871   */\n      add\n        /* \"#utility.yul\":10845:10871   */\n      swap1\n      pop\n        /* \"#utility.yul\":10881:10952   */\n      tag_520\n        /* \"#utility.yul\":10949:10950   */\n      0x00\n        /* \"#utility.yul\":10938:10947   */\n      dup4\n        /* \"#utility.yul\":10934:10951   */\n      add\n        /* \"#utility.yul\":10925:10931   */\n      dup7\n        /* \"#utility.yul\":10881:10952   */\n      tag_379\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10962:11034   */\n      tag_521\n        /* \"#utility.yul\":11030:11032   */\n      0x20\n        /* \"#utility.yul\":11019:11028   */\n      dup4\n        /* \"#utility.yul\":11015:11033   */\n      add\n        /* \"#utility.yul\":11006:11012   */\n      dup6\n        /* \"#utility.yul\":10962:11034   */\n      tag_376\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11044:11116   */\n      tag_522\n        /* \"#utility.yul\":11112:11114   */\n      0x40\n        /* \"#utility.yul\":11101:11110   */\n      dup4\n        /* \"#utility.yul\":11097:11115   */\n      add\n        /* \"#utility.yul\":11088:11094   */\n      dup5\n        /* \"#utility.yul\":11044:11116   */\n      tag_376\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10681:11123   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11129:11305   */\n    tag_389:\n        /* \"#utility.yul\":11269:11297   */\n      0x496e76616c696420707269636520666565642061646472657373000000000000\n        /* \"#utility.yul\":11265:11266   */\n      0x00\n        /* \"#utility.yul\":11257:11263   */\n      dup3\n        /* \"#utility.yul\":11253:11267   */\n      add\n        /* \"#utility.yul\":11246:11298   */\n      mstore\n        /* \"#utility.yul\":11129:11305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11311:11677   */\n    tag_390:\n        /* \"#utility.yul\":11453:11456   */\n      0x00\n        /* \"#utility.yul\":11474:11541   */\n      tag_525\n        /* \"#utility.yul\":11538:11540   */\n      0x1a\n        /* \"#utility.yul\":11533:11536   */\n      dup4\n        /* \"#utility.yul\":11474:11541   */\n      tag_360\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11467:11541   */\n      swap2\n      pop\n        /* \"#utility.yul\":11550:11643   */\n      tag_526\n        /* \"#utility.yul\":11639:11642   */\n      dup3\n        /* \"#utility.yul\":11550:11643   */\n      tag_389\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11668:11670   */\n      0x20\n        /* \"#utility.yul\":11663:11666   */\n      dup3\n        /* \"#utility.yul\":11659:11671   */\n      add\n        /* \"#utility.yul\":11652:11671   */\n      swap1\n      pop\n        /* \"#utility.yul\":11311:11677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11683:12102   */\n    tag_228:\n        /* \"#utility.yul\":11849:11853   */\n      0x00\n        /* \"#utility.yul\":11887:11889   */\n      0x20\n        /* \"#utility.yul\":11876:11885   */\n      dup3\n        /* \"#utility.yul\":11872:11890   */\n      add\n        /* \"#utility.yul\":11864:11890   */\n      swap1\n      pop\n        /* \"#utility.yul\":11936:11945   */\n      dup2\n        /* \"#utility.yul\":11930:11934   */\n      dup2\n        /* \"#utility.yul\":11926:11946   */\n      sub\n        /* \"#utility.yul\":11922:11923   */\n      0x00\n        /* \"#utility.yul\":11911:11920   */\n      dup4\n        /* \"#utility.yul\":11907:11924   */\n      add\n        /* \"#utility.yul\":11900:11947   */\n      mstore\n        /* \"#utility.yul\":11964:12095   */\n      tag_528\n        /* \"#utility.yul\":12090:12094   */\n      dup2\n        /* \"#utility.yul\":11964:12095   */\n      tag_390\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11956:12095   */\n      swap1\n      pop\n        /* \"#utility.yul\":11683:12102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12108:12213   */\n    tag_391:\n        /* \"#utility.yul\":12144:12151   */\n      0x00\n        /* \"#utility.yul\":12184:12206   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":12177:12182   */\n      dup3\n        /* \"#utility.yul\":12173:12207   */\n      and\n        /* \"#utility.yul\":12162:12207   */\n      swap1\n      pop\n        /* \"#utility.yul\":12108:12213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12219:12339   */\n    tag_392:\n        /* \"#utility.yul\":12291:12314   */\n      tag_531\n        /* \"#utility.yul\":12308:12313   */\n      dup2\n        /* \"#utility.yul\":12291:12314   */\n      tag_391\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12284:12289   */\n      dup2\n        /* \"#utility.yul\":12281:12315   */\n      eq\n        /* \"#utility.yul\":12271:12333   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":12329:12330   */\n      0x00\n        /* \"#utility.yul\":12326:12327   */\n      dup1\n        /* \"#utility.yul\":12319:12331   */\n      revert\n        /* \"#utility.yul\":12271:12333   */\n    tag_532:\n        /* \"#utility.yul\":12219:12339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12345:12486   */\n    tag_393:\n        /* \"#utility.yul\":12401:12406   */\n      0x00\n        /* \"#utility.yul\":12432:12438   */\n      dup2\n        /* \"#utility.yul\":12426:12439   */\n      mload\n        /* \"#utility.yul\":12417:12439   */\n      swap1\n      pop\n        /* \"#utility.yul\":12448:12480   */\n      tag_534\n        /* \"#utility.yul\":12474:12479   */\n      dup2\n        /* \"#utility.yul\":12448:12480   */\n      tag_392\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12345:12486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12492:12568   */\n    tag_394:\n        /* \"#utility.yul\":12528:12535   */\n      0x00\n        /* \"#utility.yul\":12557:12562   */\n      dup2\n        /* \"#utility.yul\":12546:12562   */\n      swap1\n      pop\n        /* \"#utility.yul\":12492:12568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12574:12694   */\n    tag_395:\n        /* \"#utility.yul\":12646:12669   */\n      tag_537\n        /* \"#utility.yul\":12663:12668   */\n      dup2\n        /* \"#utility.yul\":12646:12669   */\n      tag_394\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12639:12644   */\n      dup2\n        /* \"#utility.yul\":12636:12670   */\n      eq\n        /* \"#utility.yul\":12626:12688   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":12684:12685   */\n      0x00\n        /* \"#utility.yul\":12681:12682   */\n      dup1\n        /* \"#utility.yul\":12674:12686   */\n      revert\n        /* \"#utility.yul\":12626:12688   */\n    tag_538:\n        /* \"#utility.yul\":12574:12694   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12700:12841   */\n    tag_396:\n        /* \"#utility.yul\":12756:12761   */\n      0x00\n        /* \"#utility.yul\":12787:12793   */\n      dup2\n        /* \"#utility.yul\":12781:12794   */\n      mload\n        /* \"#utility.yul\":12772:12794   */\n      swap1\n      pop\n        /* \"#utility.yul\":12803:12835   */\n      tag_540\n        /* \"#utility.yul\":12829:12834   */\n      dup2\n        /* \"#utility.yul\":12803:12835   */\n      tag_395\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12700:12841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12847:12990   */\n    tag_397:\n        /* \"#utility.yul\":12904:12909   */\n      0x00\n        /* \"#utility.yul\":12935:12941   */\n      dup2\n        /* \"#utility.yul\":12929:12942   */\n      mload\n        /* \"#utility.yul\":12920:12942   */\n      swap1\n      pop\n        /* \"#utility.yul\":12951:12984   */\n      tag_542\n        /* \"#utility.yul\":12978:12983   */\n      dup2\n        /* \"#utility.yul\":12951:12984   */\n      tag_372\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12847:12990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12996:13967   */\n    tag_238:\n        /* \"#utility.yul\":13099:13105   */\n      0x00\n        /* \"#utility.yul\":13107:13113   */\n      dup1\n        /* \"#utility.yul\":13115:13121   */\n      0x00\n        /* \"#utility.yul\":13123:13129   */\n      dup1\n        /* \"#utility.yul\":13131:13137   */\n      0x00\n        /* \"#utility.yul\":13180:13183   */\n      0xa0\n        /* \"#utility.yul\":13168:13177   */\n      dup7\n        /* \"#utility.yul\":13159:13166   */\n      dup9\n        /* \"#utility.yul\":13155:13178   */\n      sub\n        /* \"#utility.yul\":13151:13184   */\n      slt\n        /* \"#utility.yul\":13148:13268   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":13187:13266   */\n      tag_545\n      tag_365\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13148:13268   */\n    tag_544:\n        /* \"#utility.yul\":13307:13308   */\n      0x00\n        /* \"#utility.yul\":13332:13395   */\n      tag_546\n        /* \"#utility.yul\":13387:13394   */\n      dup9\n        /* \"#utility.yul\":13378:13384   */\n      dup3\n        /* \"#utility.yul\":13367:13376   */\n      dup10\n        /* \"#utility.yul\":13363:13385   */\n      add\n        /* \"#utility.yul\":13332:13395   */\n      tag_393\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13322:13395   */\n      swap6\n      pop\n        /* \"#utility.yul\":13278:13405   */\n      pop\n        /* \"#utility.yul\":13444:13446   */\n      0x20\n        /* \"#utility.yul\":13470:13533   */\n      tag_547\n        /* \"#utility.yul\":13525:13532   */\n      dup9\n        /* \"#utility.yul\":13516:13522   */\n      dup3\n        /* \"#utility.yul\":13505:13514   */\n      dup10\n        /* \"#utility.yul\":13501:13523   */\n      add\n        /* \"#utility.yul\":13470:13533   */\n      tag_396\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13460:13533   */\n      swap5\n      pop\n        /* \"#utility.yul\":13415:13543   */\n      pop\n        /* \"#utility.yul\":13582:13584   */\n      0x40\n        /* \"#utility.yul\":13608:13672   */\n      tag_548\n        /* \"#utility.yul\":13664:13671   */\n      dup9\n        /* \"#utility.yul\":13655:13661   */\n      dup3\n        /* \"#utility.yul\":13644:13653   */\n      dup10\n        /* \"#utility.yul\":13640:13662   */\n      add\n        /* \"#utility.yul\":13608:13672   */\n      tag_397\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":13598:13672   */\n      swap4\n      pop\n        /* \"#utility.yul\":13553:13682   */\n      pop\n        /* \"#utility.yul\":13721:13723   */\n      0x60\n        /* \"#utility.yul\":13747:13811   */\n      tag_549\n        /* \"#utility.yul\":13803:13810   */\n      dup9\n        /* \"#utility.yul\":13794:13800   */\n      dup3\n        /* \"#utility.yul\":13783:13792   */\n      dup10\n        /* \"#utility.yul\":13779:13801   */\n      add\n        /* \"#utility.yul\":13747:13811   */\n      tag_397\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13737:13811   */\n      swap3\n      pop\n        /* \"#utility.yul\":13692:13821   */\n      pop\n        /* \"#utility.yul\":13860:13863   */\n      0x80\n        /* \"#utility.yul\":13887:13950   */\n      tag_550\n        /* \"#utility.yul\":13942:13949   */\n      dup9\n        /* \"#utility.yul\":13933:13939   */\n      dup3\n        /* \"#utility.yul\":13922:13931   */\n      dup10\n        /* \"#utility.yul\":13918:13940   */\n      add\n        /* \"#utility.yul\":13887:13950   */\n      tag_393\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13877:13950   */\n      swap2\n      pop\n        /* \"#utility.yul\":13831:13960   */\n      pop\n        /* \"#utility.yul\":12996:13967   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13973:14167   */\n    tag_251:\n        /* \"#utility.yul\":14013:14017   */\n      0x00\n        /* \"#utility.yul\":14033:14053   */\n      tag_552\n        /* \"#utility.yul\":14051:14052   */\n      dup3\n        /* \"#utility.yul\":14033:14053   */\n      tag_371\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":14028:14053   */\n      swap2\n      pop\n        /* \"#utility.yul\":14067:14087   */\n      tag_553\n        /* \"#utility.yul\":14085:14086   */\n      dup4\n        /* \"#utility.yul\":14067:14087   */\n      tag_371\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14062:14087   */\n      swap3\n      pop\n        /* \"#utility.yul\":14111:14112   */\n      dup3\n        /* \"#utility.yul\":14108:14109   */\n      dup3\n        /* \"#utility.yul\":14104:14113   */\n      sub\n        /* \"#utility.yul\":14096:14113   */\n      swap1\n      pop\n        /* \"#utility.yul\":14135:14136   */\n      dup2\n        /* \"#utility.yul\":14129:14133   */\n      dup2\n        /* \"#utility.yul\":14126:14137   */\n      gt\n        /* \"#utility.yul\":14123:14160   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":14140:14158   */\n      tag_555\n      tag_385\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":14123:14160   */\n    tag_554:\n        /* \"#utility.yul\":13973:14167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14173:14352   */\n    tag_398:\n        /* \"#utility.yul\":14313:14344   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":14309:14310   */\n      0x00\n        /* \"#utility.yul\":14301:14307   */\n      dup3\n        /* \"#utility.yul\":14297:14311   */\n      add\n        /* \"#utility.yul\":14290:14345   */\n      mstore\n        /* \"#utility.yul\":14173:14352   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14358:14724   */\n    tag_399:\n        /* \"#utility.yul\":14500:14503   */\n      0x00\n        /* \"#utility.yul\":14521:14588   */\n      tag_558\n        /* \"#utility.yul\":14585:14587   */\n      0x1d\n        /* \"#utility.yul\":14580:14583   */\n      dup4\n        /* \"#utility.yul\":14521:14588   */\n      tag_360\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14514:14588   */\n      swap2\n      pop\n        /* \"#utility.yul\":14597:14690   */\n      tag_559\n        /* \"#utility.yul\":14686:14689   */\n      dup3\n        /* \"#utility.yul\":14597:14690   */\n      tag_398\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14715:14717   */\n      0x20\n        /* \"#utility.yul\":14710:14713   */\n      dup3\n        /* \"#utility.yul\":14706:14718   */\n      add\n        /* \"#utility.yul\":14699:14718   */\n      swap1\n      pop\n        /* \"#utility.yul\":14358:14724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14730:15149   */\n    tag_259:\n        /* \"#utility.yul\":14896:14900   */\n      0x00\n        /* \"#utility.yul\":14934:14936   */\n      0x20\n        /* \"#utility.yul\":14923:14932   */\n      dup3\n        /* \"#utility.yul\":14919:14937   */\n      add\n        /* \"#utility.yul\":14911:14937   */\n      swap1\n      pop\n        /* \"#utility.yul\":14983:14992   */\n      dup2\n        /* \"#utility.yul\":14977:14981   */\n      dup2\n        /* \"#utility.yul\":14973:14993   */\n      sub\n        /* \"#utility.yul\":14969:14970   */\n      0x00\n        /* \"#utility.yul\":14958:14967   */\n      dup4\n        /* \"#utility.yul\":14954:14971   */\n      add\n        /* \"#utility.yul\":14947:14994   */\n      mstore\n        /* \"#utility.yul\":15011:15142   */\n      tag_561\n        /* \"#utility.yul\":15137:15141   */\n      dup2\n        /* \"#utility.yul\":15011:15142   */\n      tag_399\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":15003:15142   */\n      swap1\n      pop\n        /* \"#utility.yul\":14730:15149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15155:15325   */\n    tag_400:\n        /* \"#utility.yul\":15295:15317   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":15291:15292   */\n      0x00\n        /* \"#utility.yul\":15283:15289   */\n      dup3\n        /* \"#utility.yul\":15279:15293   */\n      add\n        /* \"#utility.yul\":15272:15318   */\n      mstore\n        /* \"#utility.yul\":15155:15325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15331:15697   */\n    tag_401:\n        /* \"#utility.yul\":15473:15476   */\n      0x00\n        /* \"#utility.yul\":15494:15561   */\n      tag_564\n        /* \"#utility.yul\":15558:15560   */\n      0x14\n        /* \"#utility.yul\":15553:15556   */\n      dup4\n        /* \"#utility.yul\":15494:15561   */\n      tag_360\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15487:15561   */\n      swap2\n      pop\n        /* \"#utility.yul\":15570:15663   */\n      tag_565\n        /* \"#utility.yul\":15659:15662   */\n      dup3\n        /* \"#utility.yul\":15570:15663   */\n      tag_400\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15688:15690   */\n      0x20\n        /* \"#utility.yul\":15683:15686   */\n      dup3\n        /* \"#utility.yul\":15679:15691   */\n      add\n        /* \"#utility.yul\":15672:15691   */\n      swap1\n      pop\n        /* \"#utility.yul\":15331:15697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15703:16122   */\n    tag_263:\n        /* \"#utility.yul\":15869:15873   */\n      0x00\n        /* \"#utility.yul\":15907:15909   */\n      0x20\n        /* \"#utility.yul\":15896:15905   */\n      dup3\n        /* \"#utility.yul\":15892:15910   */\n      add\n        /* \"#utility.yul\":15884:15910   */\n      swap1\n      pop\n        /* \"#utility.yul\":15956:15965   */\n      dup2\n        /* \"#utility.yul\":15950:15954   */\n      dup2\n        /* \"#utility.yul\":15946:15966   */\n      sub\n        /* \"#utility.yul\":15942:15943   */\n      0x00\n        /* \"#utility.yul\":15931:15940   */\n      dup4\n        /* \"#utility.yul\":15927:15944   */\n      add\n        /* \"#utility.yul\":15920:15967   */\n      mstore\n        /* \"#utility.yul\":15984:16115   */\n      tag_567\n        /* \"#utility.yul\":16110:16114   */\n      dup2\n        /* \"#utility.yul\":15984:16115   */\n      tag_401\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15976:16115   */\n      swap1\n      pop\n        /* \"#utility.yul\":15703:16122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16128:16319   */\n    tag_267:\n        /* \"#utility.yul\":16168:16171   */\n      0x00\n        /* \"#utility.yul\":16187:16207   */\n      tag_569\n        /* \"#utility.yul\":16205:16206   */\n      dup3\n        /* \"#utility.yul\":16187:16207   */\n      tag_371\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16182:16207   */\n      swap2\n      pop\n        /* \"#utility.yul\":16221:16241   */\n      tag_570\n        /* \"#utility.yul\":16239:16240   */\n      dup4\n        /* \"#utility.yul\":16221:16241   */\n      tag_371\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16216:16241   */\n      swap3\n      pop\n        /* \"#utility.yul\":16264:16265   */\n      dup3\n        /* \"#utility.yul\":16261:16262   */\n      dup3\n        /* \"#utility.yul\":16257:16266   */\n      add\n        /* \"#utility.yul\":16250:16266   */\n      swap1\n      pop\n        /* \"#utility.yul\":16285:16288   */\n      dup1\n        /* \"#utility.yul\":16282:16283   */\n      dup3\n        /* \"#utility.yul\":16279:16289   */\n      gt\n        /* \"#utility.yul\":16276:16312   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":16292:16310   */\n      tag_572\n      tag_385\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16276:16312   */\n    tag_571:\n        /* \"#utility.yul\":16128:16319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16325:16556   */\n    tag_402:\n        /* \"#utility.yul\":16465:16499   */\n      0x506c65617365207761697420323420686f757273206265747765656e20666175\n        /* \"#utility.yul\":16461:16462   */\n      0x00\n        /* \"#utility.yul\":16453:16459   */\n      dup3\n        /* \"#utility.yul\":16449:16463   */\n      add\n        /* \"#utility.yul\":16442:16500   */\n      mstore\n        /* \"#utility.yul\":16534:16548   */\n      0x6365742072657175657374730000000000000000000000000000000000000000\n        /* \"#utility.yul\":16529:16531   */\n      0x20\n        /* \"#utility.yul\":16521:16527   */\n      dup3\n        /* \"#utility.yul\":16517:16532   */\n      add\n        /* \"#utility.yul\":16510:16549   */\n      mstore\n        /* \"#utility.yul\":16325:16556   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16562:16928   */\n    tag_403:\n        /* \"#utility.yul\":16704:16707   */\n      0x00\n        /* \"#utility.yul\":16725:16792   */\n      tag_575\n        /* \"#utility.yul\":16789:16791   */\n      0x2c\n        /* \"#utility.yul\":16784:16787   */\n      dup4\n        /* \"#utility.yul\":16725:16792   */\n      tag_360\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16718:16792   */\n      swap2\n      pop\n        /* \"#utility.yul\":16801:16894   */\n      tag_576\n        /* \"#utility.yul\":16890:16893   */\n      dup3\n        /* \"#utility.yul\":16801:16894   */\n      tag_402\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16919:16921   */\n      0x40\n        /* \"#utility.yul\":16914:16917   */\n      dup3\n        /* \"#utility.yul\":16910:16922   */\n      add\n        /* \"#utility.yul\":16903:16922   */\n      swap1\n      pop\n        /* \"#utility.yul\":16562:16928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16934:17353   */\n    tag_270:\n        /* \"#utility.yul\":17100:17104   */\n      0x00\n        /* \"#utility.yul\":17138:17140   */\n      0x20\n        /* \"#utility.yul\":17127:17136   */\n      dup3\n        /* \"#utility.yul\":17123:17141   */\n      add\n        /* \"#utility.yul\":17115:17141   */\n      swap1\n      pop\n        /* \"#utility.yul\":17187:17196   */\n      dup2\n        /* \"#utility.yul\":17181:17185   */\n      dup2\n        /* \"#utility.yul\":17177:17197   */\n      sub\n        /* \"#utility.yul\":17173:17174   */\n      0x00\n        /* \"#utility.yul\":17162:17171   */\n      dup4\n        /* \"#utility.yul\":17158:17175   */\n      add\n        /* \"#utility.yul\":17151:17198   */\n      mstore\n        /* \"#utility.yul\":17215:17346   */\n      tag_578\n        /* \"#utility.yul\":17341:17345   */\n      dup2\n        /* \"#utility.yul\":17215:17346   */\n      tag_403\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17207:17346   */\n      swap1\n      pop\n        /* \"#utility.yul\":16934:17353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17359:17524   */\n    tag_404:\n        /* \"#utility.yul\":17499:17516   */\n      0x46617563657420697320656d7074790000000000000000000000000000000000\n        /* \"#utility.yul\":17495:17496   */\n      0x00\n        /* \"#utility.yul\":17487:17493   */\n      dup3\n        /* \"#utility.yul\":17483:17497   */\n      add\n        /* \"#utility.yul\":17476:17517   */\n      mstore\n        /* \"#utility.yul\":17359:17524   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17530:17896   */\n    tag_405:\n        /* \"#utility.yul\":17672:17675   */\n      0x00\n        /* \"#utility.yul\":17693:17760   */\n      tag_581\n        /* \"#utility.yul\":17757:17759   */\n      0x0f\n        /* \"#utility.yul\":17752:17755   */\n      dup4\n        /* \"#utility.yul\":17693:17760   */\n      tag_360\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17686:17760   */\n      swap2\n      pop\n        /* \"#utility.yul\":17769:17862   */\n      tag_582\n        /* \"#utility.yul\":17858:17861   */\n      dup3\n        /* \"#utility.yul\":17769:17862   */\n      tag_404\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17887:17889   */\n      0x20\n        /* \"#utility.yul\":17882:17885   */\n      dup3\n        /* \"#utility.yul\":17878:17890   */\n      add\n        /* \"#utility.yul\":17871:17890   */\n      swap1\n      pop\n        /* \"#utility.yul\":17530:17896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17902:18321   */\n    tag_274:\n        /* \"#utility.yul\":18068:18072   */\n      0x00\n        /* \"#utility.yul\":18106:18108   */\n      0x20\n        /* \"#utility.yul\":18095:18104   */\n      dup3\n        /* \"#utility.yul\":18091:18109   */\n      add\n        /* \"#utility.yul\":18083:18109   */\n      swap1\n      pop\n        /* \"#utility.yul\":18155:18164   */\n      dup2\n        /* \"#utility.yul\":18149:18153   */\n      dup2\n        /* \"#utility.yul\":18145:18165   */\n      sub\n        /* \"#utility.yul\":18141:18142   */\n      0x00\n        /* \"#utility.yul\":18130:18139   */\n      dup4\n        /* \"#utility.yul\":18126:18143   */\n      add\n        /* \"#utility.yul\":18119:18166   */\n      mstore\n        /* \"#utility.yul\":18183:18314   */\n      tag_584\n        /* \"#utility.yul\":18309:18313   */\n      dup2\n        /* \"#utility.yul\":18183:18314   */\n      tag_405\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18175:18314   */\n      swap1\n      pop\n        /* \"#utility.yul\":17902:18321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18327:18659   */\n    tag_277:\n        /* \"#utility.yul\":18448:18452   */\n      0x00\n        /* \"#utility.yul\":18486:18488   */\n      0x40\n        /* \"#utility.yul\":18475:18484   */\n      dup3\n        /* \"#utility.yul\":18471:18489   */\n      add\n        /* \"#utility.yul\":18463:18489   */\n      swap1\n      pop\n        /* \"#utility.yul\":18499:18570   */\n      tag_586\n        /* \"#utility.yul\":18567:18568   */\n      0x00\n        /* \"#utility.yul\":18556:18565   */\n      dup4\n        /* \"#utility.yul\":18552:18569   */\n      add\n        /* \"#utility.yul\":18543:18549   */\n      dup6\n        /* \"#utility.yul\":18499:18570   */\n      tag_379\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":18580:18652   */\n      tag_587\n        /* \"#utility.yul\":18648:18650   */\n      0x20\n        /* \"#utility.yul\":18637:18646   */\n      dup4\n        /* \"#utility.yul\":18633:18651   */\n      add\n        /* \"#utility.yul\":18624:18630   */\n      dup5\n        /* \"#utility.yul\":18580:18652   */\n      tag_376\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18327:18659   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18665:18842   */\n    tag_406:\n        /* \"#utility.yul\":18805:18834   */\n      0x4d7573742073656e642045544820746f2062757920746f6b656e730000000000\n        /* \"#utility.yul\":18801:18802   */\n      0x00\n        /* \"#utility.yul\":18793:18799   */\n      dup3\n        /* \"#utility.yul\":18789:18803   */\n      add\n        /* \"#utility.yul\":18782:18835   */\n      mstore\n        /* \"#utility.yul\":18665:18842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18848:19214   */\n    tag_407:\n        /* \"#utility.yul\":18990:18993   */\n      0x00\n        /* \"#utility.yul\":19011:19078   */\n      tag_590\n        /* \"#utility.yul\":19075:19077   */\n      0x1b\n        /* \"#utility.yul\":19070:19073   */\n      dup4\n        /* \"#utility.yul\":19011:19078   */\n      tag_360\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19004:19078   */\n      swap2\n      pop\n        /* \"#utility.yul\":19087:19180   */\n      tag_591\n        /* \"#utility.yul\":19176:19179   */\n      dup3\n        /* \"#utility.yul\":19087:19180   */\n      tag_406\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":19205:19207   */\n      0x20\n        /* \"#utility.yul\":19200:19203   */\n      dup3\n        /* \"#utility.yul\":19196:19208   */\n      add\n        /* \"#utility.yul\":19189:19208   */\n      swap1\n      pop\n        /* \"#utility.yul\":18848:19214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19220:19639   */\n    tag_288:\n        /* \"#utility.yul\":19386:19390   */\n      0x00\n        /* \"#utility.yul\":19424:19426   */\n      0x20\n        /* \"#utility.yul\":19413:19422   */\n      dup3\n        /* \"#utility.yul\":19409:19427   */\n      add\n        /* \"#utility.yul\":19401:19427   */\n      swap1\n      pop\n        /* \"#utility.yul\":19473:19482   */\n      dup2\n        /* \"#utility.yul\":19467:19471   */\n      dup2\n        /* \"#utility.yul\":19463:19483   */\n      sub\n        /* \"#utility.yul\":19459:19460   */\n      0x00\n        /* \"#utility.yul\":19448:19457   */\n      dup4\n        /* \"#utility.yul\":19444:19461   */\n      add\n        /* \"#utility.yul\":19437:19484   */\n      mstore\n        /* \"#utility.yul\":19501:19632   */\n      tag_593\n        /* \"#utility.yul\":19627:19631   */\n      dup2\n        /* \"#utility.yul\":19501:19632   */\n      tag_407\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":19493:19632   */\n      swap1\n      pop\n        /* \"#utility.yul\":19220:19639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19645:19815   */\n    tag_408:\n        /* \"#utility.yul\":19785:19807   */\n      0x45544820616d6f756e7420746f6f20736d616c6c000000000000000000000000\n        /* \"#utility.yul\":19781:19782   */\n      0x00\n        /* \"#utility.yul\":19773:19779   */\n      dup3\n        /* \"#utility.yul\":19769:19783   */\n      add\n        /* \"#utility.yul\":19762:19808   */\n      mstore\n        /* \"#utility.yul\":19645:19815   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19821:20187   */\n    tag_409:\n        /* \"#utility.yul\":19963:19966   */\n      0x00\n        /* \"#utility.yul\":19984:20051   */\n      tag_596\n        /* \"#utility.yul\":20048:20050   */\n      0x14\n        /* \"#utility.yul\":20043:20046   */\n      dup4\n        /* \"#utility.yul\":19984:20051   */\n      tag_360\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19977:20051   */\n      swap2\n      pop\n        /* \"#utility.yul\":20060:20153   */\n      tag_597\n        /* \"#utility.yul\":20149:20152   */\n      dup3\n        /* \"#utility.yul\":20060:20153   */\n      tag_408\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20178:20180   */\n      0x20\n        /* \"#utility.yul\":20173:20176   */\n      dup3\n        /* \"#utility.yul\":20169:20181   */\n      add\n        /* \"#utility.yul\":20162:20181   */\n      swap1\n      pop\n        /* \"#utility.yul\":19821:20187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20193:20612   */\n    tag_292:\n        /* \"#utility.yul\":20359:20363   */\n      0x00\n        /* \"#utility.yul\":20397:20399   */\n      0x20\n        /* \"#utility.yul\":20386:20395   */\n      dup3\n        /* \"#utility.yul\":20382:20400   */\n      add\n        /* \"#utility.yul\":20374:20400   */\n      swap1\n      pop\n        /* \"#utility.yul\":20446:20455   */\n      dup2\n        /* \"#utility.yul\":20440:20444   */\n      dup2\n        /* \"#utility.yul\":20436:20456   */\n      sub\n        /* \"#utility.yul\":20432:20433   */\n      0x00\n        /* \"#utility.yul\":20421:20430   */\n      dup4\n        /* \"#utility.yul\":20417:20434   */\n      add\n        /* \"#utility.yul\":20410:20457   */\n      mstore\n        /* \"#utility.yul\":20474:20605   */\n      tag_599\n        /* \"#utility.yul\":20600:20604   */\n      dup2\n        /* \"#utility.yul\":20474:20605   */\n      tag_409\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":20466:20605   */\n      swap1\n      pop\n        /* \"#utility.yul\":20193:20612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20618:20786   */\n    tag_410:\n        /* \"#utility.yul\":20758:20778   */\n      0x4e6f2045544820746f2077697468647261770000000000000000000000000000\n        /* \"#utility.yul\":20754:20755   */\n      0x00\n        /* \"#utility.yul\":20746:20752   */\n      dup3\n        /* \"#utility.yul\":20742:20756   */\n      add\n        /* \"#utility.yul\":20735:20779   */\n      mstore\n        /* \"#utility.yul\":20618:20786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20792:21158   */\n    tag_411:\n        /* \"#utility.yul\":20934:20937   */\n      0x00\n        /* \"#utility.yul\":20955:21022   */\n      tag_602\n        /* \"#utility.yul\":21019:21021   */\n      0x12\n        /* \"#utility.yul\":21014:21017   */\n      dup4\n        /* \"#utility.yul\":20955:21022   */\n      tag_360\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":20948:21022   */\n      swap2\n      pop\n        /* \"#utility.yul\":21031:21124   */\n      tag_603\n        /* \"#utility.yul\":21120:21123   */\n      dup3\n        /* \"#utility.yul\":21031:21124   */\n      tag_410\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21149:21151   */\n      0x20\n        /* \"#utility.yul\":21144:21147   */\n      dup3\n        /* \"#utility.yul\":21140:21152   */\n      add\n        /* \"#utility.yul\":21133:21152   */\n      swap1\n      pop\n        /* \"#utility.yul\":20792:21158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21164:21583   */\n    tag_301:\n        /* \"#utility.yul\":21330:21334   */\n      0x00\n        /* \"#utility.yul\":21368:21370   */\n      0x20\n        /* \"#utility.yul\":21357:21366   */\n      dup3\n        /* \"#utility.yul\":21353:21371   */\n      add\n        /* \"#utility.yul\":21345:21371   */\n      swap1\n      pop\n        /* \"#utility.yul\":21417:21426   */\n      dup2\n        /* \"#utility.yul\":21411:21415   */\n      dup2\n        /* \"#utility.yul\":21407:21427   */\n      sub\n        /* \"#utility.yul\":21403:21404   */\n      0x00\n        /* \"#utility.yul\":21392:21401   */\n      dup4\n        /* \"#utility.yul\":21388:21405   */\n      add\n        /* \"#utility.yul\":21381:21428   */\n      mstore\n        /* \"#utility.yul\":21445:21576   */\n      tag_605\n        /* \"#utility.yul\":21571:21575   */\n      dup2\n        /* \"#utility.yul\":21445:21576   */\n      tag_411\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":21437:21576   */\n      swap1\n      pop\n        /* \"#utility.yul\":21164:21583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220175b9d67b782a0f8282649bb21f01726efaa5978f65b9197e2f774617d4fe11b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1107": {
									"entryPoint": null,
									"id": 1107,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_382": {
									"entryPoint": null,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_685": {
									"entryPoint": 649,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 446,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_652": {
									"entryPoint": 782,
									"id": 652,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_409": {
									"entryPoint": 641,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10953:9",
										"nodeType": "YulBlock",
										"src": "0:10953:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "939:413:9",
													"nodeType": "YulBlock",
													"src": "939:413:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:9",
																"nodeType": "YulBlock",
																"src": "985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:9"
																			},
																			"nativeSrc": "987:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:9"
																		},
																		"nativeSrc": "987:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:9"
																		},
																		"nativeSrc": "956:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:9",
																		"nodeType": "YulLiteral",
																		"src": "981:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:9"
																},
																"nativeSrc": "952:32:9",
																"nodeType": "YulFunctionCall",
																"src": "952:32:9"
															},
															"nativeSrc": "949:119:9",
															"nodeType": "YulIf",
															"src": "949:119:9"
														},
														{
															"nativeSrc": "1078:128:9",
															"nodeType": "YulBlock",
															"src": "1078:128:9",
															"statements": [
																{
																	"nativeSrc": "1093:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:9"
																				},
																				"nativeSrc": "1164:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:9"
																		},
																		"nativeSrc": "1132:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:9",
															"nodeType": "YulBlock",
															"src": "1216:129:9",
															"statements": [
																{
																	"nativeSrc": "1231:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:9"
																				},
																				"nativeSrc": "1303:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:9"
																		},
																		"nativeSrc": "1271:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:9",
														"nodeType": "YulTypedName",
														"src": "901:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:9",
														"nodeType": "YulTypedName",
														"src": "912:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:9",
														"nodeType": "YulTypedName",
														"src": "924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:9",
														"nodeType": "YulTypedName",
														"src": "932:6:9",
														"type": ""
													}
												],
												"src": "845:507:9"
											},
											{
												"body": {
													"nativeSrc": "1417:40:9",
													"nodeType": "YulBlock",
													"src": "1417:40:9",
													"statements": [
														{
															"nativeSrc": "1428:22:9",
															"nodeType": "YulAssignment",
															"src": "1428:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:9"
																},
																"nativeSrc": "1438:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:9",
														"nodeType": "YulTypedName",
														"src": "1400:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:9",
														"nodeType": "YulTypedName",
														"src": "1410:6:9",
														"type": ""
													}
												],
												"src": "1358:99:9"
											},
											{
												"body": {
													"nativeSrc": "1491:152:9",
													"nodeType": "YulBlock",
													"src": "1491:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:9"
																},
																"nativeSrc": "1501:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:9"
															},
															"nativeSrc": "1501:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:9"
																},
																"nativeSrc": "1598:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:9"
															},
															"nativeSrc": "1598:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:9"
																},
																"nativeSrc": "1622:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:9"
															},
															"nativeSrc": "1622:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:9"
											},
											{
												"body": {
													"nativeSrc": "1677:152:9",
													"nodeType": "YulBlock",
													"src": "1677:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:9"
																},
																"nativeSrc": "1687:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:9"
															},
															"nativeSrc": "1687:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:9"
																},
																"nativeSrc": "1784:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:9"
															},
															"nativeSrc": "1784:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:9"
																},
																"nativeSrc": "1808:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:9"
															},
															"nativeSrc": "1808:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:9"
											},
											{
												"body": {
													"nativeSrc": "1886:269:9",
													"nodeType": "YulBlock",
													"src": "1886:269:9",
													"statements": [
														{
															"nativeSrc": "1896:22:9",
															"nodeType": "YulAssignment",
															"src": "1896:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:9"
																},
																"nativeSrc": "1906:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:9"
																}
															]
														},
														{
															"nativeSrc": "1927:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:9"
																},
																"nativeSrc": "1953:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:9",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:9",
																"nodeType": "YulBlock",
																"src": "2004:51:9",
																"statements": [
																	{
																		"nativeSrc": "2018:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:9"
																			},
																			"nativeSrc": "2028:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:9"
																},
																"nativeSrc": "1977:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:9"
															},
															"nativeSrc": "1974:81:9",
															"nodeType": "YulIf",
															"src": "1974:81:9"
														},
														{
															"body": {
																"nativeSrc": "2107:42:9",
																"nodeType": "YulBlock",
																"src": "2107:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:9"
																			},
																			"nativeSrc": "2121:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:9"
																		},
																		"nativeSrc": "2121:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:9"
																		},
																		"nativeSrc": "2091:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:9"
																},
																"nativeSrc": "2068:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:9"
															},
															"nativeSrc": "2065:84:9",
															"nodeType": "YulIf",
															"src": "2065:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:9",
														"nodeType": "YulTypedName",
														"src": "1870:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:9",
														"nodeType": "YulTypedName",
														"src": "1879:6:9",
														"type": ""
													}
												],
												"src": "1835:320:9"
											},
											{
												"body": {
													"nativeSrc": "2215:87:9",
													"nodeType": "YulBlock",
													"src": "2215:87:9",
													"statements": [
														{
															"nativeSrc": "2225:11:9",
															"nodeType": "YulAssignment",
															"src": "2225:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:9",
																"nodeType": "YulIdentifier",
																"src": "2233:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:9"
																},
																"nativeSrc": "2246:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:9"
															},
															"nativeSrc": "2246:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:9"
														},
														{
															"nativeSrc": "2269:26:9",
															"nodeType": "YulAssignment",
															"src": "2269:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:9"
																},
																"nativeSrc": "2277:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:9",
														"nodeType": "YulTypedName",
														"src": "2202:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:9",
														"nodeType": "YulTypedName",
														"src": "2210:4:9",
														"type": ""
													}
												],
												"src": "2161:141:9"
											},
											{
												"body": {
													"nativeSrc": "2352:49:9",
													"nodeType": "YulBlock",
													"src": "2352:49:9",
													"statements": [
														{
															"nativeSrc": "2362:33:9",
															"nodeType": "YulAssignment",
															"src": "2362:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:9"
																		},
																		"nativeSrc": "2376:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:9"
																},
																"nativeSrc": "2372:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:9",
														"nodeType": "YulTypedName",
														"src": "2335:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:9",
														"nodeType": "YulTypedName",
														"src": "2345:6:9",
														"type": ""
													}
												],
												"src": "2308:93:9"
											},
											{
												"body": {
													"nativeSrc": "2460:54:9",
													"nodeType": "YulBlock",
													"src": "2460:54:9",
													"statements": [
														{
															"nativeSrc": "2470:37:9",
															"nodeType": "YulAssignment",
															"src": "2470:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:9"
																},
																"nativeSrc": "2491:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:9",
														"nodeType": "YulTypedName",
														"src": "2435:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:9",
														"nodeType": "YulTypedName",
														"src": "2441:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:9",
														"nodeType": "YulTypedName",
														"src": "2451:8:9",
														"type": ""
													}
												],
												"src": "2407:107:9"
											},
											{
												"body": {
													"nativeSrc": "2596:317:9",
													"nodeType": "YulBlock",
													"src": "2596:317:9",
													"statements": [
														{
															"nativeSrc": "2606:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:9"
																},
																"nativeSrc": "2623:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:9",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:9"
																},
																"nativeSrc": "2662:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:9",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:9",
															"nodeType": "YulAssignment",
															"src": "2768:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:9"
																},
																"nativeSrc": "2780:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:9"
																}
															]
														},
														{
															"nativeSrc": "2828:30:9",
															"nodeType": "YulAssignment",
															"src": "2828:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:9"
																		},
																		"nativeSrc": "2848:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:9"
																},
																"nativeSrc": "2837:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:9"
																}
															]
														},
														{
															"nativeSrc": "2867:40:9",
															"nodeType": "YulAssignment",
															"src": "2867:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:9"
																		},
																		"nativeSrc": "2887:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:9"
																},
																"nativeSrc": "2877:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:9",
														"nodeType": "YulTypedName",
														"src": "2557:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:9",
														"nodeType": "YulTypedName",
														"src": "2564:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:9",
														"nodeType": "YulTypedName",
														"src": "2576:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:9",
														"nodeType": "YulTypedName",
														"src": "2589:6:9",
														"type": ""
													}
												],
												"src": "2520:393:9"
											},
											{
												"body": {
													"nativeSrc": "2964:32:9",
													"nodeType": "YulBlock",
													"src": "2964:32:9",
													"statements": [
														{
															"nativeSrc": "2974:16:9",
															"nodeType": "YulAssignment",
															"src": "2974:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:9",
																"nodeType": "YulIdentifier",
																"src": "2985:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:9",
														"nodeType": "YulTypedName",
														"src": "2946:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:9",
														"nodeType": "YulTypedName",
														"src": "2956:7:9",
														"type": ""
													}
												],
												"src": "2919:77:9"
											},
											{
												"body": {
													"nativeSrc": "3034:28:9",
													"nodeType": "YulBlock",
													"src": "3034:28:9",
													"statements": [
														{
															"nativeSrc": "3044:12:9",
															"nodeType": "YulAssignment",
															"src": "3044:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:9",
																"nodeType": "YulIdentifier",
																"src": "3051:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:9",
														"nodeType": "YulTypedName",
														"src": "3020:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:9",
														"nodeType": "YulTypedName",
														"src": "3030:3:9",
														"type": ""
													}
												],
												"src": "3002:60:9"
											},
											{
												"body": {
													"nativeSrc": "3128:82:9",
													"nodeType": "YulBlock",
													"src": "3128:82:9",
													"statements": [
														{
															"nativeSrc": "3138:66:9",
															"nodeType": "YulAssignment",
															"src": "3138:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:9"
																				},
																				"nativeSrc": "3178:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:9"
																		},
																		"nativeSrc": "3169:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:9"
																},
																"nativeSrc": "3151:53:9",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:9",
														"nodeType": "YulTypedName",
														"src": "3108:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:9",
														"nodeType": "YulTypedName",
														"src": "3118:9:9",
														"type": ""
													}
												],
												"src": "3068:142:9"
											},
											{
												"body": {
													"nativeSrc": "3263:28:9",
													"nodeType": "YulBlock",
													"src": "3263:28:9",
													"statements": [
														{
															"nativeSrc": "3273:12:9",
															"nodeType": "YulAssignment",
															"src": "3273:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:9",
																"nodeType": "YulIdentifier",
																"src": "3280:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:9",
														"nodeType": "YulTypedName",
														"src": "3249:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:9",
														"nodeType": "YulTypedName",
														"src": "3259:3:9",
														"type": ""
													}
												],
												"src": "3216:75:9"
											},
											{
												"body": {
													"nativeSrc": "3373:193:9",
													"nodeType": "YulBlock",
													"src": "3373:193:9",
													"statements": [
														{
															"nativeSrc": "3383:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:9"
																},
																"nativeSrc": "3407:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:9",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:9"
																				},
																				"nativeSrc": "3496:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:9"
																				},
																				"nativeSrc": "3517:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:9"
																		},
																		"nativeSrc": "3468:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:9"
																},
																"nativeSrc": "3455:105:9",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:9"
															},
															"nativeSrc": "3455:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:9",
														"nodeType": "YulTypedName",
														"src": "3350:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:9",
														"nodeType": "YulTypedName",
														"src": "3356:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:9",
														"nodeType": "YulTypedName",
														"src": "3364:7:9",
														"type": ""
													}
												],
												"src": "3297:269:9"
											},
											{
												"body": {
													"nativeSrc": "3621:24:9",
													"nodeType": "YulBlock",
													"src": "3621:24:9",
													"statements": [
														{
															"nativeSrc": "3631:8:9",
															"nodeType": "YulAssignment",
															"src": "3631:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:9",
																"nodeType": "YulLiteral",
																"src": "3638:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:9",
														"nodeType": "YulTypedName",
														"src": "3617:3:9",
														"type": ""
													}
												],
												"src": "3572:73:9"
											},
											{
												"body": {
													"nativeSrc": "3704:136:9",
													"nodeType": "YulBlock",
													"src": "3704:136:9",
													"statements": [
														{
															"nativeSrc": "3714:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:9"
																},
																"nativeSrc": "3728:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:9"
																},
																"nativeSrc": "3769:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:9"
															},
															"nativeSrc": "3769:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:9",
														"nodeType": "YulTypedName",
														"src": "3690:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:9",
														"nodeType": "YulTypedName",
														"src": "3696:6:9",
														"type": ""
													}
												],
												"src": "3651:189:9"
											},
											{
												"body": {
													"nativeSrc": "3896:136:9",
													"nodeType": "YulBlock",
													"src": "3896:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:9",
																"nodeType": "YulBlock",
																"src": "3963:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:9"
																			},
																			"nativeSrc": "3977:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:9"
																		},
																		"nativeSrc": "3977:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:9"
																},
																"nativeSrc": "3913:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:9"
															},
															"nativeSrc": "3906:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:9",
																"nodeType": "YulBlock",
																"src": "3928:26:9",
																"statements": [
																	{
																		"nativeSrc": "3930:22:9",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:9"
																			},
																			"nativeSrc": "3939:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:9",
																"nodeType": "YulBlock",
																"src": "3910:2:9",
																"statements": []
															},
															"src": "3906:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:9",
														"nodeType": "YulTypedName",
														"src": "3884:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:9",
														"nodeType": "YulTypedName",
														"src": "3891:3:9",
														"type": ""
													}
												],
												"src": "3846:186:9"
											},
											{
												"body": {
													"nativeSrc": "4117:464:9",
													"nodeType": "YulBlock",
													"src": "4117:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:9",
																"nodeType": "YulBlock",
																"src": "4143:431:9",
																"statements": [
																	{
																		"nativeSrc": "4157:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:9"
																			},
																			"nativeSrc": "4173:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:9",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:9"
																					},
																					"nativeSrc": "4257:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:9"
																			},
																			"nativeSrc": "4243:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:9",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:9",
																			"nodeType": "YulBlock",
																			"src": "4444:27:9",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:9",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:9",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:9"
																			},
																			"nativeSrc": "4425:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:9"
																		},
																		"nativeSrc": "4422:49:9",
																		"nodeType": "YulIf",
																		"src": "4422:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:9"
																							},
																							"nativeSrc": "4540:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:9"
																					},
																					"nativeSrc": "4526:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:9"
																			},
																			"nativeSrc": "4484:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:9"
																		},
																		"nativeSrc": "4484:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:9"
																},
																"nativeSrc": "4131:11:9",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:9"
															},
															"nativeSrc": "4128:446:9",
															"nodeType": "YulIf",
															"src": "4128:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:9",
														"nodeType": "YulTypedName",
														"src": "4093:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:9",
														"nodeType": "YulTypedName",
														"src": "4100:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:9",
														"nodeType": "YulTypedName",
														"src": "4105:10:9",
														"type": ""
													}
												],
												"src": "4038:543:9"
											},
											{
												"body": {
													"nativeSrc": "4650:54:9",
													"nodeType": "YulBlock",
													"src": "4650:54:9",
													"statements": [
														{
															"nativeSrc": "4660:37:9",
															"nodeType": "YulAssignment",
															"src": "4660:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:9"
																},
																"nativeSrc": "4681:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:9",
														"nodeType": "YulTypedName",
														"src": "4625:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:9",
														"nodeType": "YulTypedName",
														"src": "4631:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:9",
														"nodeType": "YulTypedName",
														"src": "4641:8:9",
														"type": ""
													}
												],
												"src": "4587:117:9"
											},
											{
												"body": {
													"nativeSrc": "4761:118:9",
													"nodeType": "YulBlock",
													"src": "4761:118:9",
													"statements": [
														{
															"nativeSrc": "4771:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:9"
																				},
																				"nativeSrc": "4816:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:9"
																				},
																				"nativeSrc": "4831:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:9"
																		},
																		"nativeSrc": "4787:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:9"
																},
																"nativeSrc": "4783:56:9",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:9",
															"nodeType": "YulAssignment",
															"src": "4848:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:9"
																},
																"nativeSrc": "4858:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:9",
														"nodeType": "YulTypedName",
														"src": "4738:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:9",
														"nodeType": "YulTypedName",
														"src": "4744:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:9",
														"nodeType": "YulTypedName",
														"src": "4754:6:9",
														"type": ""
													}
												],
												"src": "4710:169:9"
											},
											{
												"body": {
													"nativeSrc": "4965:214:9",
													"nodeType": "YulBlock",
													"src": "4965:214:9",
													"statements": [
														{
															"nativeSrc": "5098:37:9",
															"nodeType": "YulAssignment",
															"src": "5098:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:9"
																},
																"nativeSrc": "5106:29:9",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:9"
																}
															]
														},
														{
															"nativeSrc": "5144:29:9",
															"nodeType": "YulAssignment",
															"src": "5144:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:9"
																		},
																		"nativeSrc": "5161:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:9"
																},
																"nativeSrc": "5152:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:9",
														"nodeType": "YulTypedName",
														"src": "4946:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:9",
														"nodeType": "YulTypedName",
														"src": "4952:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:9",
														"nodeType": "YulTypedName",
														"src": "4960:4:9",
														"type": ""
													}
												],
												"src": "4884:295:9"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:9",
													"nodeType": "YulBlock",
													"src": "5276:1303:9",
													"statements": [
														{
															"nativeSrc": "5287:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:9"
																},
																"nativeSrc": "5301:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:9",
																"nodeType": "YulBlock",
																"src": "5423:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:9"
																			},
																			"nativeSrc": "5425:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:9"
																		},
																		"nativeSrc": "5425:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:9"
																},
																"nativeSrc": "5392:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:9"
															},
															"nativeSrc": "5389:56:9",
															"nodeType": "YulIf",
															"src": "5389:56:9"
														},
														{
															"nativeSrc": "5455:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:9"
																		},
																		"nativeSrc": "5495:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:9"
																},
																"nativeSrc": "5469:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:9"
																},
																"nativeSrc": "5554:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:9"
															},
															"nativeSrc": "5554:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:9"
														},
														{
															"nativeSrc": "5631:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:9",
																"nodeType": "YulLiteral",
																"src": "5648:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:9",
															"nodeType": "YulAssignment",
															"src": "5659:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:9",
																"nodeType": "YulLiteral",
																"src": "5672:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:9",
																		"nodeType": "YulBlock",
																		"src": "5723:611:9",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:9",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:9"
																							},
																							"nativeSrc": "5764:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:9"
																					},
																					"nativeSrc": "5752:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:9",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:9"
																					},
																					"nativeSrc": "5802:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:9",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:9",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:9",
																					"nodeType": "YulBlock",
																					"src": "5920:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:9"
																												},
																												"nativeSrc": "5959:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:9"
																										},
																										"nativeSrc": "5953:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:9"
																								},
																								"nativeSrc": "5938:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:9"
																							},
																							"nativeSrc": "5938:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:9"
																						},
																						{
																							"nativeSrc": "5997:24:9",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:9",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:9"
																								},
																								"nativeSrc": "6007:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:9",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:9",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:9"
																								},
																								"nativeSrc": "6051:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:9"
																					},
																					"nativeSrc": "5883:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:9"
																				},
																				"nativeSrc": "5875:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:9",
																					"nodeType": "YulBlock",
																					"src": "5898:21:9",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:9",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:9",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:9"
																								},
																								"nativeSrc": "5905:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:9",
																					"nodeType": "YulBlock",
																					"src": "5879:3:9",
																					"statements": []
																				},
																				"src": "5875:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:9",
																					"nodeType": "YulBlock",
																					"src": "6119:156:9",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:9"
																										},
																										"nativeSrc": "6160:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:9"
																								},
																								"nativeSrc": "6154:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:9",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:9",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:9"
																												},
																												"nativeSrc": "6242:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:9"
																										},
																										"nativeSrc": "6212:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:9"
																								},
																								"nativeSrc": "6197:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:9"
																							},
																							"nativeSrc": "6197:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:9"
																					},
																					"nativeSrc": "6099:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:9"
																				},
																				"nativeSrc": "6096:179:9",
																				"nodeType": "YulIf",
																				"src": "6096:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:9",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:9"
																									},
																									"nativeSrc": "6305:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:9",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:9"
																							},
																							"nativeSrc": "6301:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:9"
																					},
																					"nativeSrc": "6288:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:9"
																				},
																				"nativeSrc": "6288:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:9"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:9",
																	"nodeType": "YulCase",
																	"src": "5716:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:9",
																		"nodeType": "YulBlock",
																		"src": "6351:222:9",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:9",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:9",
																					"nodeType": "YulBlock",
																					"src": "6402:67:9",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:9",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:9"
																										},
																										"nativeSrc": "6435:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:9"
																								},
																								"nativeSrc": "6429:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:9"
																				},
																				"nativeSrc": "6392:77:9",
																				"nodeType": "YulIf",
																				"src": "6392:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:9"
																							},
																							"nativeSrc": "6495:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:9"
																					},
																					"nativeSrc": "6482:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:9"
																				},
																				"nativeSrc": "6482:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:9"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:9",
																	"nodeType": "YulCase",
																	"src": "6343:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:9"
																},
																"nativeSrc": "5693:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:9"
															},
															"nativeSrc": "5686:887:9",
															"nodeType": "YulSwitch",
															"src": "5686:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:9",
														"nodeType": "YulTypedName",
														"src": "5265:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:9",
														"nodeType": "YulTypedName",
														"src": "5271:3:9",
														"type": ""
													}
												],
												"src": "5184:1395:9"
											},
											{
												"body": {
													"nativeSrc": "6650:53:9",
													"nodeType": "YulBlock",
													"src": "6650:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:9"
																		},
																		"nativeSrc": "6672:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:9"
																},
																"nativeSrc": "6660:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:9"
															},
															"nativeSrc": "6660:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:9",
														"nodeType": "YulTypedName",
														"src": "6638:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:9",
														"nodeType": "YulTypedName",
														"src": "6645:3:9",
														"type": ""
													}
												],
												"src": "6585:118:9"
											},
											{
												"body": {
													"nativeSrc": "6807:124:9",
													"nodeType": "YulBlock",
													"src": "6807:124:9",
													"statements": [
														{
															"nativeSrc": "6817:26:9",
															"nodeType": "YulAssignment",
															"src": "6817:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:9"
																},
																"nativeSrc": "6825:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:9"
																		},
																		"nativeSrc": "6906:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:9"
																},
																"nativeSrc": "6853:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:9"
															},
															"nativeSrc": "6853:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:9",
														"nodeType": "YulTypedName",
														"src": "6779:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:9",
														"nodeType": "YulTypedName",
														"src": "6791:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:9",
														"nodeType": "YulTypedName",
														"src": "6802:4:9",
														"type": ""
													}
												],
												"src": "6709:222:9"
											},
											{
												"body": {
													"nativeSrc": "6965:152:9",
													"nodeType": "YulBlock",
													"src": "6965:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6982:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6982:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6985:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6985:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:9"
																},
																"nativeSrc": "6975:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6975:88:9"
															},
															"nativeSrc": "6975:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6975:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7079:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7079:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7082:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7082:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7072:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7072:6:9"
																},
																"nativeSrc": "7072:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7072:15:9"
															},
															"nativeSrc": "7072:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7072:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7103:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7103:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7106:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7096:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7096:6:9"
																},
																"nativeSrc": "7096:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7096:15:9"
															},
															"nativeSrc": "7096:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7096:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6937:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:180:9"
											},
											{
												"body": {
													"nativeSrc": "7174:51:9",
													"nodeType": "YulBlock",
													"src": "7174:51:9",
													"statements": [
														{
															"nativeSrc": "7184:34:9",
															"nodeType": "YulAssignment",
															"src": "7184:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7209:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7209:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7212:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7212:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7205:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7205:3:9"
																},
																"nativeSrc": "7205:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7205:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7184:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7184:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7123:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7155:5:9",
														"nodeType": "YulTypedName",
														"src": "7155:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7165:8:9",
														"nodeType": "YulTypedName",
														"src": "7165:8:9",
														"type": ""
													}
												],
												"src": "7123:102:9"
											},
											{
												"body": {
													"nativeSrc": "7304:775:9",
													"nodeType": "YulBlock",
													"src": "7304:775:9",
													"statements": [
														{
															"nativeSrc": "7314:15:9",
															"nodeType": "YulAssignment",
															"src": "7314:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "7323:6:9",
																"nodeType": "YulIdentifier",
																"src": "7323:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7314:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7314:5:9"
																}
															]
														},
														{
															"nativeSrc": "7338:14:9",
															"nodeType": "YulAssignment",
															"src": "7338:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "7347:5:9",
																"nodeType": "YulIdentifier",
																"src": "7347:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7338:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7338:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7396:677:9",
																"nodeType": "YulBlock",
																"src": "7396:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7484:22:9",
																			"nodeType": "YulBlock",
																			"src": "7484:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7486:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "7486:16:9"
																						},
																						"nativeSrc": "7486:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "7486:18:9"
																					},
																					"nativeSrc": "7486:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "7486:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7462:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "7462:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7472:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7472:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7477:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7477:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7468:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7468:3:9"
																					},
																					"nativeSrc": "7468:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7468:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7459:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "7459:2:9"
																			},
																			"nativeSrc": "7459:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7459:24:9"
																		},
																		"nativeSrc": "7456:50:9",
																		"nodeType": "YulIf",
																		"src": "7456:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "7551:419:9",
																			"nodeType": "YulBlock",
																			"src": "7551:419:9",
																			"statements": [
																				{
																					"nativeSrc": "7931:25:9",
																					"nodeType": "YulAssignment",
																					"src": "7931:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7944:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "7944:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7951:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "7951:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7940:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7940:3:9"
																						},
																						"nativeSrc": "7940:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "7940:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7931:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7526:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "7526:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7536:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7536:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7522:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7522:3:9"
																			},
																			"nativeSrc": "7522:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7522:16:9"
																		},
																		"nativeSrc": "7519:451:9",
																		"nodeType": "YulIf",
																		"src": "7519:451:9"
																	},
																	{
																		"nativeSrc": "7983:23:9",
																		"nodeType": "YulAssignment",
																		"src": "7983:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7995:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "7995:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8001:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "8001:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7991:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7991:3:9"
																			},
																			"nativeSrc": "7991:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7991:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7983:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7983:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8019:44:9",
																		"nodeType": "YulAssignment",
																		"src": "8019:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8054:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "8054:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8031:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "8031:22:9"
																			},
																			"nativeSrc": "8031:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8031:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8019:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "8019:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7372:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "7372:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7382:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7369:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7369:2:9"
																},
																"nativeSrc": "7369:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7369:15:9"
															},
															"nativeSrc": "7361:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7385:2:9",
																"nodeType": "YulBlock",
																"src": "7385:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7365:3:9",
																"nodeType": "YulBlock",
																"src": "7365:3:9",
																"statements": []
															},
															"src": "7361:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7231:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7259:6:9",
														"nodeType": "YulTypedName",
														"src": "7259:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7267:5:9",
														"nodeType": "YulTypedName",
														"src": "7267:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7274:8:9",
														"nodeType": "YulTypedName",
														"src": "7274:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7284:3:9",
														"nodeType": "YulTypedName",
														"src": "7284:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7292:5:9",
														"nodeType": "YulTypedName",
														"src": "7292:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7299:4:9",
														"nodeType": "YulTypedName",
														"src": "7299:4:9",
														"type": ""
													}
												],
												"src": "7231:848:9"
											},
											{
												"body": {
													"nativeSrc": "8145:1013:9",
													"nodeType": "YulBlock",
													"src": "8145:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8340:20:9",
																"nodeType": "YulBlock",
																"src": "8340:20:9",
																"statements": [
																	{
																		"nativeSrc": "8342:10:9",
																		"nodeType": "YulAssignment",
																		"src": "8342:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8351:1:9",
																			"nodeType": "YulLiteral",
																			"src": "8351:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8342:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8342:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8353:5:9",
																		"nodeType": "YulLeave",
																		"src": "8353:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8330:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "8330:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8323:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:9"
																},
																"nativeSrc": "8323:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8323:16:9"
															},
															"nativeSrc": "8320:40:9",
															"nodeType": "YulIf",
															"src": "8320:40:9"
														},
														{
															"body": {
																"nativeSrc": "8385:20:9",
																"nodeType": "YulBlock",
																"src": "8385:20:9",
																"statements": [
																	{
																		"nativeSrc": "8387:10:9",
																		"nodeType": "YulAssignment",
																		"src": "8387:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8396:1:9",
																			"nodeType": "YulLiteral",
																			"src": "8396:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8387:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8387:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8398:5:9",
																		"nodeType": "YulLeave",
																		"src": "8398:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8379:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8379:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8372:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:9"
																},
																"nativeSrc": "8372:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8372:12:9"
															},
															"nativeSrc": "8369:36:9",
															"nodeType": "YulIf",
															"src": "8369:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8515:20:9",
																		"nodeType": "YulBlock",
																		"src": "8515:20:9",
																		"statements": [
																			{
																				"nativeSrc": "8517:10:9",
																				"nodeType": "YulAssignment",
																				"src": "8517:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8526:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8517:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8517:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8528:5:9",
																				"nodeType": "YulLeave",
																				"src": "8528:5:9"
																			}
																		]
																	},
																	"nativeSrc": "8508:27:9",
																	"nodeType": "YulCase",
																	"src": "8508:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8513:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8559:176:9",
																		"nodeType": "YulBlock",
																		"src": "8559:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8594:22:9",
																					"nodeType": "YulBlock",
																					"src": "8594:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8596:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "8596:16:9"
																								},
																								"nativeSrc": "8596:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8596:18:9"
																							},
																							"nativeSrc": "8596:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8596:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8579:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "8579:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8589:3:9",
																							"nodeType": "YulLiteral",
																							"src": "8589:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8576:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8576:2:9"
																					},
																					"nativeSrc": "8576:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8576:17:9"
																				},
																				"nativeSrc": "8573:43:9",
																				"nodeType": "YulIf",
																				"src": "8573:43:9"
																			},
																			{
																				"nativeSrc": "8629:25:9",
																				"nodeType": "YulAssignment",
																				"src": "8629:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8642:1:9",
																							"nodeType": "YulLiteral",
																							"src": "8642:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8645:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "8645:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8638:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8638:3:9"
																					},
																					"nativeSrc": "8638:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8638:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8629:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8629:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8685:22:9",
																					"nodeType": "YulBlock",
																					"src": "8685:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8687:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "8687:16:9"
																								},
																								"nativeSrc": "8687:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8687:18:9"
																							},
																							"nativeSrc": "8687:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8687:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8673:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "8673:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8680:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "8680:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8670:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8670:2:9"
																					},
																					"nativeSrc": "8670:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8670:14:9"
																				},
																				"nativeSrc": "8667:40:9",
																				"nodeType": "YulIf",
																				"src": "8667:40:9"
																			},
																			{
																				"nativeSrc": "8720:5:9",
																				"nodeType": "YulLeave",
																				"src": "8720:5:9"
																			}
																		]
																	},
																	"nativeSrc": "8544:191:9",
																	"nodeType": "YulCase",
																	"src": "8544:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8549:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8549:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8465:4:9",
																"nodeType": "YulIdentifier",
																"src": "8465:4:9"
															},
															"nativeSrc": "8458:277:9",
															"nodeType": "YulSwitch",
															"src": "8458:277:9"
														},
														{
															"body": {
																"nativeSrc": "8867:123:9",
																"nodeType": "YulBlock",
																"src": "8867:123:9",
																"statements": [
																	{
																		"nativeSrc": "8881:28:9",
																		"nodeType": "YulAssignment",
																		"src": "8881:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8894:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "8894:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8900:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "8900:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8890:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8890:3:9"
																			},
																			"nativeSrc": "8890:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8890:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8881:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8881:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8940:22:9",
																			"nodeType": "YulBlock",
																			"src": "8940:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8942:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "8942:16:9"
																						},
																						"nativeSrc": "8942:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "8942:18:9"
																					},
																					"nativeSrc": "8942:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "8942:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8928:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "8928:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8935:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8935:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8925:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "8925:2:9"
																			},
																			"nativeSrc": "8925:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8925:14:9"
																		},
																		"nativeSrc": "8922:40:9",
																		"nodeType": "YulIf",
																		"src": "8922:40:9"
																	},
																	{
																		"nativeSrc": "8975:5:9",
																		"nodeType": "YulLeave",
																		"src": "8975:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8770:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "8770:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8776:2:9",
																						"nodeType": "YulLiteral",
																						"src": "8776:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8767:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8767:2:9"
																				},
																				"nativeSrc": "8767:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8767:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8784:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "8784:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8794:2:9",
																						"nodeType": "YulLiteral",
																						"src": "8794:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8781:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8781:2:9"
																				},
																				"nativeSrc": "8781:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8781:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8763:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:9"
																		},
																		"nativeSrc": "8763:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8763:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8819:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "8819:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8825:3:9",
																						"nodeType": "YulLiteral",
																						"src": "8825:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8816:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8816:2:9"
																				},
																				"nativeSrc": "8816:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8816:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8834:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "8834:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8844:2:9",
																						"nodeType": "YulLiteral",
																						"src": "8844:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8831:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8831:2:9"
																				},
																				"nativeSrc": "8831:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8831:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8812:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:9"
																		},
																		"nativeSrc": "8812:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8747:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8747:2:9"
																},
																"nativeSrc": "8747:111:9",
																"nodeType": "YulFunctionCall",
																"src": "8747:111:9"
															},
															"nativeSrc": "8744:246:9",
															"nodeType": "YulIf",
															"src": "8744:246:9"
														},
														{
															"nativeSrc": "9000:57:9",
															"nodeType": "YulAssignment",
															"src": "9000:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9034:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9034:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9037:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9037:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9043:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "9043:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9053:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9053:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9015:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "9015:18:9"
																},
																"nativeSrc": "9015:42:9",
																"nodeType": "YulFunctionCall",
																"src": "9015:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9000:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9000:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "9007:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9007:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9096:22:9",
																"nodeType": "YulBlock",
																"src": "9096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9098:16:9"
																			},
																			"nativeSrc": "9098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9098:18:9"
																		},
																		"nativeSrc": "9098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9073:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9073:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9084:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9084:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9089:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9089:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9080:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:9"
																		},
																		"nativeSrc": "9080:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9070:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9070:2:9"
																},
																"nativeSrc": "9070:25:9",
																"nodeType": "YulFunctionCall",
																"src": "9070:25:9"
															},
															"nativeSrc": "9067:51:9",
															"nodeType": "YulIf",
															"src": "9067:51:9"
														},
														{
															"nativeSrc": "9127:25:9",
															"nodeType": "YulAssignment",
															"src": "9127:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9140:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9140:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9147:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9147:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9136:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9136:3:9"
																},
																"nativeSrc": "9136:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9136:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9127:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9127:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8085:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8115:4:9",
														"nodeType": "YulTypedName",
														"src": "8115:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8121:8:9",
														"nodeType": "YulTypedName",
														"src": "8121:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8131:3:9",
														"nodeType": "YulTypedName",
														"src": "8131:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8139:5:9",
														"nodeType": "YulTypedName",
														"src": "8139:5:9",
														"type": ""
													}
												],
												"src": "8085:1073:9"
											},
											{
												"body": {
													"nativeSrc": "9207:43:9",
													"nodeType": "YulBlock",
													"src": "9207:43:9",
													"statements": [
														{
															"nativeSrc": "9217:27:9",
															"nodeType": "YulAssignment",
															"src": "9217:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9232:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9232:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9239:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9239:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9228:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:9"
																},
																"nativeSrc": "9228:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9228:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9217:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9217:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9164:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9189:5:9",
														"nodeType": "YulTypedName",
														"src": "9189:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9199:7:9",
														"nodeType": "YulTypedName",
														"src": "9199:7:9",
														"type": ""
													}
												],
												"src": "9164:86:9"
											},
											{
												"body": {
													"nativeSrc": "9320:217:9",
													"nodeType": "YulBlock",
													"src": "9320:217:9",
													"statements": [
														{
															"nativeSrc": "9330:31:9",
															"nodeType": "YulAssignment",
															"src": "9330:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9356:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9356:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9338:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9338:17:9"
																},
																"nativeSrc": "9338:23:9",
																"nodeType": "YulFunctionCall",
																"src": "9338:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9330:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9330:4:9"
																}
															]
														},
														{
															"nativeSrc": "9370:37:9",
															"nodeType": "YulAssignment",
															"src": "9370:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9398:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "9398:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9382:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "9382:15:9"
																},
																"nativeSrc": "9382:25:9",
																"nodeType": "YulFunctionCall",
																"src": "9382:25:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9370:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "9370:8:9"
																}
															]
														},
														{
															"nativeSrc": "9417:113:9",
															"nodeType": "YulAssignment",
															"src": "9417:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9447:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9447:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9453:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "9453:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9463:66:9",
																		"nodeType": "YulLiteral",
																		"src": "9463:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9426:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "9426:20:9"
																},
																"nativeSrc": "9426:104:9",
																"nodeType": "YulFunctionCall",
																"src": "9426:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9417:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9417:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9256:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9295:4:9",
														"nodeType": "YulTypedName",
														"src": "9295:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9301:8:9",
														"nodeType": "YulTypedName",
														"src": "9301:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9314:5:9",
														"nodeType": "YulTypedName",
														"src": "9314:5:9",
														"type": ""
													}
												],
												"src": "9256:281:9"
											},
											{
												"body": {
													"nativeSrc": "9591:362:9",
													"nodeType": "YulBlock",
													"src": "9591:362:9",
													"statements": [
														{
															"nativeSrc": "9601:25:9",
															"nodeType": "YulAssignment",
															"src": "9601:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9624:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9624:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9606:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9606:17:9"
																},
																"nativeSrc": "9606:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9606:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9601:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9601:1:9"
																}
															]
														},
														{
															"nativeSrc": "9635:25:9",
															"nodeType": "YulAssignment",
															"src": "9635:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9658:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9658:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9640:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9640:17:9"
																},
																"nativeSrc": "9640:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9640:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9635:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9635:1:9"
																}
															]
														},
														{
															"nativeSrc": "9669:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9669:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9692:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9692:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9695:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9695:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9688:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9688:3:9"
																},
																"nativeSrc": "9688:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9688:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9673:11:9",
																	"nodeType": "YulTypedName",
																	"src": "9673:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9706:41:9",
															"nodeType": "YulAssignment",
															"src": "9706:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9735:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "9735:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9717:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9717:17:9"
																},
																"nativeSrc": "9717:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9717:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9706:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9706:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9924:22:9",
																"nodeType": "YulBlock",
																"src": "9924:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9926:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9926:16:9"
																			},
																			"nativeSrc": "9926:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9926:18:9"
																		},
																		"nativeSrc": "9926:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9926:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9857:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "9857:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9850:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9850:6:9"
																				},
																				"nativeSrc": "9850:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9850:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9880:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "9880:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9887:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "9887:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9896:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "9896:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9883:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9883:3:9"
																						},
																						"nativeSrc": "9883:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "9883:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9877:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "9877:2:9"
																				},
																				"nativeSrc": "9877:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9877:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9830:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9830:2:9"
																		},
																		"nativeSrc": "9830:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9830:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9810:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9810:6:9"
																},
																"nativeSrc": "9810:113:9",
																"nodeType": "YulFunctionCall",
																"src": "9810:113:9"
															},
															"nativeSrc": "9807:139:9",
															"nodeType": "YulIf",
															"src": "9807:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9543:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9574:1:9",
														"nodeType": "YulTypedName",
														"src": "9574:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9577:1:9",
														"nodeType": "YulTypedName",
														"src": "9577:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9583:7:9",
														"nodeType": "YulTypedName",
														"src": "9583:7:9",
														"type": ""
													}
												],
												"src": "9543:410:9"
											},
											{
												"body": {
													"nativeSrc": "10003:147:9",
													"nodeType": "YulBlock",
													"src": "10003:147:9",
													"statements": [
														{
															"nativeSrc": "10013:25:9",
															"nodeType": "YulAssignment",
															"src": "10013:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10036:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10036:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10018:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10018:17:9"
																},
																"nativeSrc": "10018:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10018:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10013:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10013:1:9"
																}
															]
														},
														{
															"nativeSrc": "10047:25:9",
															"nodeType": "YulAssignment",
															"src": "10047:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10070:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10070:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10052:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10052:17:9"
																},
																"nativeSrc": "10052:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10052:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10047:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10047:1:9"
																}
															]
														},
														{
															"nativeSrc": "10081:16:9",
															"nodeType": "YulAssignment",
															"src": "10081:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10092:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10092:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10095:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10095:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10088:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:9"
																},
																"nativeSrc": "10088:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10088:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10081:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10121:22:9",
																"nodeType": "YulBlock",
																"src": "10121:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10123:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10123:16:9"
																			},
																			"nativeSrc": "10123:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10123:18:9"
																		},
																		"nativeSrc": "10123:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10123:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10113:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10113:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10116:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10116:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10110:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10110:2:9"
																},
																"nativeSrc": "10110:10:9",
																"nodeType": "YulFunctionCall",
																"src": "10110:10:9"
															},
															"nativeSrc": "10107:36:9",
															"nodeType": "YulIf",
															"src": "10107:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9959:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9990:1:9",
														"nodeType": "YulTypedName",
														"src": "9990:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9993:1:9",
														"nodeType": "YulTypedName",
														"src": "9993:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9999:3:9",
														"nodeType": "YulTypedName",
														"src": "9999:3:9",
														"type": ""
													}
												],
												"src": "9959:191:9"
											},
											{
												"body": {
													"nativeSrc": "10221:53:9",
													"nodeType": "YulBlock",
													"src": "10221:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10238:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10238:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10261:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10261:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10243:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "10243:17:9"
																		},
																		"nativeSrc": "10243:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10243:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10231:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10231:6:9"
																},
																"nativeSrc": "10231:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10231:37:9"
															},
															"nativeSrc": "10231:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "10231:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10156:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10209:5:9",
														"nodeType": "YulTypedName",
														"src": "10209:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10216:3:9",
														"nodeType": "YulTypedName",
														"src": "10216:3:9",
														"type": ""
													}
												],
												"src": "10156:118:9"
											},
											{
												"body": {
													"nativeSrc": "10434:288:9",
													"nodeType": "YulBlock",
													"src": "10434:288:9",
													"statements": [
														{
															"nativeSrc": "10444:26:9",
															"nodeType": "YulAssignment",
															"src": "10444:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10456:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10456:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10467:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10467:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10452:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:9"
																},
																"nativeSrc": "10452:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10452:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10444:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10444:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10524:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10524:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10537:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10548:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10548:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10533:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:9"
																		},
																		"nativeSrc": "10533:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10533:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10480:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10480:43:9"
																},
																"nativeSrc": "10480:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10480:71:9"
															},
															"nativeSrc": "10480:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10480:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10605:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10605:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10618:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10618:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10629:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10629:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10614:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:9"
																		},
																		"nativeSrc": "10614:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10614:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10561:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10561:43:9"
																},
																"nativeSrc": "10561:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10561:72:9"
															},
															"nativeSrc": "10561:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10561:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10687:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10687:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10700:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10700:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10711:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10711:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10696:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10696:3:9"
																		},
																		"nativeSrc": "10696:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10696:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10643:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10643:43:9"
																},
																"nativeSrc": "10643:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10643:72:9"
															},
															"nativeSrc": "10643:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10643:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10280:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10390:9:9",
														"nodeType": "YulTypedName",
														"src": "10390:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10402:6:9",
														"nodeType": "YulTypedName",
														"src": "10402:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10410:6:9",
														"nodeType": "YulTypedName",
														"src": "10410:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10418:6:9",
														"nodeType": "YulTypedName",
														"src": "10418:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10429:4:9",
														"nodeType": "YulTypedName",
														"src": "10429:4:9",
														"type": ""
													}
												],
												"src": "10280:442:9"
											},
											{
												"body": {
													"nativeSrc": "10826:124:9",
													"nodeType": "YulBlock",
													"src": "10826:124:9",
													"statements": [
														{
															"nativeSrc": "10836:26:9",
															"nodeType": "YulAssignment",
															"src": "10836:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10848:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10848:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10859:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10859:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10844:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10844:3:9"
																},
																"nativeSrc": "10844:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10844:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10836:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10836:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10916:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10916:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10929:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10929:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10940:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10940:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10925:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10925:3:9"
																		},
																		"nativeSrc": "10925:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10925:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10872:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10872:43:9"
																},
																"nativeSrc": "10872:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10872:71:9"
															},
															"nativeSrc": "10872:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10872:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10728:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10798:9:9",
														"nodeType": "YulTypedName",
														"src": "10798:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10810:6:9",
														"nodeType": "YulTypedName",
														"src": "10810:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10821:4:9",
														"nodeType": "YulTypedName",
														"src": "10821:4:9",
														"type": ""
													}
												],
												"src": "10728:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612f9b380380612f9b83398181016040528101906100319190610585565b816040518060400160405280600781526020017f464c4942424552000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f244649420000000000000000000000000000000000000000000000000000000081525081600390816100ad91906107fd565b5080600490816100bd91906107fd565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906108db565b60405180910390fd5b61013f816101be60201b60201c565b508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101b73361019261028160201b60201c565b600a61019e9190610a5c565b620f42406101ac9190610aa6565b61028960201b60201c565b5050610b77565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102f9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102f091906108db565b60405180910390fd5b61030a5f838361030e60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361035e578060025f8282546103529190610ae7565b9250508190555061042c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103e7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103de93929190610b29565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610473578060025f82825403925050819055506104bd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161051a9190610b5e565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105548261052b565b9050919050565b6105648161054a565b811461056e575f80fd5b50565b5f8151905061057f8161055b565b92915050565b5f806040838503121561059b5761059a610527565b5b5f6105a885828601610571565b92505060206105b985828601610571565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061063e57607f821691505b602082108103610651576106506105fa565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610678565b6106bd8683610678565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6107016106fc6106f7846106d5565b6106de565b6106d5565b9050919050565b5f819050919050565b61071a836106e7565b61072e61072682610708565b848454610684565b825550505050565b5f90565b610742610736565b61074d818484610711565b505050565b5b81811015610770576107655f8261073a565b600181019050610753565b5050565b601f8211156107b55761078681610657565b61078f84610669565b8101602085101561079e578190505b6107b26107aa85610669565b830182610752565b50505b505050565b5f82821c905092915050565b5f6107d55f19846008026107ba565b1980831691505092915050565b5f6107ed83836107c6565b9150826002028217905092915050565b610806826105c3565b67ffffffffffffffff81111561081f5761081e6105cd565b5b6108298254610627565b610834828285610774565b5f60209050601f831160018114610865575f8415610853578287015190505b61085d85826107e2565b8655506108c4565b601f19841661087386610657565b5f5b8281101561089a57848901518255600182019150602085019450602081019050610875565b868310156108b757848901516108b3601f8916826107c6565b8355505b6001600288020188555050505b505050505050565b6108d58161054a565b82525050565b5f6020820190506108ee5f8301846108cc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561097657808604811115610952576109516108f4565b5b60018516156109615780820291505b808102905061096f85610921565b9450610936565b94509492505050565b5f8261098e5760019050610a49565b8161099b575f9050610a49565b81600181146109b157600281146109bb576109ea565b6001915050610a49565b60ff8411156109cd576109cc6108f4565b5b8360020a9150848211156109e4576109e36108f4565b5b50610a49565b5060208310610133831016604e8410600b8410161715610a1f5782820a905083811115610a1a57610a196108f4565b5b610a49565b610a2c848484600161092d565b92509050818404811115610a4357610a426108f4565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610a66826106d5565b9150610a7183610a50565b9250610a9e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461097f565b905092915050565b5f610ab0826106d5565b9150610abb836106d5565b9250828202610ac9816106d5565b91508282048414831517610ae057610adf6108f4565b5b5092915050565b5f610af1826106d5565b9150610afc836106d5565b9250828201905080821115610b1457610b136108f4565b5b92915050565b610b23816106d5565b82525050565b5f606082019050610b3c5f8301866108cc565b610b496020830185610b1a565b610b566040830184610b1a565b949350505050565b5f602082019050610b715f830184610b1a565b92915050565b61241780610b845f395ff3fe6080604052600436106101ba575f3560e01c80638da5cb5b116100eb578063c2507ac111610089578063dd62ed3e11610063578063dd62ed3e146105df578063e086e5ec1461061b578063f2fde38b14610631578063f7a182f514610659576101c1565b8063c2507ac11461055d578063d0febe4c14610599578063d5ace7ba146105a3576101c1565b8063a9059cbb116100c5578063a9059cbb146104a7578063acde1241146104e3578063ae0140b41461051f578063b8664f5914610547576101c1565b80638da5cb5b146104295780638e15f4731461045357806395d89b411461047d576101c1565b80636c11bcd311610158578063724e78da11610132578063724e78da1461038557806376697640146103ad57806379cc6790146103d75780637d1d5d19146103ff576101c1565b80636c11bcd31461030b57806370a0823114610333578063715018a61461036f576101c1565b806323b872dd1161019457806323b872dd14610255578063313ce5671461029157806340c10f19146102bb57806342966c68146102e3576101c1565b806306fdde03146101c5578063095ea7b3146101ef57806318160ddd1461022b576101c1565b366101c157005b5f80fd5b3480156101d0575f80fd5b506101d9610683565b6040516101e691906119d2565b60405180910390f35b3480156101fa575f80fd5b5061021560048036038101906102109190611a83565b610713565b6040516102229190611adb565b60405180910390f35b348015610236575f80fd5b5061023f610735565b60405161024c9190611b03565b60405180910390f35b348015610260575f80fd5b5061027b60048036038101906102769190611b1c565b61073e565b6040516102889190611adb565b60405180910390f35b34801561029c575f80fd5b506102a561076c565b6040516102b29190611b87565b60405180910390f35b3480156102c6575f80fd5b506102e160048036038101906102dc9190611a83565b610774565b005b3480156102ee575f80fd5b5061030960048036038101906103049190611ba0565b61078a565b005b348015610316575f80fd5b50610331600480360381019061032c9190611ba0565b61079e565b005b34801561033e575f80fd5b5061035960048036038101906103549190611bcb565b61093b565b6040516103669190611b03565b60405180910390f35b34801561037a575f80fd5b50610383610980565b005b348015610390575f80fd5b506103ab60048036038101906103a69190611bcb565b610993565b005b3480156103b8575f80fd5b506103c1610a4c565b6040516103ce9190611b03565b60405180910390f35b3480156103e2575f80fd5b506103fd60048036038101906103f89190611a83565b610a57565b005b34801561040a575f80fd5b50610413610a77565b6040516104209190611b03565b60405180910390f35b348015610434575f80fd5b5061043d610a7e565b60405161044a9190611c05565b60405180910390f35b34801561045e575f80fd5b50610467610aa6565b6040516104749190611b03565b60405180910390f35b348015610488575f80fd5b50610491610b53565b60405161049e91906119d2565b60405180910390f35b3480156104b2575f80fd5b506104cd60048036038101906104c89190611a83565b610be3565b6040516104da9190611adb565b60405180910390f35b3480156104ee575f80fd5b5061050960048036038101906105049190611bcb565b610c05565b6040516105169190611b03565b60405180910390f35b34801561052a575f80fd5b5061054560048036038101906105409190611ba0565b610c7d565b005b348015610552575f80fd5b5061055b610d20565b005b348015610568575f80fd5b50610583600480360381019061057e9190611ba0565b610e96565b6040516105909190611b03565b60405180910390f35b6105a1610f01565b005b3480156105ae575f80fd5b506105c960048036038101906105c49190611bcb565b610fd9565b6040516105d69190611b03565b60405180910390f35b3480156105ea575f80fd5b5061060560048036038101906106009190611c1e565b610fee565b6040516106129190611b03565b60405180910390f35b348015610626575f80fd5b5061062f611070565b005b34801561063c575f80fd5b5061065760048036038101906106529190611bcb565b61110c565b005b348015610664575f80fd5b5061066d611190565b60405161067a9190611b03565b60405180910390f35b60606003805461069290611c89565b80601f01602080910402602001604051908101604052809291908181526020018280546106be90611c89565b80156107095780601f106106e057610100808354040283529160200191610709565b820191905f5260205f20905b8154815290600101906020018083116106ec57829003601f168201915b5050505050905090565b5f8061071d611196565b905061072a81858561119d565b600191505092915050565b5f600254905090565b5f80610748611196565b90506107558582856111af565b610760858585611242565b60019150509392505050565b5f6012905090565b61077c611332565b61078682826113b9565b5050565b61079b610795611196565b82611438565b50565b5f81116107e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d790611d03565b60405180910390fd5b806107ea3361093b565b101561082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290611d6b565b60405180910390fd5b5f610834610aa6565b90505f610190836108459190611db6565b90505f82670de0b6b3a76400008361085d9190611db6565b6108679190611e24565b9050804710156108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390611e9e565b60405180910390fd5b6108b63385611438565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108f9573d5f803e3d5ffd5b507f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d33858360405161092d93929190611ebc565b60405180910390a150505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610988611332565b6109915f6114b7565b565b61099b611332565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0090611f3b565b60405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b661ff973cafa800081565b610a6982610a63611196565b836111af565b610a738282611438565b5050565b6201518081565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610b12573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b369190611fdf565b5050509150506402540be40081610b4d9190611db6565b91505090565b606060048054610b6290611c89565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8e90611c89565b8015610bd95780601f10610bb057610100808354040283529160200191610bd9565b820191905f5260205f20905b815481529060010190602001808311610bbc57829003601f168201915b5050505050905090565b5f80610bed611196565b9050610bfa818585611242565b600191505092915050565b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442610c509190612056565b9050620151808110610c65575f915050610c78565b8062015180610c749190612056565b9150505b919050565b610c85611332565b5f8111610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe906120d3565b60405180910390fd5b80610cd13361093b565b1015610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d099061213b565b60405180910390fd5b610d1d333083611242565b50565b6201518060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d6c9190612159565b421015610dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da5906121fc565b60405180910390fd5b661ff973cafa8000610dbf3061093b565b1015610e00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df790612264565b60405180910390fd5b4260075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e543033661ff973cafa8000611242565b7f4ccc2cb57d301275bff907df4fcc7431ca6cef9083f95cdc1098086c2360e29a33661ff973cafa8000604051610e8c929190612282565b60405180910390a1565b5f80610ea0610aa6565b90505f670de0b6b3a76400008285610eb89190611db6565b610ec29190611e24565b9050670de0b6b3a7640000610190610eda9190611db6565b670de0b6b3a764000082610eee9190611db6565b610ef89190611e24565b92505050919050565b5f3411610f43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3a906122f3565b60405180910390fd5b5f610f4d34610e96565b90505f8111610f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f889061235b565b60405180910390fd5b610f9b33826113b9565b7f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33338234604051610fce93929190611ebc565b60405180910390a150565b6007602052805f5260405f205f915090505481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611078611332565b5f4790505f81116110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b5906123c3565b60405180910390fd5b6110c6610a7e565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611108573d5f803e3d5ffd5b5050565b611114611332565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611184575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161117b9190611c05565b60405180910390fd5b61118d816114b7565b50565b61019081565b5f33905090565b6111aa838383600161157a565b505050565b5f6111ba8484610fee565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561123c578181101561122d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161122493929190611ebc565b60405180910390fd5b61123b84848484035f61157a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112b2575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112a99190611c05565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611322575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113199190611c05565b60405180910390fd5b61132d838383611749565b505050565b61133a611196565b73ffffffffffffffffffffffffffffffffffffffff16611358610a7e565b73ffffffffffffffffffffffffffffffffffffffff16146113b75761137b611196565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113ae9190611c05565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611429575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114209190611c05565b60405180910390fd5b6114345f8383611749565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114a8575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161149f9190611c05565b60405180910390fd5b6114b3825f83611749565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115ea575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115e19190611c05565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361165a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116519190611c05565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611743578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161173a9190611b03565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611799578060025f82825461178d9190612159565b92505081905550611867565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611822578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161181993929190611ebc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118ae578060025f82825403925050819055506118f8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119559190611b03565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119a482611962565b6119ae818561196c565b93506119be81856020860161197c565b6119c78161198a565b840191505092915050565b5f6020820190508181035f8301526119ea818461199a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a1f826119f6565b9050919050565b611a2f81611a15565b8114611a39575f80fd5b50565b5f81359050611a4a81611a26565b92915050565b5f819050919050565b611a6281611a50565b8114611a6c575f80fd5b50565b5f81359050611a7d81611a59565b92915050565b5f8060408385031215611a9957611a986119f2565b5b5f611aa685828601611a3c565b9250506020611ab785828601611a6f565b9150509250929050565b5f8115159050919050565b611ad581611ac1565b82525050565b5f602082019050611aee5f830184611acc565b92915050565b611afd81611a50565b82525050565b5f602082019050611b165f830184611af4565b92915050565b5f805f60608486031215611b3357611b326119f2565b5b5f611b4086828701611a3c565b9350506020611b5186828701611a3c565b9250506040611b6286828701611a6f565b9150509250925092565b5f60ff82169050919050565b611b8181611b6c565b82525050565b5f602082019050611b9a5f830184611b78565b92915050565b5f60208284031215611bb557611bb46119f2565b5b5f611bc284828501611a6f565b91505092915050565b5f60208284031215611be057611bdf6119f2565b5b5f611bed84828501611a3c565b91505092915050565b611bff81611a15565b82525050565b5f602082019050611c185f830184611bf6565b92915050565b5f8060408385031215611c3457611c336119f2565b5b5f611c4185828601611a3c565b9250506020611c5285828601611a3c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ca057607f821691505b602082108103611cb357611cb2611c5c565b5b50919050565b7f4d7573742073656c6c206d6f7265207468616e203020746f6b656e73000000005f82015250565b5f611ced601c8361196c565b9150611cf882611cb9565b602082019050919050565b5f6020820190508181035f830152611d1a81611ce1565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e63650000000000005f82015250565b5f611d55601a8361196c565b9150611d6082611d21565b602082019050919050565b5f6020820190508181035f830152611d8281611d49565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611dc082611a50565b9150611dcb83611a50565b9250828202611dd981611a50565b91508282048414831517611df057611def611d89565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611e2e82611a50565b9150611e3983611a50565b925082611e4957611e48611df7565b5b828204905092915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f611e88601d8361196c565b9150611e9382611e54565b602082019050919050565b5f6020820190508181035f830152611eb581611e7c565b9050919050565b5f606082019050611ecf5f830186611bf6565b611edc6020830185611af4565b611ee96040830184611af4565b949350505050565b7f496e76616c6964207072696365206665656420616464726573730000000000005f82015250565b5f611f25601a8361196c565b9150611f3082611ef1565b602082019050919050565b5f6020820190508181035f830152611f5281611f19565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611f7781611f59565b8114611f81575f80fd5b50565b5f81519050611f9281611f6e565b92915050565b5f819050919050565b611faa81611f98565b8114611fb4575f80fd5b50565b5f81519050611fc581611fa1565b92915050565b5f81519050611fd981611a59565b92915050565b5f805f805f60a08688031215611ff857611ff76119f2565b5b5f61200588828901611f84565b955050602061201688828901611fb7565b945050604061202788828901611fcb565b935050606061203888828901611fcb565b925050608061204988828901611f84565b9150509295509295909350565b5f61206082611a50565b915061206b83611a50565b925082820390508181111561208357612082611d89565b5b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6120bd601d8361196c565b91506120c882612089565b602082019050919050565b5f6020820190508181035f8301526120ea816120b1565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61212560148361196c565b9150612130826120f1565b602082019050919050565b5f6020820190508181035f83015261215281612119565b9050919050565b5f61216382611a50565b915061216e83611a50565b925082820190508082111561218657612185611d89565b5b92915050565b7f506c65617365207761697420323420686f757273206265747765656e206661755f8201527f6365742072657175657374730000000000000000000000000000000000000000602082015250565b5f6121e6602c8361196c565b91506121f18261218c565b604082019050919050565b5f6020820190508181035f830152612213816121da565b9050919050565b7f46617563657420697320656d70747900000000000000000000000000000000005f82015250565b5f61224e600f8361196c565b91506122598261221a565b602082019050919050565b5f6020820190508181035f83015261227b81612242565b9050919050565b5f6040820190506122955f830185611bf6565b6122a26020830184611af4565b9392505050565b7f4d7573742073656e642045544820746f2062757920746f6b656e7300000000005f82015250565b5f6122dd601b8361196c565b91506122e8826122a9565b602082019050919050565b5f6020820190508181035f83015261230a816122d1565b9050919050565b7f45544820616d6f756e7420746f6f20736d616c6c0000000000000000000000005f82015250565b5f61234560148361196c565b915061235082612311565b602082019050919050565b5f6020820190508181035f83015261237281612339565b9050919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f6123ad60128361196c565b91506123b882612379565b602082019050919050565b5f6020820190508181035f8301526123da816123a1565b905091905056fea2646970667358221220175b9d67b782a0f8282649bb21f01726efaa5978f65b9197e2f774617d4fe11b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2F9B CODESIZE SUB DUP1 PUSH2 0x2F9B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x464C494242455200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2446494200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x1BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1B7 CALLER PUSH2 0x192 PUSH2 0x281 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xA5C JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x289 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xB77 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30A PUSH0 DUP4 DUP4 PUSH2 0x30E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x42C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3E7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x473 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4BD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x554 DUP3 PUSH2 0x52B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x564 DUP2 PUSH2 0x54A JUMP JUMPDEST DUP2 EQ PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x57F DUP2 PUSH2 0x55B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x527 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5A8 DUP6 DUP3 DUP7 ADD PUSH2 0x571 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5B9 DUP6 DUP3 DUP7 ADD PUSH2 0x571 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x63E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x651 JUMPI PUSH2 0x650 PUSH2 0x5FA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x6B3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x6BD DUP7 DUP4 PUSH2 0x678 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x701 PUSH2 0x6FC PUSH2 0x6F7 DUP5 PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71A DUP4 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x72E PUSH2 0x726 DUP3 PUSH2 0x708 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x684 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x742 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x74D DUP2 DUP5 DUP5 PUSH2 0x711 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x770 JUMPI PUSH2 0x765 PUSH0 DUP3 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x753 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7B5 JUMPI PUSH2 0x786 DUP2 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x78F DUP5 PUSH2 0x669 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x79E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7B2 PUSH2 0x7AA DUP6 PUSH2 0x669 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x752 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7BA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7ED DUP4 DUP4 PUSH2 0x7C6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x806 DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x81F JUMPI PUSH2 0x81E PUSH2 0x5CD JUMP JUMPDEST JUMPDEST PUSH2 0x829 DUP3 SLOAD PUSH2 0x627 JUMP JUMPDEST PUSH2 0x834 DUP3 DUP3 DUP6 PUSH2 0x774 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x865 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x853 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x85D DUP6 DUP3 PUSH2 0x7E2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x873 DUP7 PUSH2 0x657 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x89A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x875 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8B3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7C6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D5 DUP2 PUSH2 0x54A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EE PUSH0 DUP4 ADD DUP5 PUSH2 0x8CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x976 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x952 JUMPI PUSH2 0x951 PUSH2 0x8F4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x961 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x96F DUP6 PUSH2 0x921 JUMP JUMPDEST SWAP5 POP PUSH2 0x936 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x98E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xA49 JUMP JUMPDEST DUP2 PUSH2 0x99B JUMPI PUSH0 SWAP1 POP PUSH2 0xA49 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x9B1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9BB JUMPI PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA49 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9CD JUMPI PUSH2 0x9CC PUSH2 0x8F4 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x9E4 JUMPI PUSH2 0x9E3 PUSH2 0x8F4 JUMP JUMPDEST JUMPDEST POP PUSH2 0xA49 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA1F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x8F4 JUMP JUMPDEST JUMPDEST PUSH2 0xA49 JUMP JUMPDEST PUSH2 0xA2C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x92D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xA43 JUMPI PUSH2 0xA42 PUSH2 0x8F4 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA66 DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH2 0xA71 DUP4 PUSH2 0xA50 JUMP JUMPDEST SWAP3 POP PUSH2 0xA9E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x97F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB0 DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH2 0xABB DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xAC9 DUP2 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAE0 JUMPI PUSH2 0xADF PUSH2 0x8F4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF1 DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH2 0xAFC DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB14 JUMPI PUSH2 0xB13 PUSH2 0x8F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB23 DUP2 PUSH2 0x6D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB3C PUSH0 DUP4 ADD DUP7 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0xB49 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xB56 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB1A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB71 PUSH0 DUP4 ADD DUP5 PUSH2 0xB1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2417 DUP1 PUSH2 0xB84 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xC2507AC1 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xF7A182F5 EQ PUSH2 0x659 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0xC2507AC1 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xD5ACE7BA EQ PUSH2 0x5A3 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xACDE1241 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xAE0140B4 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xB8664F59 EQ PUSH2 0x547 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47D JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x6C11BCD3 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x724E78DA GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x724E78DA EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x3FF JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36F JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E3 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI PUSH2 0x1C1 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C1 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0xA57 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43D PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x545 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55B PUSH2 0xD20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH2 0xF01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x62F PUSH2 0x1070 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x657 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x110C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x66D PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BE SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x709 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x71D PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP PUSH2 0x72A DUP2 DUP6 DUP6 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x748 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP PUSH2 0x755 DUP6 DUP3 DUP6 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x760 DUP6 DUP6 DUP6 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x77C PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x13B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x79B PUSH2 0x795 PUSH2 0x1196 JUMP JUMPDEST DUP3 PUSH2 0x1438 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D7 SWAP1 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x7EA CALLER PUSH2 0x93B JUMP JUMPDEST LT ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x834 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x190 DUP4 PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B6 CALLER DUP6 PUSH2 0x1438 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x2DCF9433D75DB0D8B1C172641F85E319FFE4AD22E108A95D1847CEB906E5195D CALLER DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x92D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x988 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x991 PUSH0 PUSH2 0x14B7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x99B PUSH2 0x1332 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA00 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH7 0x1FF973CAFA8000 DUP2 JUMP JUMPDEST PUSH2 0xA69 DUP3 PUSH2 0xA63 PUSH2 0x1196 JUMP JUMPDEST DUP4 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0xA73 DUP3 DUP3 PUSH2 0x1438 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB62 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8E SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBB0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBBC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBED PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP PUSH2 0xBFA DUP2 DUP6 DUP6 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP2 LT PUSH2 0xC65 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xC78 JUMP JUMPDEST DUP1 PUSH3 0x15180 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC85 PUSH2 0x1332 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xCD1 CALLER PUSH2 0x93B JUMP JUMPDEST LT ISZERO PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1D CALLER ADDRESS DUP4 PUSH2 0x1242 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA5 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH7 0x1FF973CAFA8000 PUSH2 0xDBF ADDRESS PUSH2 0x93B JUMP JUMPDEST LT ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF7 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE54 ADDRESS CALLER PUSH7 0x1FF973CAFA8000 PUSH2 0x1242 JUMP JUMPDEST PUSH32 0x4CCC2CB57D301275BFF907DF4FCC7431CA6CEF9083F95CDC1098086C2360E29A CALLER PUSH7 0x1FF973CAFA8000 PUSH1 0x40 MLOAD PUSH2 0xE8C SWAP3 SWAP2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEA0 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH2 0xEB8 SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0xEC2 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x190 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3A SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF4D CALLVALUE PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF88 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9B CALLER DUP3 PUSH2 0x13B9 JUMP JUMPDEST PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLER DUP3 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xFCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1078 PUSH2 0x1332 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C6 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1114 PUSH2 0x1332 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1184 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118D DUP2 PUSH2 0x14B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x157A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11BA DUP5 DUP5 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x123C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x122D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x123B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x157A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x132D DUP4 DUP4 DUP4 PUSH2 0x1749 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x133A PUSH2 0x1196 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1358 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B7 JUMPI PUSH2 0x137B PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AE SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1429 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1434 PUSH0 DUP4 DUP4 PUSH2 0x1749 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149F SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B3 DUP3 PUSH0 DUP4 PUSH2 0x1749 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1743 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1799 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1867 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1822 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1819 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18AE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18F8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A4 DUP3 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x19AE DUP2 DUP6 PUSH2 0x196C JUMP JUMPDEST SWAP4 POP PUSH2 0x19BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19C7 DUP2 PUSH2 0x198A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19EA DUP2 DUP5 PUSH2 0x199A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A1F DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2F DUP2 PUSH2 0x1A15 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A39 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4A DUP2 PUSH2 0x1A26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x1A50 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7D DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AB7 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD5 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AEE PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AFD DUP2 PUSH2 0x1A50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B16 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B32 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B40 DUP7 DUP3 DUP8 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B51 DUP7 DUP3 DUP8 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B62 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B81 DUP2 PUSH2 0x1B6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB5 JUMPI PUSH2 0x1BB4 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE0 JUMPI PUSH2 0x1BDF PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BED DUP5 DUP3 DUP6 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BFF DUP2 PUSH2 0x1A15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C41 DUP6 DUP3 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C52 DUP6 DUP3 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CA0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CB3 JUMPI PUSH2 0x1CB2 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742073656C6C206D6F7265207468616E203020746F6B656E7300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CED PUSH1 0x1C DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF8 DUP3 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D1A DUP2 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D55 PUSH1 0x1A DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D60 DUP3 PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D82 DUP2 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DC0 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1DD9 DUP2 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E2E DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E49 JUMPI PUSH2 0x1E48 PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E88 PUSH1 0x1D DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E93 DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB5 DUP2 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ECF PUSH0 DUP4 ADD DUP7 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x1EE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520666565642061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F25 PUSH1 0x1A DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F30 DUP3 PUSH2 0x1EF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F52 DUP2 PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F77 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F92 DUP2 PUSH2 0x1F6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAA DUP2 PUSH2 0x1F98 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC5 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FD9 DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FF8 JUMPI PUSH2 0x1FF7 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2005 DUP9 DUP3 DUP10 ADD PUSH2 0x1F84 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2016 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2027 DUP9 DUP3 DUP10 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2038 DUP9 DUP3 DUP10 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2049 DUP9 DUP3 DUP10 ADD PUSH2 0x1F84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x2060 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x206B DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20BD PUSH1 0x1D DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x20C8 DUP3 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20EA DUP2 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2125 PUSH1 0x14 DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x2130 DUP3 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2152 DUP2 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2163 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x216E DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2186 JUMPI PUSH2 0x2185 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365207761697420323420686F757273206265747765656E20666175 PUSH0 DUP3 ADD MSTORE PUSH32 0x6365742072657175657374730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E6 PUSH1 0x2C DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x21F1 DUP3 PUSH2 0x218C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2213 DUP2 PUSH2 0x21DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46617563657420697320656D7074790000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x224E PUSH1 0xF DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x2259 DUP3 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x227B DUP2 PUSH2 0x2242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2295 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x22A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22DD PUSH1 0x1B DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x22E8 DUP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230A DUP2 PUSH2 0x22D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E7420746F6F20736D616C6C000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2345 PUSH1 0x14 DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x2350 DUP3 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2372 DUP2 PUSH2 0x2339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23AD PUSH1 0x12 DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x23B8 DUP3 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23DA DUP2 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR JUMPDEST SWAP14 PUSH8 0xB782A0F8282649BB 0x21 CREATE OR 0x26 0xEF 0xAA MSIZE PUSH25 0xF65B9197E2F774617D4FE11B64736F6C634300081A00330000 ",
							"sourceMap": "327:4339:8:-:0;;;1018:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:12;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1192:17:8::2;1158:9;;:52;;;;;;;;;;;;;;;;;;1220:45;1226:10;1254;:8;;;:10;;:::i;:::-;1248:2;:16;;;;:::i;:::-;1238:7;:26;;;;:::i;:::-;1220:5;;;:45;;:::i;:::-;1018:254:::0;;327:4339;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:86::-;9199:7;9239:4;9232:5;9228:16;9217:27;;9164:86;;;:::o;9256:281::-;9314:5;9338:23;9356:4;9338:23;:::i;:::-;9330:31;;9382:25;9398:8;9382:25;:::i;:::-;9370:37;;9426:104;9463:66;9453:8;9447:4;9426:104;:::i;:::-;9417:113;;9256:281;;;;:::o;9543:410::-;9583:7;9606:20;9624:1;9606:20;:::i;:::-;9601:25;;9640:20;9658:1;9640:20;:::i;:::-;9635:25;;9695:1;9692;9688:9;9717:30;9735:11;9717:30;:::i;:::-;9706:41;;9896:1;9887:7;9883:15;9880:1;9877:22;9857:1;9850:9;9830:83;9807:139;;9926:18;;:::i;:::-;9807:139;9591:362;9543:410;;;;:::o;9959:191::-;9999:3;10018:20;10036:1;10018:20;:::i;:::-;10013:25;;10052:20;10070:1;10052:20;:::i;:::-;10047:25;;10095:1;10092;10088:9;10081:16;;10116:3;10113:1;10110:10;10107:36;;;10123:18;;:::i;:::-;10107:36;9959:191;;;;:::o;10156:118::-;10243:24;10261:5;10243:24;:::i;:::-;10238:3;10231:37;10156:118;;:::o;10280:442::-;10429:4;10467:2;10456:9;10452:18;10444:26;;10480:71;10548:1;10537:9;10533:17;10524:6;10480:71;:::i;:::-;10561:72;10629:2;10618:9;10614:18;10605:6;10561:72;:::i;:::-;10643;10711:2;10700:9;10696:18;10687:6;10643:72;:::i;:::-;10280:442;;;;;;:::o;10728:222::-;10821:4;10859:2;10848:9;10844:18;10836:26;;10872:71;10940:1;10929:9;10925:17;10916:6;10872:71;:::i;:::-;10728:222;;;;:::o;327:4339:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FAUCET_AMOUNT_1043": {
									"entryPoint": 2636,
									"id": 1043,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FAUCET_COOLDOWN_1046": {
									"entryPoint": 2679,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKEN_PRICE_USD_1040": {
									"entryPoint": 4496,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1394": {
									"entryPoint": null,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_736": {
									"entryPoint": 4509,
									"id": 736,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_796": {
									"entryPoint": 5498,
									"id": 796,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_718": {
									"entryPoint": 5176,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 4914,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_685": {
									"entryPoint": 5049,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1007": {
									"entryPoint": 4502,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_844": {
									"entryPoint": 4527,
									"id": 844,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 5303,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_575": {
									"entryPoint": 4674,
									"id": 575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_652": {
									"entryPoint": 5961,
									"id": 652,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_472": {
									"entryPoint": 4078,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_496": {
									"entryPoint": 1811,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_431": {
									"entryPoint": 2363,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_968": {
									"entryPoint": 2647,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_947": {
									"entryPoint": 1930,
									"id": 947,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokens_1279": {
									"entryPoint": 3841,
									"id": 1279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_409": {
									"entryPoint": 1900,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fundFaucet_1390": {
									"entryPoint": 3197,
									"id": 1390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getLatestPrice_1207": {
									"entryPoint": 2726,
									"id": 1207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenAmount_1239": {
									"entryPoint": 3734,
									"id": 1239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastFaucetRequest_1053": {
									"entryPoint": 4057,
									"id": 1053,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1439": {
									"entryPoint": 1908,
									"id": 1439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_391": {
									"entryPoint": 1667,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_113": {
									"entryPoint": 2686,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_144": {
									"entryPoint": 2432,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestFaucet_1160": {
									"entryPoint": 3360,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTokens_1355": {
									"entryPoint": 1950,
									"id": 1355,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPriceFeed_1463": {
									"entryPoint": 2451,
									"id": 1463,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_400": {
									"entryPoint": 2899,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@timeUntilNextFaucet_1188": {
									"entryPoint": 3077,
									"id": 1188,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_418": {
									"entryPoint": 1845,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_528": {
									"entryPoint": 1854,
									"id": 528,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_172": {
									"entryPoint": 4364,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_455": {
									"entryPoint": 3043,
									"id": 455,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawETH_1424": {
									"entryPoint": 4208,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7868,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 8025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9": {
									"entryPoint": 7353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1": {
									"entryPoint": 7921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95": {
									"entryPoint": 9081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21586:9",
										"nodeType": "YulBlock",
										"src": "0:21586:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3791:519:9",
													"nodeType": "YulBlock",
													"src": "3791:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:9",
																"nodeType": "YulBlock",
																"src": "3837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:9"
																			},
																			"nativeSrc": "3839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:9"
																		},
																		"nativeSrc": "3839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:9"
																},
																"nativeSrc": "3804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:9"
															},
															"nativeSrc": "3801:119:9",
															"nodeType": "YulIf",
															"src": "3801:119:9"
														},
														{
															"nativeSrc": "3930:117:9",
															"nodeType": "YulBlock",
															"src": "3930:117:9",
															"statements": [
																{
																	"nativeSrc": "3945:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:9"
																				},
																				"nativeSrc": "4005:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:9"
																		},
																		"nativeSrc": "3984:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:9",
															"nodeType": "YulBlock",
															"src": "4057:118:9",
															"statements": [
																{
																	"nativeSrc": "4072:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:9"
																				},
																				"nativeSrc": "4133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:9"
																		},
																		"nativeSrc": "4112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:9",
															"nodeType": "YulBlock",
															"src": "4185:118:9",
															"statements": [
																{
																	"nativeSrc": "4200:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:9"
																				},
																				"nativeSrc": "4261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:9"
																		},
																		"nativeSrc": "4240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:9",
														"nodeType": "YulTypedName",
														"src": "3745:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:9",
														"nodeType": "YulTypedName",
														"src": "3756:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:9",
														"nodeType": "YulTypedName",
														"src": "3768:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:9",
														"nodeType": "YulTypedName",
														"src": "3776:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:9",
														"nodeType": "YulTypedName",
														"src": "3784:6:9",
														"type": ""
													}
												],
												"src": "3691:619:9"
											},
											{
												"body": {
													"nativeSrc": "4359:43:9",
													"nodeType": "YulBlock",
													"src": "4359:43:9",
													"statements": [
														{
															"nativeSrc": "4369:27:9",
															"nodeType": "YulAssignment",
															"src": "4369:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:9"
																},
																"nativeSrc": "4380:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:9",
														"nodeType": "YulTypedName",
														"src": "4341:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:9",
														"nodeType": "YulTypedName",
														"src": "4351:7:9",
														"type": ""
													}
												],
												"src": "4316:86:9"
											},
											{
												"body": {
													"nativeSrc": "4469:51:9",
													"nodeType": "YulBlock",
													"src": "4469:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:9"
																		},
																		"nativeSrc": "4491:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:9"
																},
																"nativeSrc": "4479:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:9"
															},
															"nativeSrc": "4479:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:9",
														"nodeType": "YulTypedName",
														"src": "4457:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:9",
														"nodeType": "YulTypedName",
														"src": "4464:3:9",
														"type": ""
													}
												],
												"src": "4408:112:9"
											},
											{
												"body": {
													"nativeSrc": "4620:120:9",
													"nodeType": "YulBlock",
													"src": "4620:120:9",
													"statements": [
														{
															"nativeSrc": "4630:26:9",
															"nodeType": "YulAssignment",
															"src": "4630:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:9"
																},
																"nativeSrc": "4638:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:9"
																		},
																		"nativeSrc": "4715:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:9"
																},
																"nativeSrc": "4666:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:9"
															},
															"nativeSrc": "4666:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:9",
														"nodeType": "YulTypedName",
														"src": "4592:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:9",
														"nodeType": "YulTypedName",
														"src": "4604:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:9",
														"nodeType": "YulTypedName",
														"src": "4615:4:9",
														"type": ""
													}
												],
												"src": "4526:214:9"
											},
											{
												"body": {
													"nativeSrc": "4812:263:9",
													"nodeType": "YulBlock",
													"src": "4812:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:9",
																"nodeType": "YulBlock",
																"src": "4858:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:9"
																			},
																			"nativeSrc": "4860:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:9"
																		},
																		"nativeSrc": "4860:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:9"
																		},
																		"nativeSrc": "4829:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:9"
																},
																"nativeSrc": "4825:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:9"
															},
															"nativeSrc": "4822:119:9",
															"nodeType": "YulIf",
															"src": "4822:119:9"
														},
														{
															"nativeSrc": "4951:117:9",
															"nodeType": "YulBlock",
															"src": "4951:117:9",
															"statements": [
																{
																	"nativeSrc": "4966:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:9"
																				},
																				"nativeSrc": "5026:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:9"
																		},
																		"nativeSrc": "5005:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:9",
														"nodeType": "YulTypedName",
														"src": "4782:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:9",
														"nodeType": "YulTypedName",
														"src": "4793:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:9",
														"nodeType": "YulTypedName",
														"src": "4805:6:9",
														"type": ""
													}
												],
												"src": "4746:329:9"
											},
											{
												"body": {
													"nativeSrc": "5147:263:9",
													"nodeType": "YulBlock",
													"src": "5147:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:9",
																"nodeType": "YulBlock",
																"src": "5193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:9"
																			},
																			"nativeSrc": "5195:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:9"
																		},
																		"nativeSrc": "5195:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:9"
																		},
																		"nativeSrc": "5164:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nativeSrc": "5160:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:9"
															},
															"nativeSrc": "5157:119:9",
															"nodeType": "YulIf",
															"src": "5157:119:9"
														},
														{
															"nativeSrc": "5286:117:9",
															"nodeType": "YulBlock",
															"src": "5286:117:9",
															"statements": [
																{
																	"nativeSrc": "5301:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:9"
																				},
																				"nativeSrc": "5361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:9"
																		},
																		"nativeSrc": "5340:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:9",
														"nodeType": "YulTypedName",
														"src": "5117:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:9",
														"nodeType": "YulTypedName",
														"src": "5128:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:9",
														"nodeType": "YulTypedName",
														"src": "5140:6:9",
														"type": ""
													}
												],
												"src": "5081:329:9"
											},
											{
												"body": {
													"nativeSrc": "5481:53:9",
													"nodeType": "YulBlock",
													"src": "5481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:9"
																		},
																		"nativeSrc": "5503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:9"
																},
																"nativeSrc": "5491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:9"
															},
															"nativeSrc": "5491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:9",
														"nodeType": "YulTypedName",
														"src": "5469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"src": "5416:118:9"
											},
											{
												"body": {
													"nativeSrc": "5638:124:9",
													"nodeType": "YulBlock",
													"src": "5638:124:9",
													"statements": [
														{
															"nativeSrc": "5648:26:9",
															"nodeType": "YulAssignment",
															"src": "5648:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:9"
																},
																"nativeSrc": "5656:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:9"
																		},
																		"nativeSrc": "5737:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:9"
																},
																"nativeSrc": "5684:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:9"
															},
															"nativeSrc": "5684:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:9",
														"nodeType": "YulTypedName",
														"src": "5610:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:9",
														"nodeType": "YulTypedName",
														"src": "5622:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:9",
														"nodeType": "YulTypedName",
														"src": "5633:4:9",
														"type": ""
													}
												],
												"src": "5540:222:9"
											},
											{
												"body": {
													"nativeSrc": "5851:391:9",
													"nodeType": "YulBlock",
													"src": "5851:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:9",
																"nodeType": "YulBlock",
																"src": "5897:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:9"
																			},
																			"nativeSrc": "5899:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:9"
																		},
																		"nativeSrc": "5899:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:9"
																		},
																		"nativeSrc": "5868:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:9"
																},
																"nativeSrc": "5864:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:9"
															},
															"nativeSrc": "5861:119:9",
															"nodeType": "YulIf",
															"src": "5861:119:9"
														},
														{
															"nativeSrc": "5990:117:9",
															"nodeType": "YulBlock",
															"src": "5990:117:9",
															"statements": [
																{
																	"nativeSrc": "6005:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:9"
																				},
																				"nativeSrc": "6065:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:9"
																		},
																		"nativeSrc": "6044:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:9",
															"nodeType": "YulBlock",
															"src": "6117:118:9",
															"statements": [
																{
																	"nativeSrc": "6132:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:9"
																				},
																				"nativeSrc": "6193:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:9"
																		},
																		"nativeSrc": "6172:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:9",
														"nodeType": "YulTypedName",
														"src": "5813:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:9",
														"nodeType": "YulTypedName",
														"src": "5824:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:9",
														"nodeType": "YulTypedName",
														"src": "5836:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:9",
														"nodeType": "YulTypedName",
														"src": "5844:6:9",
														"type": ""
													}
												],
												"src": "5768:474:9"
											},
											{
												"body": {
													"nativeSrc": "6276:152:9",
													"nodeType": "YulBlock",
													"src": "6276:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:9"
																},
																"nativeSrc": "6286:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:9"
															},
															"nativeSrc": "6286:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:9"
																},
																"nativeSrc": "6383:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:9"
															},
															"nativeSrc": "6383:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:9"
																},
																"nativeSrc": "6407:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:9"
															},
															"nativeSrc": "6407:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:9"
											},
											{
												"body": {
													"nativeSrc": "6485:269:9",
													"nodeType": "YulBlock",
													"src": "6485:269:9",
													"statements": [
														{
															"nativeSrc": "6495:22:9",
															"nodeType": "YulAssignment",
															"src": "6495:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:9"
																},
																"nativeSrc": "6505:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:9"
																}
															]
														},
														{
															"nativeSrc": "6526:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:9"
																},
																"nativeSrc": "6552:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:9",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:9",
																"nodeType": "YulBlock",
																"src": "6603:51:9",
																"statements": [
																	{
																		"nativeSrc": "6617:27:9",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:9"
																			},
																			"nativeSrc": "6627:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:9"
																},
																"nativeSrc": "6576:26:9",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:9"
															},
															"nativeSrc": "6573:81:9",
															"nodeType": "YulIf",
															"src": "6573:81:9"
														},
														{
															"body": {
																"nativeSrc": "6706:42:9",
																"nodeType": "YulBlock",
																"src": "6706:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:9"
																			},
																			"nativeSrc": "6720:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:9"
																		},
																		"nativeSrc": "6720:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:9"
																		},
																		"nativeSrc": "6690:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:9"
																},
																"nativeSrc": "6667:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:9"
															},
															"nativeSrc": "6664:84:9",
															"nodeType": "YulIf",
															"src": "6664:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:9",
														"nodeType": "YulTypedName",
														"src": "6469:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:9",
														"nodeType": "YulTypedName",
														"src": "6478:6:9",
														"type": ""
													}
												],
												"src": "6434:320:9"
											},
											{
												"body": {
													"nativeSrc": "6866:72:9",
													"nodeType": "YulBlock",
													"src": "6866:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:9"
																		},
																		"nativeSrc": "6884:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:9"
																	},
																	{
																		"hexValue": "4d7573742073656c6c206d6f7265207468616e203020746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "6900:30:9",
																		"nodeType": "YulLiteral",
																		"src": "6900:30:9",
																		"type": "",
																		"value": "Must sell more than 0 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:9"
																},
																"nativeSrc": "6877:54:9",
																"nodeType": "YulFunctionCall",
																"src": "6877:54:9"
															},
															"nativeSrc": "6877:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "6877:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9",
												"nativeSrc": "6760:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:9",
														"nodeType": "YulTypedName",
														"src": "6858:6:9",
														"type": ""
													}
												],
												"src": "6760:178:9"
											},
											{
												"body": {
													"nativeSrc": "7090:220:9",
													"nodeType": "YulBlock",
													"src": "7090:220:9",
													"statements": [
														{
															"nativeSrc": "7100:74:9",
															"nodeType": "YulAssignment",
															"src": "7100:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7166:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7171:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7171:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7107:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7107:58:9"
																},
																"nativeSrc": "7107:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7107:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7100:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7100:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7272:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7272:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9",
																	"nativeSrc": "7183:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7183:88:9"
																},
																"nativeSrc": "7183:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7183:93:9"
															},
															"nativeSrc": "7183:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7183:93:9"
														},
														{
															"nativeSrc": "7285:19:9",
															"nodeType": "YulAssignment",
															"src": "7285:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7296:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7296:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7301:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7301:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7292:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:9"
																},
																"nativeSrc": "7292:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7292:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7285:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6944:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7078:3:9",
														"nodeType": "YulTypedName",
														"src": "7078:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7086:3:9",
														"nodeType": "YulTypedName",
														"src": "7086:3:9",
														"type": ""
													}
												],
												"src": "6944:366:9"
											},
											{
												"body": {
													"nativeSrc": "7487:248:9",
													"nodeType": "YulBlock",
													"src": "7487:248:9",
													"statements": [
														{
															"nativeSrc": "7497:26:9",
															"nodeType": "YulAssignment",
															"src": "7497:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7509:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7509:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7520:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7520:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7505:3:9"
																},
																"nativeSrc": "7505:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7505:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7497:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7497:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7544:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7544:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7555:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7555:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7540:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:9"
																		},
																		"nativeSrc": "7540:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7540:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7563:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7563:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7569:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7569:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7559:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7559:3:9"
																		},
																		"nativeSrc": "7559:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7559:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7533:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:9"
																},
																"nativeSrc": "7533:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7533:47:9"
															},
															"nativeSrc": "7533:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7533:47:9"
														},
														{
															"nativeSrc": "7589:139:9",
															"nodeType": "YulAssignment",
															"src": "7589:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7723:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7723:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7597:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7597:124:9"
																},
																"nativeSrc": "7597:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7597:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7589:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7589:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7316:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7467:9:9",
														"nodeType": "YulTypedName",
														"src": "7467:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7482:4:9",
														"nodeType": "YulTypedName",
														"src": "7482:4:9",
														"type": ""
													}
												],
												"src": "7316:419:9"
											},
											{
												"body": {
													"nativeSrc": "7847:70:9",
													"nodeType": "YulBlock",
													"src": "7847:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7869:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7869:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7877:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7877:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7865:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7865:3:9"
																		},
																		"nativeSrc": "7865:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7865:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7881:28:9",
																		"nodeType": "YulLiteral",
																		"src": "7881:28:9",
																		"type": "",
																		"value": "Insufficient token balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7858:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7858:6:9"
																},
																"nativeSrc": "7858:52:9",
																"nodeType": "YulFunctionCall",
																"src": "7858:52:9"
															},
															"nativeSrc": "7858:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "7858:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
												"nativeSrc": "7741:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7839:6:9",
														"nodeType": "YulTypedName",
														"src": "7839:6:9",
														"type": ""
													}
												],
												"src": "7741:176:9"
											},
											{
												"body": {
													"nativeSrc": "8069:220:9",
													"nodeType": "YulBlock",
													"src": "8069:220:9",
													"statements": [
														{
															"nativeSrc": "8079:74:9",
															"nodeType": "YulAssignment",
															"src": "8079:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8145:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8145:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8150:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8150:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8086:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8086:58:9"
																},
																"nativeSrc": "8086:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8086:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8079:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8079:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8251:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8251:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																	"nativeSrc": "8162:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8162:88:9"
																},
																"nativeSrc": "8162:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8162:93:9"
															},
															"nativeSrc": "8162:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8162:93:9"
														},
														{
															"nativeSrc": "8264:19:9",
															"nodeType": "YulAssignment",
															"src": "8264:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8275:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8275:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8280:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8280:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8271:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8271:3:9"
																},
																"nativeSrc": "8271:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8271:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8264:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8264:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7923:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8057:3:9",
														"nodeType": "YulTypedName",
														"src": "8057:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8065:3:9",
														"nodeType": "YulTypedName",
														"src": "8065:3:9",
														"type": ""
													}
												],
												"src": "7923:366:9"
											},
											{
												"body": {
													"nativeSrc": "8466:248:9",
													"nodeType": "YulBlock",
													"src": "8466:248:9",
													"statements": [
														{
															"nativeSrc": "8476:26:9",
															"nodeType": "YulAssignment",
															"src": "8476:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8488:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8488:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8499:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8499:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8484:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8484:3:9"
																},
																"nativeSrc": "8484:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8484:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8476:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8476:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8523:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8523:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8534:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8534:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8519:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8519:3:9"
																		},
																		"nativeSrc": "8519:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8519:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8542:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8542:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8548:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8548:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8538:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:9"
																		},
																		"nativeSrc": "8538:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8538:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8512:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8512:6:9"
																},
																"nativeSrc": "8512:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8512:47:9"
															},
															"nativeSrc": "8512:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8512:47:9"
														},
														{
															"nativeSrc": "8568:139:9",
															"nodeType": "YulAssignment",
															"src": "8568:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8702:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8702:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8576:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8576:124:9"
																},
																"nativeSrc": "8576:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8576:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8568:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8568:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8295:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8446:9:9",
														"nodeType": "YulTypedName",
														"src": "8446:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8461:4:9",
														"nodeType": "YulTypedName",
														"src": "8461:4:9",
														"type": ""
													}
												],
												"src": "8295:419:9"
											},
											{
												"body": {
													"nativeSrc": "8748:152:9",
													"nodeType": "YulBlock",
													"src": "8748:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8765:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8765:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8768:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8768:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8758:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8758:6:9"
																},
																"nativeSrc": "8758:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8758:88:9"
															},
															"nativeSrc": "8758:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8758:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8862:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8862:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8865:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8865:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8855:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8855:6:9"
																},
																"nativeSrc": "8855:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8855:15:9"
															},
															"nativeSrc": "8855:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8855:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8886:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8886:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8889:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8889:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8879:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8879:6:9"
																},
																"nativeSrc": "8879:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8879:15:9"
															},
															"nativeSrc": "8879:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8879:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8720:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8720:180:9"
											},
											{
												"body": {
													"nativeSrc": "8954:362:9",
													"nodeType": "YulBlock",
													"src": "8954:362:9",
													"statements": [
														{
															"nativeSrc": "8964:25:9",
															"nodeType": "YulAssignment",
															"src": "8964:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8987:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8987:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8969:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8969:17:9"
																},
																"nativeSrc": "8969:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8969:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8964:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8964:1:9"
																}
															]
														},
														{
															"nativeSrc": "8998:25:9",
															"nodeType": "YulAssignment",
															"src": "8998:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9021:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9021:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9003:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9003:17:9"
																},
																"nativeSrc": "9003:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9003:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8998:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8998:1:9"
																}
															]
														},
														{
															"nativeSrc": "9032:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9032:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9055:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9055:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9058:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9058:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9051:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9051:3:9"
																},
																"nativeSrc": "9051:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9051:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9036:11:9",
																	"nodeType": "YulTypedName",
																	"src": "9036:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9069:41:9",
															"nodeType": "YulAssignment",
															"src": "9069:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9098:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "9098:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9080:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9080:17:9"
																},
																"nativeSrc": "9080:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9080:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9069:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9069:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9287:22:9",
																"nodeType": "YulBlock",
																"src": "9287:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9289:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9289:16:9"
																			},
																			"nativeSrc": "9289:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9289:18:9"
																		},
																		"nativeSrc": "9289:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9289:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9220:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "9220:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9213:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9213:6:9"
																				},
																				"nativeSrc": "9213:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9213:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9243:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "9243:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9250:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "9250:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9259:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "9259:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9246:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9246:3:9"
																						},
																						"nativeSrc": "9246:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "9246:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9240:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "9240:2:9"
																				},
																				"nativeSrc": "9240:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9240:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9193:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9193:2:9"
																		},
																		"nativeSrc": "9193:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9173:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9173:6:9"
																},
																"nativeSrc": "9173:113:9",
																"nodeType": "YulFunctionCall",
																"src": "9173:113:9"
															},
															"nativeSrc": "9170:139:9",
															"nodeType": "YulIf",
															"src": "9170:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8906:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8937:1:9",
														"nodeType": "YulTypedName",
														"src": "8937:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8940:1:9",
														"nodeType": "YulTypedName",
														"src": "8940:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8946:7:9",
														"nodeType": "YulTypedName",
														"src": "8946:7:9",
														"type": ""
													}
												],
												"src": "8906:410:9"
											},
											{
												"body": {
													"nativeSrc": "9350:152:9",
													"nodeType": "YulBlock",
													"src": "9350:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9367:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9367:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9370:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9370:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9360:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9360:6:9"
																},
																"nativeSrc": "9360:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9360:88:9"
															},
															"nativeSrc": "9360:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9360:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9464:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9464:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9467:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9467:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9457:6:9"
																},
																"nativeSrc": "9457:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9457:15:9"
															},
															"nativeSrc": "9457:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9457:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9488:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9488:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9491:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9491:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9481:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9481:6:9"
																},
																"nativeSrc": "9481:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9481:15:9"
															},
															"nativeSrc": "9481:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9481:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9322:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9322:180:9"
											},
											{
												"body": {
													"nativeSrc": "9550:143:9",
													"nodeType": "YulBlock",
													"src": "9550:143:9",
													"statements": [
														{
															"nativeSrc": "9560:25:9",
															"nodeType": "YulAssignment",
															"src": "9560:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9583:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9583:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9565:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9565:17:9"
																},
																"nativeSrc": "9565:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9565:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9560:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9560:1:9"
																}
															]
														},
														{
															"nativeSrc": "9594:25:9",
															"nodeType": "YulAssignment",
															"src": "9594:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9617:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9617:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9599:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9599:17:9"
																},
																"nativeSrc": "9599:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9599:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9594:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9594:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9641:22:9",
																"nodeType": "YulBlock",
																"src": "9641:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9643:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9643:16:9"
																			},
																			"nativeSrc": "9643:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9643:18:9"
																		},
																		"nativeSrc": "9643:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9643:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9638:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9638:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9631:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9631:6:9"
																},
																"nativeSrc": "9631:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9631:9:9"
															},
															"nativeSrc": "9628:35:9",
															"nodeType": "YulIf",
															"src": "9628:35:9"
														},
														{
															"nativeSrc": "9673:14:9",
															"nodeType": "YulAssignment",
															"src": "9673:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9682:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9682:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9685:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9685:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9678:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9678:3:9"
																},
																"nativeSrc": "9678:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9678:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9673:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9673:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9508:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9539:1:9",
														"nodeType": "YulTypedName",
														"src": "9539:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9542:1:9",
														"nodeType": "YulTypedName",
														"src": "9542:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9548:1:9",
														"nodeType": "YulTypedName",
														"src": "9548:1:9",
														"type": ""
													}
												],
												"src": "9508:185:9"
											},
											{
												"body": {
													"nativeSrc": "9805:73:9",
													"nodeType": "YulBlock",
													"src": "9805:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9827:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9827:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9835:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9835:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9823:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9823:3:9"
																		},
																		"nativeSrc": "9823:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9823:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9839:31:9",
																		"nodeType": "YulLiteral",
																		"src": "9839:31:9",
																		"type": "",
																		"value": "Insufficient contract balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9816:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9816:6:9"
																},
																"nativeSrc": "9816:55:9",
																"nodeType": "YulFunctionCall",
																"src": "9816:55:9"
															},
															"nativeSrc": "9816:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "9816:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
												"nativeSrc": "9699:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9797:6:9",
														"nodeType": "YulTypedName",
														"src": "9797:6:9",
														"type": ""
													}
												],
												"src": "9699:179:9"
											},
											{
												"body": {
													"nativeSrc": "10030:220:9",
													"nodeType": "YulBlock",
													"src": "10030:220:9",
													"statements": [
														{
															"nativeSrc": "10040:74:9",
															"nodeType": "YulAssignment",
															"src": "10040:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10106:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10106:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10111:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10111:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10047:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10047:58:9"
																},
																"nativeSrc": "10047:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10047:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10040:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10040:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10212:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10212:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																	"nativeSrc": "10123:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10123:88:9"
																},
																"nativeSrc": "10123:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10123:93:9"
															},
															"nativeSrc": "10123:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10123:93:9"
														},
														{
															"nativeSrc": "10225:19:9",
															"nodeType": "YulAssignment",
															"src": "10225:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10236:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10236:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10241:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10241:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10232:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10232:3:9"
																},
																"nativeSrc": "10232:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10232:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10225:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10225:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9884:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10018:3:9",
														"nodeType": "YulTypedName",
														"src": "10018:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10026:3:9",
														"nodeType": "YulTypedName",
														"src": "10026:3:9",
														"type": ""
													}
												],
												"src": "9884:366:9"
											},
											{
												"body": {
													"nativeSrc": "10427:248:9",
													"nodeType": "YulBlock",
													"src": "10427:248:9",
													"statements": [
														{
															"nativeSrc": "10437:26:9",
															"nodeType": "YulAssignment",
															"src": "10437:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10449:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10449:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10460:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10460:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10445:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10445:3:9"
																},
																"nativeSrc": "10445:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10445:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10437:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10437:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10484:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10484:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10495:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10495:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10480:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10480:3:9"
																		},
																		"nativeSrc": "10480:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10480:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10503:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10503:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10509:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10509:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10499:3:9"
																		},
																		"nativeSrc": "10499:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10499:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10473:6:9"
																},
																"nativeSrc": "10473:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10473:47:9"
															},
															"nativeSrc": "10473:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10473:47:9"
														},
														{
															"nativeSrc": "10529:139:9",
															"nodeType": "YulAssignment",
															"src": "10529:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10663:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10663:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10537:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10537:124:9"
																},
																"nativeSrc": "10537:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10537:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10529:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10529:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10256:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10407:9:9",
														"nodeType": "YulTypedName",
														"src": "10407:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10422:4:9",
														"nodeType": "YulTypedName",
														"src": "10422:4:9",
														"type": ""
													}
												],
												"src": "10256:419:9"
											},
											{
												"body": {
													"nativeSrc": "10835:288:9",
													"nodeType": "YulBlock",
													"src": "10835:288:9",
													"statements": [
														{
															"nativeSrc": "10845:26:9",
															"nodeType": "YulAssignment",
															"src": "10845:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10857:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10857:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10868:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10868:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10853:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10853:3:9"
																},
																"nativeSrc": "10853:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10853:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10845:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10845:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10925:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10925:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10938:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10938:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10949:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10949:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10934:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10934:3:9"
																		},
																		"nativeSrc": "10934:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10934:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10881:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10881:43:9"
																},
																"nativeSrc": "10881:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10881:71:9"
															},
															"nativeSrc": "10881:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10881:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11006:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11006:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11019:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11019:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11030:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11030:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11015:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11015:3:9"
																		},
																		"nativeSrc": "11015:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11015:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10962:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10962:43:9"
																},
																"nativeSrc": "10962:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10962:72:9"
															},
															"nativeSrc": "10962:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10962:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11088:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11088:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11101:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11101:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11112:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11112:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11097:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11097:3:9"
																		},
																		"nativeSrc": "11097:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11097:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11044:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11044:43:9"
																},
																"nativeSrc": "11044:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11044:72:9"
															},
															"nativeSrc": "11044:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11044:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10681:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10791:9:9",
														"nodeType": "YulTypedName",
														"src": "10791:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10803:6:9",
														"nodeType": "YulTypedName",
														"src": "10803:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10811:6:9",
														"nodeType": "YulTypedName",
														"src": "10811:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10819:6:9",
														"nodeType": "YulTypedName",
														"src": "10819:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10830:4:9",
														"nodeType": "YulTypedName",
														"src": "10830:4:9",
														"type": ""
													}
												],
												"src": "10681:442:9"
											},
											{
												"body": {
													"nativeSrc": "11235:70:9",
													"nodeType": "YulBlock",
													"src": "11235:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11257:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11257:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11265:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11265:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11253:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11253:3:9"
																		},
																		"nativeSrc": "11253:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11253:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420707269636520666565642061646472657373",
																		"kind": "string",
																		"nativeSrc": "11269:28:9",
																		"nodeType": "YulLiteral",
																		"src": "11269:28:9",
																		"type": "",
																		"value": "Invalid price feed address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11246:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11246:6:9"
																},
																"nativeSrc": "11246:52:9",
																"nodeType": "YulFunctionCall",
																"src": "11246:52:9"
															},
															"nativeSrc": "11246:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "11246:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
												"nativeSrc": "11129:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11227:6:9",
														"nodeType": "YulTypedName",
														"src": "11227:6:9",
														"type": ""
													}
												],
												"src": "11129:176:9"
											},
											{
												"body": {
													"nativeSrc": "11457:220:9",
													"nodeType": "YulBlock",
													"src": "11457:220:9",
													"statements": [
														{
															"nativeSrc": "11467:74:9",
															"nodeType": "YulAssignment",
															"src": "11467:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11533:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11533:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11538:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11538:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11474:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11474:58:9"
																},
																"nativeSrc": "11474:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11474:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11467:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11467:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11639:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11639:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																	"nativeSrc": "11550:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11550:88:9"
																},
																"nativeSrc": "11550:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11550:93:9"
															},
															"nativeSrc": "11550:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11550:93:9"
														},
														{
															"nativeSrc": "11652:19:9",
															"nodeType": "YulAssignment",
															"src": "11652:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11663:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11663:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11668:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11668:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11659:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11659:3:9"
																},
																"nativeSrc": "11659:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11659:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11652:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11652:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11311:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11445:3:9",
														"nodeType": "YulTypedName",
														"src": "11445:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11453:3:9",
														"nodeType": "YulTypedName",
														"src": "11453:3:9",
														"type": ""
													}
												],
												"src": "11311:366:9"
											},
											{
												"body": {
													"nativeSrc": "11854:248:9",
													"nodeType": "YulBlock",
													"src": "11854:248:9",
													"statements": [
														{
															"nativeSrc": "11864:26:9",
															"nodeType": "YulAssignment",
															"src": "11864:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11876:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11876:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11887:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11887:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11872:3:9"
																},
																"nativeSrc": "11872:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11872:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11864:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11864:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11911:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11911:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11922:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11922:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11907:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11907:3:9"
																		},
																		"nativeSrc": "11907:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11907:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11930:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11930:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11936:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11936:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11926:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11926:3:9"
																		},
																		"nativeSrc": "11926:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11926:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11900:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11900:6:9"
																},
																"nativeSrc": "11900:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11900:47:9"
															},
															"nativeSrc": "11900:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11900:47:9"
														},
														{
															"nativeSrc": "11956:139:9",
															"nodeType": "YulAssignment",
															"src": "11956:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12090:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12090:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11964:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11964:124:9"
																},
																"nativeSrc": "11964:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11964:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11956:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11956:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11683:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11834:9:9",
														"nodeType": "YulTypedName",
														"src": "11834:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11849:4:9",
														"nodeType": "YulTypedName",
														"src": "11849:4:9",
														"type": ""
													}
												],
												"src": "11683:419:9"
											},
											{
												"body": {
													"nativeSrc": "12152:61:9",
													"nodeType": "YulBlock",
													"src": "12152:61:9",
													"statements": [
														{
															"nativeSrc": "12162:45:9",
															"nodeType": "YulAssignment",
															"src": "12162:45:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12177:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12177:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12184:22:9",
																		"nodeType": "YulLiteral",
																		"src": "12184:22:9",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12173:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12173:3:9"
																},
																"nativeSrc": "12173:34:9",
																"nodeType": "YulFunctionCall",
																"src": "12173:34:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12162:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12162:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "12108:105:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12134:5:9",
														"nodeType": "YulTypedName",
														"src": "12134:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12144:7:9",
														"nodeType": "YulTypedName",
														"src": "12144:7:9",
														"type": ""
													}
												],
												"src": "12108:105:9"
											},
											{
												"body": {
													"nativeSrc": "12261:78:9",
													"nodeType": "YulBlock",
													"src": "12261:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12317:16:9",
																"nodeType": "YulBlock",
																"src": "12317:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12326:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12326:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12329:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12329:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12319:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12319:6:9"
																			},
																			"nativeSrc": "12319:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12319:12:9"
																		},
																		"nativeSrc": "12319:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12319:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12284:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12284:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12308:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12308:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "12291:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "12291:16:9"
																				},
																				"nativeSrc": "12291:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12291:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12281:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12281:2:9"
																		},
																		"nativeSrc": "12281:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12281:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12274:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12274:6:9"
																},
																"nativeSrc": "12274:42:9",
																"nodeType": "YulFunctionCall",
																"src": "12274:42:9"
															},
															"nativeSrc": "12271:62:9",
															"nodeType": "YulIf",
															"src": "12271:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "12219:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12254:5:9",
														"nodeType": "YulTypedName",
														"src": "12254:5:9",
														"type": ""
													}
												],
												"src": "12219:120:9"
											},
											{
												"body": {
													"nativeSrc": "12407:79:9",
													"nodeType": "YulBlock",
													"src": "12407:79:9",
													"statements": [
														{
															"nativeSrc": "12417:22:9",
															"nodeType": "YulAssignment",
															"src": "12417:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12432:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12432:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12426:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12426:5:9"
																},
																"nativeSrc": "12426:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12426:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12417:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12417:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12474:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12474:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "12448:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "12448:25:9"
																},
																"nativeSrc": "12448:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12448:32:9"
															},
															"nativeSrc": "12448:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "12448:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "12345:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12385:6:9",
														"nodeType": "YulTypedName",
														"src": "12385:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12393:3:9",
														"nodeType": "YulTypedName",
														"src": "12393:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12401:5:9",
														"nodeType": "YulTypedName",
														"src": "12401:5:9",
														"type": ""
													}
												],
												"src": "12345:141:9"
											},
											{
												"body": {
													"nativeSrc": "12536:32:9",
													"nodeType": "YulBlock",
													"src": "12536:32:9",
													"statements": [
														{
															"nativeSrc": "12546:16:9",
															"nodeType": "YulAssignment",
															"src": "12546:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "12557:5:9",
																"nodeType": "YulIdentifier",
																"src": "12557:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12546:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12546:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "12492:76:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12518:5:9",
														"nodeType": "YulTypedName",
														"src": "12518:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12528:7:9",
														"nodeType": "YulTypedName",
														"src": "12528:7:9",
														"type": ""
													}
												],
												"src": "12492:76:9"
											},
											{
												"body": {
													"nativeSrc": "12616:78:9",
													"nodeType": "YulBlock",
													"src": "12616:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12672:16:9",
																"nodeType": "YulBlock",
																"src": "12672:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12681:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12681:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12684:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12684:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12674:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12674:6:9"
																			},
																			"nativeSrc": "12674:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12674:12:9"
																		},
																		"nativeSrc": "12674:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12674:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12639:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12639:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12663:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12663:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "12646:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "12646:16:9"
																				},
																				"nativeSrc": "12646:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12646:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12636:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12636:2:9"
																		},
																		"nativeSrc": "12636:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12636:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12629:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12629:6:9"
																},
																"nativeSrc": "12629:42:9",
																"nodeType": "YulFunctionCall",
																"src": "12629:42:9"
															},
															"nativeSrc": "12626:62:9",
															"nodeType": "YulIf",
															"src": "12626:62:9"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "12574:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12609:5:9",
														"nodeType": "YulTypedName",
														"src": "12609:5:9",
														"type": ""
													}
												],
												"src": "12574:120:9"
											},
											{
												"body": {
													"nativeSrc": "12762:79:9",
													"nodeType": "YulBlock",
													"src": "12762:79:9",
													"statements": [
														{
															"nativeSrc": "12772:22:9",
															"nodeType": "YulAssignment",
															"src": "12772:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12787:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12787:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12781:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12781:5:9"
																},
																"nativeSrc": "12781:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12781:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12772:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12772:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12829:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12829:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "12803:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "12803:25:9"
																},
																"nativeSrc": "12803:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12803:32:9"
															},
															"nativeSrc": "12803:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "12803:32:9"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "12700:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12740:6:9",
														"nodeType": "YulTypedName",
														"src": "12740:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12748:3:9",
														"nodeType": "YulTypedName",
														"src": "12748:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12756:5:9",
														"nodeType": "YulTypedName",
														"src": "12756:5:9",
														"type": ""
													}
												],
												"src": "12700:141:9"
											},
											{
												"body": {
													"nativeSrc": "12910:80:9",
													"nodeType": "YulBlock",
													"src": "12910:80:9",
													"statements": [
														{
															"nativeSrc": "12920:22:9",
															"nodeType": "YulAssignment",
															"src": "12920:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12935:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12935:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12929:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12929:5:9"
																},
																"nativeSrc": "12929:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12929:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12920:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12920:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12978:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12978:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12951:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "12951:26:9"
																},
																"nativeSrc": "12951:33:9",
																"nodeType": "YulFunctionCall",
																"src": "12951:33:9"
															},
															"nativeSrc": "12951:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "12951:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12847:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12888:6:9",
														"nodeType": "YulTypedName",
														"src": "12888:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12896:3:9",
														"nodeType": "YulTypedName",
														"src": "12896:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12904:5:9",
														"nodeType": "YulTypedName",
														"src": "12904:5:9",
														"type": ""
													}
												],
												"src": "12847:143:9"
											},
											{
												"body": {
													"nativeSrc": "13138:829:9",
													"nodeType": "YulBlock",
													"src": "13138:829:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13185:83:9",
																"nodeType": "YulBlock",
																"src": "13185:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13187:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "13187:77:9"
																			},
																			"nativeSrc": "13187:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13187:79:9"
																		},
																		"nativeSrc": "13187:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13187:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13159:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13159:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13168:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13168:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13155:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13155:3:9"
																		},
																		"nativeSrc": "13155:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13155:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13180:3:9",
																		"nodeType": "YulLiteral",
																		"src": "13180:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13151:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13151:3:9"
																},
																"nativeSrc": "13151:33:9",
																"nodeType": "YulFunctionCall",
																"src": "13151:33:9"
															},
															"nativeSrc": "13148:120:9",
															"nodeType": "YulIf",
															"src": "13148:120:9"
														},
														{
															"nativeSrc": "13278:127:9",
															"nodeType": "YulBlock",
															"src": "13278:127:9",
															"statements": [
																{
																	"nativeSrc": "13293:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13293:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13307:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13307:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13297:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13297:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13322:73:9",
																	"nodeType": "YulAssignment",
																	"src": "13322:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13367:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13367:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13378:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13378:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13363:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13363:3:9"
																				},
																				"nativeSrc": "13363:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13363:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13387:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13387:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "13332:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "13332:30:9"
																		},
																		"nativeSrc": "13332:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13332:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13322:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13322:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13415:128:9",
															"nodeType": "YulBlock",
															"src": "13415:128:9",
															"statements": [
																{
																	"nativeSrc": "13430:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13430:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13444:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13444:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13434:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13434:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13460:73:9",
																	"nodeType": "YulAssignment",
																	"src": "13460:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13505:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13505:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13516:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13516:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13501:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13501:3:9"
																				},
																				"nativeSrc": "13501:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13501:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13525:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13525:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "13470:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "13470:30:9"
																		},
																		"nativeSrc": "13470:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13470:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13460:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13460:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13553:129:9",
															"nodeType": "YulBlock",
															"src": "13553:129:9",
															"statements": [
																{
																	"nativeSrc": "13568:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13568:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13582:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13582:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13572:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13572:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13598:74:9",
																	"nodeType": "YulAssignment",
																	"src": "13598:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13644:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13644:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13655:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13655:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13640:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13640:3:9"
																				},
																				"nativeSrc": "13640:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13640:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13664:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13664:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13608:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "13608:31:9"
																		},
																		"nativeSrc": "13608:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13608:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13598:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13598:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13692:129:9",
															"nodeType": "YulBlock",
															"src": "13692:129:9",
															"statements": [
																{
																	"nativeSrc": "13707:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13707:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13721:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13721:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13711:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13711:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13737:74:9",
																	"nodeType": "YulAssignment",
																	"src": "13737:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13783:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13783:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13794:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13794:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13779:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13779:3:9"
																				},
																				"nativeSrc": "13779:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13779:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13803:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13803:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13747:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "13747:31:9"
																		},
																		"nativeSrc": "13747:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13747:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13737:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13737:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13831:129:9",
															"nodeType": "YulBlock",
															"src": "13831:129:9",
															"statements": [
																{
																	"nativeSrc": "13846:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13846:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13860:3:9",
																		"nodeType": "YulLiteral",
																		"src": "13860:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13850:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13850:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13877:73:9",
																	"nodeType": "YulAssignment",
																	"src": "13877:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13922:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13922:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13933:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13933:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13918:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13918:3:9"
																				},
																				"nativeSrc": "13918:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13918:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13942:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13942:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "13887:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "13887:30:9"
																		},
																		"nativeSrc": "13887:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13887:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13877:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13877:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "12996:971:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13076:9:9",
														"nodeType": "YulTypedName",
														"src": "13076:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13087:7:9",
														"nodeType": "YulTypedName",
														"src": "13087:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13099:6:9",
														"nodeType": "YulTypedName",
														"src": "13099:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13107:6:9",
														"nodeType": "YulTypedName",
														"src": "13107:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13115:6:9",
														"nodeType": "YulTypedName",
														"src": "13115:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13123:6:9",
														"nodeType": "YulTypedName",
														"src": "13123:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13131:6:9",
														"nodeType": "YulTypedName",
														"src": "13131:6:9",
														"type": ""
													}
												],
												"src": "12996:971:9"
											},
											{
												"body": {
													"nativeSrc": "14018:149:9",
													"nodeType": "YulBlock",
													"src": "14018:149:9",
													"statements": [
														{
															"nativeSrc": "14028:25:9",
															"nodeType": "YulAssignment",
															"src": "14028:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14051:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14051:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14033:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14033:17:9"
																},
																"nativeSrc": "14033:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14033:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14028:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14028:1:9"
																}
															]
														},
														{
															"nativeSrc": "14062:25:9",
															"nodeType": "YulAssignment",
															"src": "14062:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14085:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14085:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14067:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14067:17:9"
																},
																"nativeSrc": "14067:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14067:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14062:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14062:1:9"
																}
															]
														},
														{
															"nativeSrc": "14096:17:9",
															"nodeType": "YulAssignment",
															"src": "14096:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14108:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14108:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14111:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14111:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14104:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14104:3:9"
																},
																"nativeSrc": "14104:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14104:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14096:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14096:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14138:22:9",
																"nodeType": "YulBlock",
																"src": "14138:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14140:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14140:16:9"
																			},
																			"nativeSrc": "14140:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14140:18:9"
																		},
																		"nativeSrc": "14140:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14140:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14129:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14129:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14135:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14135:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14126:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14126:2:9"
																},
																"nativeSrc": "14126:11:9",
																"nodeType": "YulFunctionCall",
																"src": "14126:11:9"
															},
															"nativeSrc": "14123:37:9",
															"nodeType": "YulIf",
															"src": "14123:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13973:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14004:1:9",
														"nodeType": "YulTypedName",
														"src": "14004:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14007:1:9",
														"nodeType": "YulTypedName",
														"src": "14007:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14013:4:9",
														"nodeType": "YulTypedName",
														"src": "14013:4:9",
														"type": ""
													}
												],
												"src": "13973:194:9"
											},
											{
												"body": {
													"nativeSrc": "14279:73:9",
													"nodeType": "YulBlock",
													"src": "14279:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14301:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14301:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14309:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14309:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14297:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:9"
																		},
																		"nativeSrc": "14297:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14297:14:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "14313:31:9",
																		"nodeType": "YulLiteral",
																		"src": "14313:31:9",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14290:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:9"
																},
																"nativeSrc": "14290:55:9",
																"nodeType": "YulFunctionCall",
																"src": "14290:55:9"
															},
															"nativeSrc": "14290:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "14290:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "14173:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14271:6:9",
														"nodeType": "YulTypedName",
														"src": "14271:6:9",
														"type": ""
													}
												],
												"src": "14173:179:9"
											},
											{
												"body": {
													"nativeSrc": "14504:220:9",
													"nodeType": "YulBlock",
													"src": "14504:220:9",
													"statements": [
														{
															"nativeSrc": "14514:74:9",
															"nodeType": "YulAssignment",
															"src": "14514:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14580:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14580:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14585:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14585:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14521:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14521:58:9"
																},
																"nativeSrc": "14521:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14521:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14514:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14514:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14686:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14686:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "14597:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14597:88:9"
																},
																"nativeSrc": "14597:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14597:93:9"
															},
															"nativeSrc": "14597:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14597:93:9"
														},
														{
															"nativeSrc": "14699:19:9",
															"nodeType": "YulAssignment",
															"src": "14699:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14710:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14710:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14715:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14715:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14706:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14706:3:9"
																},
																"nativeSrc": "14706:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14706:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14699:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14699:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14358:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14492:3:9",
														"nodeType": "YulTypedName",
														"src": "14492:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14500:3:9",
														"nodeType": "YulTypedName",
														"src": "14500:3:9",
														"type": ""
													}
												],
												"src": "14358:366:9"
											},
											{
												"body": {
													"nativeSrc": "14901:248:9",
													"nodeType": "YulBlock",
													"src": "14901:248:9",
													"statements": [
														{
															"nativeSrc": "14911:26:9",
															"nodeType": "YulAssignment",
															"src": "14911:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14923:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14923:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14934:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14934:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14919:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14919:3:9"
																},
																"nativeSrc": "14919:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14919:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14911:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14911:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14958:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14958:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14969:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14969:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14954:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14954:3:9"
																		},
																		"nativeSrc": "14954:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14954:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14977:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14977:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14983:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14983:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14973:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14973:3:9"
																		},
																		"nativeSrc": "14973:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14973:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14947:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14947:6:9"
																},
																"nativeSrc": "14947:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14947:47:9"
															},
															"nativeSrc": "14947:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14947:47:9"
														},
														{
															"nativeSrc": "15003:139:9",
															"nodeType": "YulAssignment",
															"src": "15003:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15137:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15137:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15011:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15011:124:9"
																},
																"nativeSrc": "15011:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15011:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15003:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15003:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14730:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14881:9:9",
														"nodeType": "YulTypedName",
														"src": "14881:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14896:4:9",
														"nodeType": "YulTypedName",
														"src": "14896:4:9",
														"type": ""
													}
												],
												"src": "14730:419:9"
											},
											{
												"body": {
													"nativeSrc": "15261:64:9",
													"nodeType": "YulBlock",
													"src": "15261:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15283:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15283:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15291:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15291:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15279:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15279:3:9"
																		},
																		"nativeSrc": "15279:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15279:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "15295:22:9",
																		"nodeType": "YulLiteral",
																		"src": "15295:22:9",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15272:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15272:6:9"
																},
																"nativeSrc": "15272:46:9",
																"nodeType": "YulFunctionCall",
																"src": "15272:46:9"
															},
															"nativeSrc": "15272:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "15272:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "15155:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15253:6:9",
														"nodeType": "YulTypedName",
														"src": "15253:6:9",
														"type": ""
													}
												],
												"src": "15155:170:9"
											},
											{
												"body": {
													"nativeSrc": "15477:220:9",
													"nodeType": "YulBlock",
													"src": "15477:220:9",
													"statements": [
														{
															"nativeSrc": "15487:74:9",
															"nodeType": "YulAssignment",
															"src": "15487:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15553:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15553:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15558:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15558:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15494:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15494:58:9"
																},
																"nativeSrc": "15494:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15494:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15487:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15487:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15659:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15659:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "15570:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15570:88:9"
																},
																"nativeSrc": "15570:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15570:93:9"
															},
															"nativeSrc": "15570:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15570:93:9"
														},
														{
															"nativeSrc": "15672:19:9",
															"nodeType": "YulAssignment",
															"src": "15672:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15683:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15683:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15688:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15688:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15679:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15679:3:9"
																},
																"nativeSrc": "15679:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15679:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15672:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15672:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15331:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15465:3:9",
														"nodeType": "YulTypedName",
														"src": "15465:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15473:3:9",
														"nodeType": "YulTypedName",
														"src": "15473:3:9",
														"type": ""
													}
												],
												"src": "15331:366:9"
											},
											{
												"body": {
													"nativeSrc": "15874:248:9",
													"nodeType": "YulBlock",
													"src": "15874:248:9",
													"statements": [
														{
															"nativeSrc": "15884:26:9",
															"nodeType": "YulAssignment",
															"src": "15884:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15896:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15896:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15907:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15907:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15892:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15892:3:9"
																},
																"nativeSrc": "15892:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15892:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15884:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15884:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15931:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15931:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15942:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15942:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15927:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15927:3:9"
																		},
																		"nativeSrc": "15927:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15927:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15950:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15950:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15956:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15956:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15946:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15946:3:9"
																		},
																		"nativeSrc": "15946:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15946:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15920:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15920:6:9"
																},
																"nativeSrc": "15920:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15920:47:9"
															},
															"nativeSrc": "15920:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15920:47:9"
														},
														{
															"nativeSrc": "15976:139:9",
															"nodeType": "YulAssignment",
															"src": "15976:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16110:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16110:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15984:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15984:124:9"
																},
																"nativeSrc": "15984:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15984:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15976:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15976:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15703:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15854:9:9",
														"nodeType": "YulTypedName",
														"src": "15854:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15869:4:9",
														"nodeType": "YulTypedName",
														"src": "15869:4:9",
														"type": ""
													}
												],
												"src": "15703:419:9"
											},
											{
												"body": {
													"nativeSrc": "16172:147:9",
													"nodeType": "YulBlock",
													"src": "16172:147:9",
													"statements": [
														{
															"nativeSrc": "16182:25:9",
															"nodeType": "YulAssignment",
															"src": "16182:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16205:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16205:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16187:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16187:17:9"
																},
																"nativeSrc": "16187:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16187:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16182:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16182:1:9"
																}
															]
														},
														{
															"nativeSrc": "16216:25:9",
															"nodeType": "YulAssignment",
															"src": "16216:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16239:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16239:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16221:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16221:17:9"
																},
																"nativeSrc": "16221:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16221:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16216:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16216:1:9"
																}
															]
														},
														{
															"nativeSrc": "16250:16:9",
															"nodeType": "YulAssignment",
															"src": "16250:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16261:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16261:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16264:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16264:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16257:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16257:3:9"
																},
																"nativeSrc": "16257:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16257:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16250:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16250:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16290:22:9",
																"nodeType": "YulBlock",
																"src": "16290:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16292:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16292:16:9"
																			},
																			"nativeSrc": "16292:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16292:18:9"
																		},
																		"nativeSrc": "16292:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16292:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16282:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16282:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16285:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16285:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16279:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16279:2:9"
																},
																"nativeSrc": "16279:10:9",
																"nodeType": "YulFunctionCall",
																"src": "16279:10:9"
															},
															"nativeSrc": "16276:36:9",
															"nodeType": "YulIf",
															"src": "16276:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16128:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16159:1:9",
														"nodeType": "YulTypedName",
														"src": "16159:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16162:1:9",
														"nodeType": "YulTypedName",
														"src": "16162:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16168:3:9",
														"nodeType": "YulTypedName",
														"src": "16168:3:9",
														"type": ""
													}
												],
												"src": "16128:191:9"
											},
											{
												"body": {
													"nativeSrc": "16431:125:9",
													"nodeType": "YulBlock",
													"src": "16431:125:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16453:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16453:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16461:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16461:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16449:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16449:3:9"
																		},
																		"nativeSrc": "16449:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16449:14:9"
																	},
																	{
																		"hexValue": "506c65617365207761697420323420686f757273206265747765656e20666175",
																		"kind": "string",
																		"nativeSrc": "16465:34:9",
																		"nodeType": "YulLiteral",
																		"src": "16465:34:9",
																		"type": "",
																		"value": "Please wait 24 hours between fau"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16442:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16442:6:9"
																},
																"nativeSrc": "16442:58:9",
																"nodeType": "YulFunctionCall",
																"src": "16442:58:9"
															},
															"nativeSrc": "16442:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "16442:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16521:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16521:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16529:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16529:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16517:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16517:3:9"
																		},
																		"nativeSrc": "16517:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16517:15:9"
																	},
																	{
																		"hexValue": "636574207265717565737473",
																		"kind": "string",
																		"nativeSrc": "16534:14:9",
																		"nodeType": "YulLiteral",
																		"src": "16534:14:9",
																		"type": "",
																		"value": "cet requests"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16510:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16510:6:9"
																},
																"nativeSrc": "16510:39:9",
																"nodeType": "YulFunctionCall",
																"src": "16510:39:9"
															},
															"nativeSrc": "16510:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "16510:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e",
												"nativeSrc": "16325:231:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16423:6:9",
														"nodeType": "YulTypedName",
														"src": "16423:6:9",
														"type": ""
													}
												],
												"src": "16325:231:9"
											},
											{
												"body": {
													"nativeSrc": "16708:220:9",
													"nodeType": "YulBlock",
													"src": "16708:220:9",
													"statements": [
														{
															"nativeSrc": "16718:74:9",
															"nodeType": "YulAssignment",
															"src": "16718:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16784:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16784:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16789:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16789:2:9",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16725:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16725:58:9"
																},
																"nativeSrc": "16725:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16725:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16718:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16718:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16890:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16890:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e",
																	"nativeSrc": "16801:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16801:88:9"
																},
																"nativeSrc": "16801:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16801:93:9"
															},
															"nativeSrc": "16801:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16801:93:9"
														},
														{
															"nativeSrc": "16903:19:9",
															"nodeType": "YulAssignment",
															"src": "16903:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16914:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16914:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16919:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16919:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16910:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16910:3:9"
																},
																"nativeSrc": "16910:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16910:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16903:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16903:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16562:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16696:3:9",
														"nodeType": "YulTypedName",
														"src": "16696:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16704:3:9",
														"nodeType": "YulTypedName",
														"src": "16704:3:9",
														"type": ""
													}
												],
												"src": "16562:366:9"
											},
											{
												"body": {
													"nativeSrc": "17105:248:9",
													"nodeType": "YulBlock",
													"src": "17105:248:9",
													"statements": [
														{
															"nativeSrc": "17115:26:9",
															"nodeType": "YulAssignment",
															"src": "17115:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17127:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17127:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17138:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17138:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17123:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17123:3:9"
																},
																"nativeSrc": "17123:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17123:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17115:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17115:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17162:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17162:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17173:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17173:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17158:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17158:3:9"
																		},
																		"nativeSrc": "17158:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17158:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17181:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17181:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17187:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17187:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17177:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17177:3:9"
																		},
																		"nativeSrc": "17177:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17177:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17151:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17151:6:9"
																},
																"nativeSrc": "17151:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17151:47:9"
															},
															"nativeSrc": "17151:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17151:47:9"
														},
														{
															"nativeSrc": "17207:139:9",
															"nodeType": "YulAssignment",
															"src": "17207:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17341:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17341:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17215:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17215:124:9"
																},
																"nativeSrc": "17215:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17215:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17207:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17207:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16934:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17085:9:9",
														"nodeType": "YulTypedName",
														"src": "17085:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17100:4:9",
														"nodeType": "YulTypedName",
														"src": "17100:4:9",
														"type": ""
													}
												],
												"src": "16934:419:9"
											},
											{
												"body": {
													"nativeSrc": "17465:59:9",
													"nodeType": "YulBlock",
													"src": "17465:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17487:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17487:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17495:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17495:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17483:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17483:3:9"
																		},
																		"nativeSrc": "17483:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17483:14:9"
																	},
																	{
																		"hexValue": "46617563657420697320656d707479",
																		"kind": "string",
																		"nativeSrc": "17499:17:9",
																		"nodeType": "YulLiteral",
																		"src": "17499:17:9",
																		"type": "",
																		"value": "Faucet is empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17476:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17476:6:9"
																},
																"nativeSrc": "17476:41:9",
																"nodeType": "YulFunctionCall",
																"src": "17476:41:9"
															},
															"nativeSrc": "17476:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "17476:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21",
												"nativeSrc": "17359:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17457:6:9",
														"nodeType": "YulTypedName",
														"src": "17457:6:9",
														"type": ""
													}
												],
												"src": "17359:165:9"
											},
											{
												"body": {
													"nativeSrc": "17676:220:9",
													"nodeType": "YulBlock",
													"src": "17676:220:9",
													"statements": [
														{
															"nativeSrc": "17686:74:9",
															"nodeType": "YulAssignment",
															"src": "17686:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17752:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17752:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17757:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17757:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17693:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17693:58:9"
																},
																"nativeSrc": "17693:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17693:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17686:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17686:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17858:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17858:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21",
																	"nativeSrc": "17769:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17769:88:9"
																},
																"nativeSrc": "17769:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17769:93:9"
															},
															"nativeSrc": "17769:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17769:93:9"
														},
														{
															"nativeSrc": "17871:19:9",
															"nodeType": "YulAssignment",
															"src": "17871:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17882:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17882:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17887:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17887:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17878:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17878:3:9"
																},
																"nativeSrc": "17878:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17878:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17871:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17871:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17530:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17664:3:9",
														"nodeType": "YulTypedName",
														"src": "17664:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17672:3:9",
														"nodeType": "YulTypedName",
														"src": "17672:3:9",
														"type": ""
													}
												],
												"src": "17530:366:9"
											},
											{
												"body": {
													"nativeSrc": "18073:248:9",
													"nodeType": "YulBlock",
													"src": "18073:248:9",
													"statements": [
														{
															"nativeSrc": "18083:26:9",
															"nodeType": "YulAssignment",
															"src": "18083:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18095:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18095:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18106:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18106:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18091:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18091:3:9"
																},
																"nativeSrc": "18091:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18091:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18083:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18083:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18130:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18130:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18141:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18141:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18126:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18126:3:9"
																		},
																		"nativeSrc": "18126:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18126:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18149:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18149:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18155:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18155:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18145:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18145:3:9"
																		},
																		"nativeSrc": "18145:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18145:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18119:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18119:6:9"
																},
																"nativeSrc": "18119:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18119:47:9"
															},
															"nativeSrc": "18119:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18119:47:9"
														},
														{
															"nativeSrc": "18175:139:9",
															"nodeType": "YulAssignment",
															"src": "18175:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18309:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18309:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18183:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18183:124:9"
																},
																"nativeSrc": "18183:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18183:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18175:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18175:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17902:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18053:9:9",
														"nodeType": "YulTypedName",
														"src": "18053:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18068:4:9",
														"nodeType": "YulTypedName",
														"src": "18068:4:9",
														"type": ""
													}
												],
												"src": "17902:419:9"
											},
											{
												"body": {
													"nativeSrc": "18453:206:9",
													"nodeType": "YulBlock",
													"src": "18453:206:9",
													"statements": [
														{
															"nativeSrc": "18463:26:9",
															"nodeType": "YulAssignment",
															"src": "18463:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18475:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18475:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18486:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18486:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18471:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18471:3:9"
																},
																"nativeSrc": "18471:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18471:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18463:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18463:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18543:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18543:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18556:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18556:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18567:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18567:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18552:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18552:3:9"
																		},
																		"nativeSrc": "18552:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18552:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18499:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18499:43:9"
																},
																"nativeSrc": "18499:71:9",
																"nodeType": "YulFunctionCall",
																"src": "18499:71:9"
															},
															"nativeSrc": "18499:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "18499:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18624:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18624:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18637:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18637:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18648:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18648:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18633:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18633:3:9"
																		},
																		"nativeSrc": "18633:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18633:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18580:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18580:43:9"
																},
																"nativeSrc": "18580:72:9",
																"nodeType": "YulFunctionCall",
																"src": "18580:72:9"
															},
															"nativeSrc": "18580:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "18580:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18327:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18417:9:9",
														"nodeType": "YulTypedName",
														"src": "18417:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18429:6:9",
														"nodeType": "YulTypedName",
														"src": "18429:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18437:6:9",
														"nodeType": "YulTypedName",
														"src": "18437:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18448:4:9",
														"nodeType": "YulTypedName",
														"src": "18448:4:9",
														"type": ""
													}
												],
												"src": "18327:332:9"
											},
											{
												"body": {
													"nativeSrc": "18771:71:9",
													"nodeType": "YulBlock",
													"src": "18771:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18793:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18793:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18801:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18801:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18789:3:9"
																		},
																		"nativeSrc": "18789:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18789:14:9"
																	},
																	{
																		"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "18805:29:9",
																		"nodeType": "YulLiteral",
																		"src": "18805:29:9",
																		"type": "",
																		"value": "Must send ETH to buy tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18782:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18782:6:9"
																},
																"nativeSrc": "18782:53:9",
																"nodeType": "YulFunctionCall",
																"src": "18782:53:9"
															},
															"nativeSrc": "18782:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "18782:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de",
												"nativeSrc": "18665:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18763:6:9",
														"nodeType": "YulTypedName",
														"src": "18763:6:9",
														"type": ""
													}
												],
												"src": "18665:177:9"
											},
											{
												"body": {
													"nativeSrc": "18994:220:9",
													"nodeType": "YulBlock",
													"src": "18994:220:9",
													"statements": [
														{
															"nativeSrc": "19004:74:9",
															"nodeType": "YulAssignment",
															"src": "19004:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19070:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19070:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19075:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19075:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19011:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19011:58:9"
																},
																"nativeSrc": "19011:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19011:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19004:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19004:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19176:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19176:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de",
																	"nativeSrc": "19087:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19087:88:9"
																},
																"nativeSrc": "19087:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19087:93:9"
															},
															"nativeSrc": "19087:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19087:93:9"
														},
														{
															"nativeSrc": "19189:19:9",
															"nodeType": "YulAssignment",
															"src": "19189:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19200:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19200:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19196:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19196:3:9"
																},
																"nativeSrc": "19196:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19196:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19189:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19189:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18848:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18982:3:9",
														"nodeType": "YulTypedName",
														"src": "18982:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18990:3:9",
														"nodeType": "YulTypedName",
														"src": "18990:3:9",
														"type": ""
													}
												],
												"src": "18848:366:9"
											},
											{
												"body": {
													"nativeSrc": "19391:248:9",
													"nodeType": "YulBlock",
													"src": "19391:248:9",
													"statements": [
														{
															"nativeSrc": "19401:26:9",
															"nodeType": "YulAssignment",
															"src": "19401:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19413:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19413:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19424:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19424:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19409:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19409:3:9"
																},
																"nativeSrc": "19409:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19409:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19401:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19401:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19448:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19448:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19459:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19459:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19444:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19444:3:9"
																		},
																		"nativeSrc": "19444:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19444:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19467:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19467:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19473:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19473:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19463:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19463:3:9"
																		},
																		"nativeSrc": "19463:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19463:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19437:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19437:6:9"
																},
																"nativeSrc": "19437:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19437:47:9"
															},
															"nativeSrc": "19437:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19437:47:9"
														},
														{
															"nativeSrc": "19493:139:9",
															"nodeType": "YulAssignment",
															"src": "19493:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19627:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19627:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19501:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19501:124:9"
																},
																"nativeSrc": "19501:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19501:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19493:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19493:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19220:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19371:9:9",
														"nodeType": "YulTypedName",
														"src": "19371:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19386:4:9",
														"nodeType": "YulTypedName",
														"src": "19386:4:9",
														"type": ""
													}
												],
												"src": "19220:419:9"
											},
											{
												"body": {
													"nativeSrc": "19751:64:9",
													"nodeType": "YulBlock",
													"src": "19751:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19773:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19773:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19781:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19781:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19769:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19769:3:9"
																		},
																		"nativeSrc": "19769:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19769:14:9"
																	},
																	{
																		"hexValue": "45544820616d6f756e7420746f6f20736d616c6c",
																		"kind": "string",
																		"nativeSrc": "19785:22:9",
																		"nodeType": "YulLiteral",
																		"src": "19785:22:9",
																		"type": "",
																		"value": "ETH amount too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19762:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19762:6:9"
																},
																"nativeSrc": "19762:46:9",
																"nodeType": "YulFunctionCall",
																"src": "19762:46:9"
															},
															"nativeSrc": "19762:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "19762:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3",
												"nativeSrc": "19645:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19743:6:9",
														"nodeType": "YulTypedName",
														"src": "19743:6:9",
														"type": ""
													}
												],
												"src": "19645:170:9"
											},
											{
												"body": {
													"nativeSrc": "19967:220:9",
													"nodeType": "YulBlock",
													"src": "19967:220:9",
													"statements": [
														{
															"nativeSrc": "19977:74:9",
															"nodeType": "YulAssignment",
															"src": "19977:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20043:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20043:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20048:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20048:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19984:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19984:58:9"
																},
																"nativeSrc": "19984:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19984:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19977:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19977:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20149:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20149:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3",
																	"nativeSrc": "20060:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20060:88:9"
																},
																"nativeSrc": "20060:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20060:93:9"
															},
															"nativeSrc": "20060:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20060:93:9"
														},
														{
															"nativeSrc": "20162:19:9",
															"nodeType": "YulAssignment",
															"src": "20162:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20173:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20173:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20178:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20178:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20169:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20169:3:9"
																},
																"nativeSrc": "20169:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20169:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20162:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20162:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19821:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19955:3:9",
														"nodeType": "YulTypedName",
														"src": "19955:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19963:3:9",
														"nodeType": "YulTypedName",
														"src": "19963:3:9",
														"type": ""
													}
												],
												"src": "19821:366:9"
											},
											{
												"body": {
													"nativeSrc": "20364:248:9",
													"nodeType": "YulBlock",
													"src": "20364:248:9",
													"statements": [
														{
															"nativeSrc": "20374:26:9",
															"nodeType": "YulAssignment",
															"src": "20374:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20386:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20386:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20397:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20397:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20382:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20382:3:9"
																},
																"nativeSrc": "20382:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20382:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20374:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20374:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20421:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20421:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20432:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20432:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20417:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20417:3:9"
																		},
																		"nativeSrc": "20417:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20417:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20440:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20440:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20446:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20446:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20436:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20436:3:9"
																		},
																		"nativeSrc": "20436:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20436:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20410:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20410:6:9"
																},
																"nativeSrc": "20410:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20410:47:9"
															},
															"nativeSrc": "20410:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20410:47:9"
														},
														{
															"nativeSrc": "20466:139:9",
															"nodeType": "YulAssignment",
															"src": "20466:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20600:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20600:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20474:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20474:124:9"
																},
																"nativeSrc": "20474:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20474:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20466:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20466:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20193:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20344:9:9",
														"nodeType": "YulTypedName",
														"src": "20344:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20359:4:9",
														"nodeType": "YulTypedName",
														"src": "20359:4:9",
														"type": ""
													}
												],
												"src": "20193:419:9"
											},
											{
												"body": {
													"nativeSrc": "20724:62:9",
													"nodeType": "YulBlock",
													"src": "20724:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20746:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20746:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20754:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20742:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20742:3:9"
																		},
																		"nativeSrc": "20742:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20742:14:9"
																	},
																	{
																		"hexValue": "4e6f2045544820746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "20758:20:9",
																		"nodeType": "YulLiteral",
																		"src": "20758:20:9",
																		"type": "",
																		"value": "No ETH to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20735:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20735:6:9"
																},
																"nativeSrc": "20735:44:9",
																"nodeType": "YulFunctionCall",
																"src": "20735:44:9"
															},
															"nativeSrc": "20735:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "20735:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
												"nativeSrc": "20618:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20716:6:9",
														"nodeType": "YulTypedName",
														"src": "20716:6:9",
														"type": ""
													}
												],
												"src": "20618:168:9"
											},
											{
												"body": {
													"nativeSrc": "20938:220:9",
													"nodeType": "YulBlock",
													"src": "20938:220:9",
													"statements": [
														{
															"nativeSrc": "20948:74:9",
															"nodeType": "YulAssignment",
															"src": "20948:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21014:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21014:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21019:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21019:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20955:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20955:58:9"
																},
																"nativeSrc": "20955:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20955:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20948:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20948:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21120:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21120:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																	"nativeSrc": "21031:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21031:88:9"
																},
																"nativeSrc": "21031:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21031:93:9"
															},
															"nativeSrc": "21031:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21031:93:9"
														},
														{
															"nativeSrc": "21133:19:9",
															"nodeType": "YulAssignment",
															"src": "21133:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21144:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21144:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21149:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21149:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21140:3:9"
																},
																"nativeSrc": "21140:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21140:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21133:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21133:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20792:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20926:3:9",
														"nodeType": "YulTypedName",
														"src": "20926:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20934:3:9",
														"nodeType": "YulTypedName",
														"src": "20934:3:9",
														"type": ""
													}
												],
												"src": "20792:366:9"
											},
											{
												"body": {
													"nativeSrc": "21335:248:9",
													"nodeType": "YulBlock",
													"src": "21335:248:9",
													"statements": [
														{
															"nativeSrc": "21345:26:9",
															"nodeType": "YulAssignment",
															"src": "21345:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21357:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21357:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21368:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21368:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21353:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21353:3:9"
																},
																"nativeSrc": "21353:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21353:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21345:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21345:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21392:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21392:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21403:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21403:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21388:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21388:3:9"
																		},
																		"nativeSrc": "21388:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21388:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21411:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "21411:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21417:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21417:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21407:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21407:3:9"
																		},
																		"nativeSrc": "21407:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21407:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21381:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21381:6:9"
																},
																"nativeSrc": "21381:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21381:47:9"
															},
															"nativeSrc": "21381:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21381:47:9"
														},
														{
															"nativeSrc": "21437:139:9",
															"nodeType": "YulAssignment",
															"src": "21437:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21571:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21571:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21445:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21445:124:9"
																},
																"nativeSrc": "21445:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21445:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21437:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21437:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21164:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21315:9:9",
														"nodeType": "YulTypedName",
														"src": "21315:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21330:4:9",
														"nodeType": "YulTypedName",
														"src": "21330:4:9",
														"type": ""
													}
												],
												"src": "21164:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must sell more than 0 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient contract balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price feed address\")\n\n    }\n\n    function abi_encode_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please wait 24 hours between fau\")\n\n        mstore(add(memPtr, 32), \"cet requests\")\n\n    }\n\n    function abi_encode_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21(memPtr) {\n\n        mstore(add(memPtr, 0), \"Faucet is empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send ETH to buy tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH amount too small\")\n\n    }\n\n    function abi_encode_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(memPtr) {\n\n        mstore(add(memPtr, 0), \"No ETH to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101ba575f3560e01c80638da5cb5b116100eb578063c2507ac111610089578063dd62ed3e11610063578063dd62ed3e146105df578063e086e5ec1461061b578063f2fde38b14610631578063f7a182f514610659576101c1565b8063c2507ac11461055d578063d0febe4c14610599578063d5ace7ba146105a3576101c1565b8063a9059cbb116100c5578063a9059cbb146104a7578063acde1241146104e3578063ae0140b41461051f578063b8664f5914610547576101c1565b80638da5cb5b146104295780638e15f4731461045357806395d89b411461047d576101c1565b80636c11bcd311610158578063724e78da11610132578063724e78da1461038557806376697640146103ad57806379cc6790146103d75780637d1d5d19146103ff576101c1565b80636c11bcd31461030b57806370a0823114610333578063715018a61461036f576101c1565b806323b872dd1161019457806323b872dd14610255578063313ce5671461029157806340c10f19146102bb57806342966c68146102e3576101c1565b806306fdde03146101c5578063095ea7b3146101ef57806318160ddd1461022b576101c1565b366101c157005b5f80fd5b3480156101d0575f80fd5b506101d9610683565b6040516101e691906119d2565b60405180910390f35b3480156101fa575f80fd5b5061021560048036038101906102109190611a83565b610713565b6040516102229190611adb565b60405180910390f35b348015610236575f80fd5b5061023f610735565b60405161024c9190611b03565b60405180910390f35b348015610260575f80fd5b5061027b60048036038101906102769190611b1c565b61073e565b6040516102889190611adb565b60405180910390f35b34801561029c575f80fd5b506102a561076c565b6040516102b29190611b87565b60405180910390f35b3480156102c6575f80fd5b506102e160048036038101906102dc9190611a83565b610774565b005b3480156102ee575f80fd5b5061030960048036038101906103049190611ba0565b61078a565b005b348015610316575f80fd5b50610331600480360381019061032c9190611ba0565b61079e565b005b34801561033e575f80fd5b5061035960048036038101906103549190611bcb565b61093b565b6040516103669190611b03565b60405180910390f35b34801561037a575f80fd5b50610383610980565b005b348015610390575f80fd5b506103ab60048036038101906103a69190611bcb565b610993565b005b3480156103b8575f80fd5b506103c1610a4c565b6040516103ce9190611b03565b60405180910390f35b3480156103e2575f80fd5b506103fd60048036038101906103f89190611a83565b610a57565b005b34801561040a575f80fd5b50610413610a77565b6040516104209190611b03565b60405180910390f35b348015610434575f80fd5b5061043d610a7e565b60405161044a9190611c05565b60405180910390f35b34801561045e575f80fd5b50610467610aa6565b6040516104749190611b03565b60405180910390f35b348015610488575f80fd5b50610491610b53565b60405161049e91906119d2565b60405180910390f35b3480156104b2575f80fd5b506104cd60048036038101906104c89190611a83565b610be3565b6040516104da9190611adb565b60405180910390f35b3480156104ee575f80fd5b5061050960048036038101906105049190611bcb565b610c05565b6040516105169190611b03565b60405180910390f35b34801561052a575f80fd5b5061054560048036038101906105409190611ba0565b610c7d565b005b348015610552575f80fd5b5061055b610d20565b005b348015610568575f80fd5b50610583600480360381019061057e9190611ba0565b610e96565b6040516105909190611b03565b60405180910390f35b6105a1610f01565b005b3480156105ae575f80fd5b506105c960048036038101906105c49190611bcb565b610fd9565b6040516105d69190611b03565b60405180910390f35b3480156105ea575f80fd5b5061060560048036038101906106009190611c1e565b610fee565b6040516106129190611b03565b60405180910390f35b348015610626575f80fd5b5061062f611070565b005b34801561063c575f80fd5b5061065760048036038101906106529190611bcb565b61110c565b005b348015610664575f80fd5b5061066d611190565b60405161067a9190611b03565b60405180910390f35b60606003805461069290611c89565b80601f01602080910402602001604051908101604052809291908181526020018280546106be90611c89565b80156107095780601f106106e057610100808354040283529160200191610709565b820191905f5260205f20905b8154815290600101906020018083116106ec57829003601f168201915b5050505050905090565b5f8061071d611196565b905061072a81858561119d565b600191505092915050565b5f600254905090565b5f80610748611196565b90506107558582856111af565b610760858585611242565b60019150509392505050565b5f6012905090565b61077c611332565b61078682826113b9565b5050565b61079b610795611196565b82611438565b50565b5f81116107e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d790611d03565b60405180910390fd5b806107ea3361093b565b101561082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290611d6b565b60405180910390fd5b5f610834610aa6565b90505f610190836108459190611db6565b90505f82670de0b6b3a76400008361085d9190611db6565b6108679190611e24565b9050804710156108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390611e9e565b60405180910390fd5b6108b63385611438565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156108f9573d5f803e3d5ffd5b507f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d33858360405161092d93929190611ebc565b60405180910390a150505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610988611332565b6109915f6114b7565b565b61099b611332565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0090611f3b565b60405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b661ff973cafa800081565b610a6982610a63611196565b836111af565b610a738282611438565b5050565b6201518081565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610b12573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b369190611fdf565b5050509150506402540be40081610b4d9190611db6565b91505090565b606060048054610b6290611c89565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8e90611c89565b8015610bd95780601f10610bb057610100808354040283529160200191610bd9565b820191905f5260205f20905b815481529060010190602001808311610bbc57829003601f168201915b5050505050905090565b5f80610bed611196565b9050610bfa818585611242565b600191505092915050565b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442610c509190612056565b9050620151808110610c65575f915050610c78565b8062015180610c749190612056565b9150505b919050565b610c85611332565b5f8111610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe906120d3565b60405180910390fd5b80610cd13361093b565b1015610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d099061213b565b60405180910390fd5b610d1d333083611242565b50565b6201518060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d6c9190612159565b421015610dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da5906121fc565b60405180910390fd5b661ff973cafa8000610dbf3061093b565b1015610e00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df790612264565b60405180910390fd5b4260075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e543033661ff973cafa8000611242565b7f4ccc2cb57d301275bff907df4fcc7431ca6cef9083f95cdc1098086c2360e29a33661ff973cafa8000604051610e8c929190612282565b60405180910390a1565b5f80610ea0610aa6565b90505f670de0b6b3a76400008285610eb89190611db6565b610ec29190611e24565b9050670de0b6b3a7640000610190610eda9190611db6565b670de0b6b3a764000082610eee9190611db6565b610ef89190611e24565b92505050919050565b5f3411610f43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3a906122f3565b60405180910390fd5b5f610f4d34610e96565b90505f8111610f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f889061235b565b60405180910390fd5b610f9b33826113b9565b7f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33338234604051610fce93929190611ebc565b60405180910390a150565b6007602052805f5260405f205f915090505481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611078611332565b5f4790505f81116110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b5906123c3565b60405180910390fd5b6110c6610a7e565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611108573d5f803e3d5ffd5b5050565b611114611332565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611184575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161117b9190611c05565b60405180910390fd5b61118d816114b7565b50565b61019081565b5f33905090565b6111aa838383600161157a565b505050565b5f6111ba8484610fee565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561123c578181101561122d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161122493929190611ebc565b60405180910390fd5b61123b84848484035f61157a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112b2575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112a99190611c05565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611322575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113199190611c05565b60405180910390fd5b61132d838383611749565b505050565b61133a611196565b73ffffffffffffffffffffffffffffffffffffffff16611358610a7e565b73ffffffffffffffffffffffffffffffffffffffff16146113b75761137b611196565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113ae9190611c05565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611429575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114209190611c05565b60405180910390fd5b6114345f8383611749565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114a8575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161149f9190611c05565b60405180910390fd5b6114b3825f83611749565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115ea575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115e19190611c05565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361165a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116519190611c05565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611743578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161173a9190611b03565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611799578060025f82825461178d9190612159565b92505081905550611867565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611822578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161181993929190611ebc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118ae578060025f82825403925050819055506118f8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119559190611b03565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119a482611962565b6119ae818561196c565b93506119be81856020860161197c565b6119c78161198a565b840191505092915050565b5f6020820190508181035f8301526119ea818461199a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a1f826119f6565b9050919050565b611a2f81611a15565b8114611a39575f80fd5b50565b5f81359050611a4a81611a26565b92915050565b5f819050919050565b611a6281611a50565b8114611a6c575f80fd5b50565b5f81359050611a7d81611a59565b92915050565b5f8060408385031215611a9957611a986119f2565b5b5f611aa685828601611a3c565b9250506020611ab785828601611a6f565b9150509250929050565b5f8115159050919050565b611ad581611ac1565b82525050565b5f602082019050611aee5f830184611acc565b92915050565b611afd81611a50565b82525050565b5f602082019050611b165f830184611af4565b92915050565b5f805f60608486031215611b3357611b326119f2565b5b5f611b4086828701611a3c565b9350506020611b5186828701611a3c565b9250506040611b6286828701611a6f565b9150509250925092565b5f60ff82169050919050565b611b8181611b6c565b82525050565b5f602082019050611b9a5f830184611b78565b92915050565b5f60208284031215611bb557611bb46119f2565b5b5f611bc284828501611a6f565b91505092915050565b5f60208284031215611be057611bdf6119f2565b5b5f611bed84828501611a3c565b91505092915050565b611bff81611a15565b82525050565b5f602082019050611c185f830184611bf6565b92915050565b5f8060408385031215611c3457611c336119f2565b5b5f611c4185828601611a3c565b9250506020611c5285828601611a3c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ca057607f821691505b602082108103611cb357611cb2611c5c565b5b50919050565b7f4d7573742073656c6c206d6f7265207468616e203020746f6b656e73000000005f82015250565b5f611ced601c8361196c565b9150611cf882611cb9565b602082019050919050565b5f6020820190508181035f830152611d1a81611ce1565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e63650000000000005f82015250565b5f611d55601a8361196c565b9150611d6082611d21565b602082019050919050565b5f6020820190508181035f830152611d8281611d49565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611dc082611a50565b9150611dcb83611a50565b9250828202611dd981611a50565b91508282048414831517611df057611def611d89565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611e2e82611a50565b9150611e3983611a50565b925082611e4957611e48611df7565b5b828204905092915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f611e88601d8361196c565b9150611e9382611e54565b602082019050919050565b5f6020820190508181035f830152611eb581611e7c565b9050919050565b5f606082019050611ecf5f830186611bf6565b611edc6020830185611af4565b611ee96040830184611af4565b949350505050565b7f496e76616c6964207072696365206665656420616464726573730000000000005f82015250565b5f611f25601a8361196c565b9150611f3082611ef1565b602082019050919050565b5f6020820190508181035f830152611f5281611f19565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611f7781611f59565b8114611f81575f80fd5b50565b5f81519050611f9281611f6e565b92915050565b5f819050919050565b611faa81611f98565b8114611fb4575f80fd5b50565b5f81519050611fc581611fa1565b92915050565b5f81519050611fd981611a59565b92915050565b5f805f805f60a08688031215611ff857611ff76119f2565b5b5f61200588828901611f84565b955050602061201688828901611fb7565b945050604061202788828901611fcb565b935050606061203888828901611fcb565b925050608061204988828901611f84565b9150509295509295909350565b5f61206082611a50565b915061206b83611a50565b925082820390508181111561208357612082611d89565b5b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6120bd601d8361196c565b91506120c882612089565b602082019050919050565b5f6020820190508181035f8301526120ea816120b1565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61212560148361196c565b9150612130826120f1565b602082019050919050565b5f6020820190508181035f83015261215281612119565b9050919050565b5f61216382611a50565b915061216e83611a50565b925082820190508082111561218657612185611d89565b5b92915050565b7f506c65617365207761697420323420686f757273206265747765656e206661755f8201527f6365742072657175657374730000000000000000000000000000000000000000602082015250565b5f6121e6602c8361196c565b91506121f18261218c565b604082019050919050565b5f6020820190508181035f830152612213816121da565b9050919050565b7f46617563657420697320656d70747900000000000000000000000000000000005f82015250565b5f61224e600f8361196c565b91506122598261221a565b602082019050919050565b5f6020820190508181035f83015261227b81612242565b9050919050565b5f6040820190506122955f830185611bf6565b6122a26020830184611af4565b9392505050565b7f4d7573742073656e642045544820746f2062757920746f6b656e7300000000005f82015250565b5f6122dd601b8361196c565b91506122e8826122a9565b602082019050919050565b5f6020820190508181035f83015261230a816122d1565b9050919050565b7f45544820616d6f756e7420746f6f20736d616c6c0000000000000000000000005f82015250565b5f61234560148361196c565b915061235082612311565b602082019050919050565b5f6020820190508181035f83015261237281612339565b9050919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f6123ad60128361196c565b91506123b882612379565b602082019050919050565b5f6020820190508181035f8301526123da816123a1565b905091905056fea2646970667358221220175b9d67b782a0f8282649bb21f01726efaa5978f65b9197e2f774617d4fe11b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xC2507AC1 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xF7A182F5 EQ PUSH2 0x659 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0xC2507AC1 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xD5ACE7BA EQ PUSH2 0x5A3 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xACDE1241 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xAE0140B4 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xB8664F59 EQ PUSH2 0x547 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47D JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x6C11BCD3 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x724E78DA GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x724E78DA EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x3FF JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36F JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E3 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI PUSH2 0x1C1 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C1 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0xA57 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43D PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x545 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55B PUSH2 0xD20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH2 0xF01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x62F PUSH2 0x1070 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x657 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x110C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x66D PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BE SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x709 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x71D PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP PUSH2 0x72A DUP2 DUP6 DUP6 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x748 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP PUSH2 0x755 DUP6 DUP3 DUP6 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x760 DUP6 DUP6 DUP6 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x77C PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x13B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x79B PUSH2 0x795 PUSH2 0x1196 JUMP JUMPDEST DUP3 PUSH2 0x1438 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D7 SWAP1 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x7EA CALLER PUSH2 0x93B JUMP JUMPDEST LT ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x834 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x190 DUP4 PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B6 CALLER DUP6 PUSH2 0x1438 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x2DCF9433D75DB0D8B1C172641F85E319FFE4AD22E108A95D1847CEB906E5195D CALLER DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x92D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x988 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x991 PUSH0 PUSH2 0x14B7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x99B PUSH2 0x1332 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA00 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH7 0x1FF973CAFA8000 DUP2 JUMP JUMPDEST PUSH2 0xA69 DUP3 PUSH2 0xA63 PUSH2 0x1196 JUMP JUMPDEST DUP4 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0xA73 DUP3 DUP3 PUSH2 0x1438 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB62 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8E SWAP1 PUSH2 0x1C89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBB0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBBC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBED PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP PUSH2 0xBFA DUP2 DUP6 DUP6 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP2 LT PUSH2 0xC65 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xC78 JUMP JUMPDEST DUP1 PUSH3 0x15180 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC85 PUSH2 0x1332 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xCD1 CALLER PUSH2 0x93B JUMP JUMPDEST LT ISZERO PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1D CALLER ADDRESS DUP4 PUSH2 0x1242 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA5 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH7 0x1FF973CAFA8000 PUSH2 0xDBF ADDRESS PUSH2 0x93B JUMP JUMPDEST LT ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF7 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE54 ADDRESS CALLER PUSH7 0x1FF973CAFA8000 PUSH2 0x1242 JUMP JUMPDEST PUSH32 0x4CCC2CB57D301275BFF907DF4FCC7431CA6CEF9083F95CDC1098086C2360E29A CALLER PUSH7 0x1FF973CAFA8000 PUSH1 0x40 MLOAD PUSH2 0xE8C SWAP3 SWAP2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEA0 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH2 0xEB8 SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0xEC2 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x190 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3A SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF4D CALLVALUE PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF88 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9B CALLER DUP3 PUSH2 0x13B9 JUMP JUMPDEST PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLER DUP3 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xFCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1078 PUSH2 0x1332 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C6 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1114 PUSH2 0x1332 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1184 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118D DUP2 PUSH2 0x14B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x157A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11BA DUP5 DUP5 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x123C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x122D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x123B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x157A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x132D DUP4 DUP4 DUP4 PUSH2 0x1749 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x133A PUSH2 0x1196 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1358 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B7 JUMPI PUSH2 0x137B PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AE SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1429 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1434 PUSH0 DUP4 DUP4 PUSH2 0x1749 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149F SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B3 DUP3 PUSH0 DUP4 PUSH2 0x1749 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1743 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1799 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1867 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1822 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1819 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18AE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18F8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A4 DUP3 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x19AE DUP2 DUP6 PUSH2 0x196C JUMP JUMPDEST SWAP4 POP PUSH2 0x19BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19C7 DUP2 PUSH2 0x198A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19EA DUP2 DUP5 PUSH2 0x199A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A1F DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2F DUP2 PUSH2 0x1A15 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A39 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4A DUP2 PUSH2 0x1A26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x1A50 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7D DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AB7 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD5 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AEE PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AFD DUP2 PUSH2 0x1A50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B16 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B32 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B40 DUP7 DUP3 DUP8 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B51 DUP7 DUP3 DUP8 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B62 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B81 DUP2 PUSH2 0x1B6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB5 JUMPI PUSH2 0x1BB4 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE0 JUMPI PUSH2 0x1BDF PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BED DUP5 DUP3 DUP6 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BFF DUP2 PUSH2 0x1A15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C41 DUP6 DUP3 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C52 DUP6 DUP3 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CA0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CB3 JUMPI PUSH2 0x1CB2 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742073656C6C206D6F7265207468616E203020746F6B656E7300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CED PUSH1 0x1C DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF8 DUP3 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D1A DUP2 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D55 PUSH1 0x1A DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D60 DUP3 PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D82 DUP2 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DC0 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1DD9 DUP2 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E2E DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E49 JUMPI PUSH2 0x1E48 PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E88 PUSH1 0x1D DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E93 DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB5 DUP2 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ECF PUSH0 DUP4 ADD DUP7 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x1EE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520666565642061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F25 PUSH1 0x1A DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F30 DUP3 PUSH2 0x1EF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F52 DUP2 PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F77 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F92 DUP2 PUSH2 0x1F6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAA DUP2 PUSH2 0x1F98 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC5 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FD9 DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FF8 JUMPI PUSH2 0x1FF7 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2005 DUP9 DUP3 DUP10 ADD PUSH2 0x1F84 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2016 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2027 DUP9 DUP3 DUP10 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2038 DUP9 DUP3 DUP10 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2049 DUP9 DUP3 DUP10 ADD PUSH2 0x1F84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x2060 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x206B DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20BD PUSH1 0x1D DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x20C8 DUP3 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20EA DUP2 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2125 PUSH1 0x14 DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x2130 DUP3 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2152 DUP2 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2163 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP PUSH2 0x216E DUP4 PUSH2 0x1A50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2186 JUMPI PUSH2 0x2185 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365207761697420323420686F757273206265747765656E20666175 PUSH0 DUP3 ADD MSTORE PUSH32 0x6365742072657175657374730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E6 PUSH1 0x2C DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x21F1 DUP3 PUSH2 0x218C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2213 DUP2 PUSH2 0x21DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46617563657420697320656D7074790000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x224E PUSH1 0xF DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x2259 DUP3 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x227B DUP2 PUSH2 0x2242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2295 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x22A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22DD PUSH1 0x1B DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x22E8 DUP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230A DUP2 PUSH2 0x22D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E7420746F6F20736D616C6C000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2345 PUSH1 0x14 DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x2350 DUP3 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2372 DUP2 PUSH2 0x2339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23AD PUSH1 0x12 DUP4 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH2 0x23B8 DUP3 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23DA DUP2 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR JUMPDEST SWAP14 PUSH8 0xB782A0F8282649BB 0x21 CREATE OR 0x26 0xEF 0xAA MSIZE PUSH25 0xF65B9197E2F774617D4FE11B64736F6C634300081A00330000 ",
							"sourceMap": "327:4339:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4365:93:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3170:613:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;4464:200:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;453:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;557:50:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2224:186:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1893:274:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3812:250;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1320:513;;;;;;;;;;;;;:::i;:::-;;2485:260;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2778:354;;;:::i;:::-;;735:52;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4167:192:8;;;;;;;;;;;;;:::i;:::-;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;384:45:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;4365:93:8:-;1531:13:1;:11;:13::i;:::-;4434:17:8::1;4440:2;4444:6;4434:5;:17::i;:::-;4365:93:::0;;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;3170:613:8:-;3250:1;3236:11;:15;3228:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3327:11;3302:21;3312:10;3302:9;:21::i;:::-;:36;;3294:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3380:19;3402:16;:14;:16::i;:::-;3380:38;;3428:16;426:3;3447:11;:29;;;;:::i;:::-;3428:48;;3486:17;3526:11;3518:4;3507:8;:15;;;;:::i;:::-;3506:31;;;;:::i;:::-;3486:51;;3581:9;3556:21;:34;;3548:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3635:30;3641:10;3653:11;3635:5;:30::i;:::-;3683:10;3675:28;;:39;3704:9;3675:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3730:46;3741:10;3753:11;3766:9;3730:46;;;;;;;;:::i;:::-;;;;;;;;3218:565;;;3170:613;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4464:200:8:-;1531:13:1;:11;:13::i;:::-;4567:1:8::1;4543:26;;:12;:26;;::::0;4535:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4644:12;4610:9;;:47;;;;;;;;;;;;;;;;;;4464:200:::0;:::o;453:56::-;493:16;453:56;:::o;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;557:50:8:-;599:8;557:50;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2224:186:8:-;2271:7;2293:12;2312:9;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2290:49;;;;;;2373:4;2364:5;2356:21;;;;:::i;:::-;2349:28;;;2224:186;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1893:274:8:-;1957:7;1976:18;2015:17;:23;2033:4;2015:23;;;;;;;;;;;;;;;;1997:15;:41;;;;:::i;:::-;1976:62;;599:8;2052:10;:29;2048:68;;2104:1;2097:8;;;;;2048:68;2150:10;599:8;2132:28;;;;:::i;:::-;2125:35;;;1893:274;;;;:::o;3812:250::-;1531:13:1;:11;:13::i;:::-;3892:1:8::1;3883:6;:10;3875:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3970:6;3945:21;3955:10;3945:9;:21::i;:::-;:31;;3937:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4011:44;4021:10;4041:4;4048:6;4011:9;:44::i;:::-;3812:250:::0;:::o;1320:513::-;599:8;1402:17;:29;1420:10;1402:29;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;1383:15;:66;;1362:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;493:16;1559:24;1577:4;1559:9;:24::i;:::-;:41;;1538:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;1684:15;1652:17;:29;1670:10;1652:29;;;;;;;;;;;;;;;:47;;;;1709:51;1727:4;1734:10;493:16;1709:9;:51::i;:::-;1784:42;1800:10;493:16;1784:42;;;;;;;:::i;:::-;;;;;;;;1320:513::o;2485:260::-;2549:7;2568:19;2590:16;:14;:16::i;:::-;2568:38;;2616:21;2668:4;2653:11;2641:9;:23;;;;:::i;:::-;2640:32;;;;:::i;:::-;2616:56;;2733:4;426:3;2715:22;;;;:::i;:::-;2706:4;2690:13;:20;;;;:::i;:::-;2689:49;;;;:::i;:::-;2682:56;;;;2485:260;;;:::o;2778:354::-;2844:1;2832:9;:13;2824:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2896:19;2918:25;2933:9;2918:14;:25::i;:::-;2896:47;;2975:1;2961:11;:15;2953:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3020:30;3026:10;3038:11;3020:5;:30::i;:::-;3074:51;3090:10;3102:11;3115:9;3074:51;;;;;;;;:::i;:::-;;;;;;;;2814:318;2778:354::o;735:52::-;;;;;;;;;;;;;;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;4167:192:8:-;1531:13:1;:11;:13::i;:::-;4217:15:8::1;4235:21;4217:39;;4284:1;4274:7;:11;4266:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;4326:7;:5;:7::i;:::-;4318:25;;:34;4344:7;4318:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;4207:152;4167:192::o:0;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;384:45:8:-;426:3;384:45;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:3:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:178::-;6900:30;6896:1;6888:6;6884:14;6877:54;6760:178;:::o;6944:366::-;7086:3;7107:67;7171:2;7166:3;7107:67;:::i;:::-;7100:74;;7183:93;7272:3;7183:93;:::i;:::-;7301:2;7296:3;7292:12;7285:19;;6944:366;;;:::o;7316:419::-;7482:4;7520:2;7509:9;7505:18;7497:26;;7569:9;7563:4;7559:20;7555:1;7544:9;7540:17;7533:47;7597:131;7723:4;7597:131;:::i;:::-;7589:139;;7316:419;;;:::o;7741:176::-;7881:28;7877:1;7869:6;7865:14;7858:52;7741:176;:::o;7923:366::-;8065:3;8086:67;8150:2;8145:3;8086:67;:::i;:::-;8079:74;;8162:93;8251:3;8162:93;:::i;:::-;8280:2;8275:3;8271:12;8264:19;;7923:366;;;:::o;8295:419::-;8461:4;8499:2;8488:9;8484:18;8476:26;;8548:9;8542:4;8538:20;8534:1;8523:9;8519:17;8512:47;8576:131;8702:4;8576:131;:::i;:::-;8568:139;;8295:419;;;:::o;8720:180::-;8768:77;8765:1;8758:88;8865:4;8862:1;8855:15;8889:4;8886:1;8879:15;8906:410;8946:7;8969:20;8987:1;8969:20;:::i;:::-;8964:25;;9003:20;9021:1;9003:20;:::i;:::-;8998:25;;9058:1;9055;9051:9;9080:30;9098:11;9080:30;:::i;:::-;9069:41;;9259:1;9250:7;9246:15;9243:1;9240:22;9220:1;9213:9;9193:83;9170:139;;9289:18;;:::i;:::-;9170:139;8954:362;8906:410;;;;:::o;9322:180::-;9370:77;9367:1;9360:88;9467:4;9464:1;9457:15;9491:4;9488:1;9481:15;9508:185;9548:1;9565:20;9583:1;9565:20;:::i;:::-;9560:25;;9599:20;9617:1;9599:20;:::i;:::-;9594:25;;9638:1;9628:35;;9643:18;;:::i;:::-;9628:35;9685:1;9682;9678:9;9673:14;;9508:185;;;;:::o;9699:179::-;9839:31;9835:1;9827:6;9823:14;9816:55;9699:179;:::o;9884:366::-;10026:3;10047:67;10111:2;10106:3;10047:67;:::i;:::-;10040:74;;10123:93;10212:3;10123:93;:::i;:::-;10241:2;10236:3;10232:12;10225:19;;9884:366;;;:::o;10256:419::-;10422:4;10460:2;10449:9;10445:18;10437:26;;10509:9;10503:4;10499:20;10495:1;10484:9;10480:17;10473:47;10537:131;10663:4;10537:131;:::i;:::-;10529:139;;10256:419;;;:::o;10681:442::-;10830:4;10868:2;10857:9;10853:18;10845:26;;10881:71;10949:1;10938:9;10934:17;10925:6;10881:71;:::i;:::-;10962:72;11030:2;11019:9;11015:18;11006:6;10962:72;:::i;:::-;11044;11112:2;11101:9;11097:18;11088:6;11044:72;:::i;:::-;10681:442;;;;;;:::o;11129:176::-;11269:28;11265:1;11257:6;11253:14;11246:52;11129:176;:::o;11311:366::-;11453:3;11474:67;11538:2;11533:3;11474:67;:::i;:::-;11467:74;;11550:93;11639:3;11550:93;:::i;:::-;11668:2;11663:3;11659:12;11652:19;;11311:366;;;:::o;11683:419::-;11849:4;11887:2;11876:9;11872:18;11864:26;;11936:9;11930:4;11926:20;11922:1;11911:9;11907:17;11900:47;11964:131;12090:4;11964:131;:::i;:::-;11956:139;;11683:419;;;:::o;12108:105::-;12144:7;12184:22;12177:5;12173:34;12162:45;;12108:105;;;:::o;12219:120::-;12291:23;12308:5;12291:23;:::i;:::-;12284:5;12281:34;12271:62;;12329:1;12326;12319:12;12271:62;12219:120;:::o;12345:141::-;12401:5;12432:6;12426:13;12417:22;;12448:32;12474:5;12448:32;:::i;:::-;12345:141;;;;:::o;12492:76::-;12528:7;12557:5;12546:16;;12492:76;;;:::o;12574:120::-;12646:23;12663:5;12646:23;:::i;:::-;12639:5;12636:34;12626:62;;12684:1;12681;12674:12;12626:62;12574:120;:::o;12700:141::-;12756:5;12787:6;12781:13;12772:22;;12803:32;12829:5;12803:32;:::i;:::-;12700:141;;;;:::o;12847:143::-;12904:5;12935:6;12929:13;12920:22;;12951:33;12978:5;12951:33;:::i;:::-;12847:143;;;;:::o;12996:971::-;13099:6;13107;13115;13123;13131;13180:3;13168:9;13159:7;13155:23;13151:33;13148:120;;;13187:79;;:::i;:::-;13148:120;13307:1;13332:63;13387:7;13378:6;13367:9;13363:22;13332:63;:::i;:::-;13322:73;;13278:127;13444:2;13470:63;13525:7;13516:6;13505:9;13501:22;13470:63;:::i;:::-;13460:73;;13415:128;13582:2;13608:64;13664:7;13655:6;13644:9;13640:22;13608:64;:::i;:::-;13598:74;;13553:129;13721:2;13747:64;13803:7;13794:6;13783:9;13779:22;13747:64;:::i;:::-;13737:74;;13692:129;13860:3;13887:63;13942:7;13933:6;13922:9;13918:22;13887:63;:::i;:::-;13877:73;;13831:129;12996:971;;;;;;;;:::o;13973:194::-;14013:4;14033:20;14051:1;14033:20;:::i;:::-;14028:25;;14067:20;14085:1;14067:20;:::i;:::-;14062:25;;14111:1;14108;14104:9;14096:17;;14135:1;14129:4;14126:11;14123:37;;;14140:18;;:::i;:::-;14123:37;13973:194;;;;:::o;14173:179::-;14313:31;14309:1;14301:6;14297:14;14290:55;14173:179;:::o;14358:366::-;14500:3;14521:67;14585:2;14580:3;14521:67;:::i;:::-;14514:74;;14597:93;14686:3;14597:93;:::i;:::-;14715:2;14710:3;14706:12;14699:19;;14358:366;;;:::o;14730:419::-;14896:4;14934:2;14923:9;14919:18;14911:26;;14983:9;14977:4;14973:20;14969:1;14958:9;14954:17;14947:47;15011:131;15137:4;15011:131;:::i;:::-;15003:139;;14730:419;;;:::o;15155:170::-;15295:22;15291:1;15283:6;15279:14;15272:46;15155:170;:::o;15331:366::-;15473:3;15494:67;15558:2;15553:3;15494:67;:::i;:::-;15487:74;;15570:93;15659:3;15570:93;:::i;:::-;15688:2;15683:3;15679:12;15672:19;;15331:366;;;:::o;15703:419::-;15869:4;15907:2;15896:9;15892:18;15884:26;;15956:9;15950:4;15946:20;15942:1;15931:9;15927:17;15920:47;15984:131;16110:4;15984:131;:::i;:::-;15976:139;;15703:419;;;:::o;16128:191::-;16168:3;16187:20;16205:1;16187:20;:::i;:::-;16182:25;;16221:20;16239:1;16221:20;:::i;:::-;16216:25;;16264:1;16261;16257:9;16250:16;;16285:3;16282:1;16279:10;16276:36;;;16292:18;;:::i;:::-;16276:36;16128:191;;;;:::o;16325:231::-;16465:34;16461:1;16453:6;16449:14;16442:58;16534:14;16529:2;16521:6;16517:15;16510:39;16325:231;:::o;16562:366::-;16704:3;16725:67;16789:2;16784:3;16725:67;:::i;:::-;16718:74;;16801:93;16890:3;16801:93;:::i;:::-;16919:2;16914:3;16910:12;16903:19;;16562:366;;;:::o;16934:419::-;17100:4;17138:2;17127:9;17123:18;17115:26;;17187:9;17181:4;17177:20;17173:1;17162:9;17158:17;17151:47;17215:131;17341:4;17215:131;:::i;:::-;17207:139;;16934:419;;;:::o;17359:165::-;17499:17;17495:1;17487:6;17483:14;17476:41;17359:165;:::o;17530:366::-;17672:3;17693:67;17757:2;17752:3;17693:67;:::i;:::-;17686:74;;17769:93;17858:3;17769:93;:::i;:::-;17887:2;17882:3;17878:12;17871:19;;17530:366;;;:::o;17902:419::-;18068:4;18106:2;18095:9;18091:18;18083:26;;18155:9;18149:4;18145:20;18141:1;18130:9;18126:17;18119:47;18183:131;18309:4;18183:131;:::i;:::-;18175:139;;17902:419;;;:::o;18327:332::-;18448:4;18486:2;18475:9;18471:18;18463:26;;18499:71;18567:1;18556:9;18552:17;18543:6;18499:71;:::i;:::-;18580:72;18648:2;18637:9;18633:18;18624:6;18580:72;:::i;:::-;18327:332;;;;;:::o;18665:177::-;18805:29;18801:1;18793:6;18789:14;18782:53;18665:177;:::o;18848:366::-;18990:3;19011:67;19075:2;19070:3;19011:67;:::i;:::-;19004:74;;19087:93;19176:3;19087:93;:::i;:::-;19205:2;19200:3;19196:12;19189:19;;18848:366;;;:::o;19220:419::-;19386:4;19424:2;19413:9;19409:18;19401:26;;19473:9;19467:4;19463:20;19459:1;19448:9;19444:17;19437:47;19501:131;19627:4;19501:131;:::i;:::-;19493:139;;19220:419;;;:::o;19645:170::-;19785:22;19781:1;19773:6;19769:14;19762:46;19645:170;:::o;19821:366::-;19963:3;19984:67;20048:2;20043:3;19984:67;:::i;:::-;19977:74;;20060:93;20149:3;20060:93;:::i;:::-;20178:2;20173:3;20169:12;20162:19;;19821:366;;;:::o;20193:419::-;20359:4;20397:2;20386:9;20382:18;20374:26;;20446:9;20440:4;20436:20;20432:1;20421:9;20417:17;20410:47;20474:131;20600:4;20474:131;:::i;:::-;20466:139;;20193:419;;;:::o;20618:168::-;20758:20;20754:1;20746:6;20742:14;20735:44;20618:168;:::o;20792:366::-;20934:3;20955:67;21019:2;21014:3;20955:67;:::i;:::-;20948:74;;21031:93;21120:3;21031:93;:::i;:::-;21149:2;21144:3;21140:12;21133:19;;20792:366;;;:::o;21164:419::-;21330:4;21368:2;21357:9;21353:18;21345:26;;21417:9;21411:4;21407:20;21403:1;21392:9;21388:17;21381:47;21445:131;21571:4;21445:131;:::i;:::-;21437:139;;21164:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1847800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FAUCET_AMOUNT()": "392",
								"FAUCET_COOLDOWN()": "436",
								"TOKEN_PRICE_USD()": "435",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2897",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"buyTokens()": "infinite",
								"decimals()": "406",
								"fundFaucet(uint256)": "infinite",
								"getLatestPrice()": "infinite",
								"getTokenAmount(uint256)": "infinite",
								"lastFaucetRequest(address)": "2891",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2561",
								"renounceOwnership()": "infinite",
								"requestFaucet()": "infinite",
								"sellTokens(uint256)": "infinite",
								"setPriceFeed(address)": "infinite",
								"symbol()": "infinite",
								"timeUntilNextFaucet(address)": "infinite",
								"totalSupply()": "2523",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawETH()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 327,
									"end": 4666,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1018,
									"end": 1272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1146,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "464C494242455200000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "2446494200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1209,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1167,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1158,
									"end": 1167,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1210,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1265,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1226,
									"end": 1236,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1264,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1254,
									"end": 1262,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1254,
									"end": 1262,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1254,
									"end": 1262,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1264,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1254,
									"end": 1264,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1264,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1264,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1254,
									"end": 1264,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1248,
									"end": 1250,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1248,
									"end": 1264,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1248,
									"end": 1264,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1248,
									"end": 1264,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1248,
									"end": 1264,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1248,
									"end": 1264,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1248,
									"end": 1264,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1248,
									"end": 1264,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1245,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "F4240"
								},
								{
									"begin": 1238,
									"end": 1264,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1238,
									"end": 1264,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1264,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1264,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1264,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1264,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1238,
									"end": 1264,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1225,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1220,
									"end": 1225,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1225,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1265,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1265,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1265,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1265,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1220,
									"end": 1265,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1272,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6985,
									"end": 7062,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6982,
									"end": 6983,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6975,
									"end": 7063,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7082,
									"end": 7086,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 7079,
									"end": 7080,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 7072,
									"end": 7087,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7106,
									"end": 7110,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7096,
									"end": 7111,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7165,
									"end": 7173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7217,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7209,
									"end": 7210,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7205,
									"end": 7218,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7123,
									"end": 7225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7292,
									"end": 7297,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7299,
									"end": 7303,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7323,
									"end": 7329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7347,
									"end": 7352,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7382,
									"end": 7383,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7372,
									"end": 7380,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7369,
									"end": 7384,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7477,
									"end": 7481,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7468,
									"end": 7482,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 7462,
									"end": 7466,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7459,
									"end": 7483,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 7486,
									"end": 7504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7526,
									"end": 7534,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7951,
									"end": 7955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7944,
									"end": 7949,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7940,
									"end": 7956,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8001,
									"end": 8005,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7995,
									"end": 7999,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7991,
									"end": 8006,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8054,
									"end": 8062,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 8031,
									"end": 8063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7231,
									"end": 8079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8139,
									"end": 8144,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8330,
									"end": 8338,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8351,
									"end": 8352,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8379,
									"end": 8383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8396,
									"end": 8397,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8465,
									"end": 8469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8513,
									"end": 8514,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8549,
									"end": 8550,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "tag",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8526,
									"end": 8527,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 8579,
									"end": 8587,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8576,
									"end": 8593,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8596,
									"end": 8614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8645,
									"end": 8653,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8642,
									"end": 8643,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8638,
									"end": 8654,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8680,
									"end": 8683,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8673,
									"end": 8678,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8670,
									"end": 8684,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8687,
									"end": 8705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "tag",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8844,
									"end": 8846,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8834,
									"end": 8842,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8831,
									"end": 8847,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8825,
									"end": 8828,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 8819,
									"end": 8823,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8816,
									"end": 8829,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8812,
									"end": 8848,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8794,
									"end": 8796,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 8784,
									"end": 8792,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8781,
									"end": 8797,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8776,
									"end": 8778,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8767,
									"end": 8779,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8763,
									"end": 8798,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8747,
									"end": 8858,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8900,
									"end": 8908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8894,
									"end": 8898,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8890,
									"end": 8909,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8935,
									"end": 8938,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8928,
									"end": 8933,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8925,
									"end": 8939,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "tag",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 9053,
									"end": 9056,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9043,
									"end": 9051,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9037,
									"end": 9041,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9034,
									"end": 9035,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 9015,
									"end": 9057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9089,
									"end": 9093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9084,
									"end": 9087,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9080,
									"end": 9094,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 9073,
									"end": 9078,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9070,
									"end": 9095,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 9098,
									"end": 9116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9147,
									"end": 9151,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9140,
									"end": 9145,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9136,
									"end": 9152,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8085,
									"end": 9158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9199,
									"end": 9206,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9239,
									"end": 9243,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 9232,
									"end": 9237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9228,
									"end": 9244,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9164,
									"end": 9250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9314,
									"end": 9319,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9356,
									"end": 9360,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9338,
									"end": 9361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9330,
									"end": 9361,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9330,
									"end": 9361,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9398,
									"end": 9406,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 9382,
									"end": 9407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9370,
									"end": 9407,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9370,
									"end": 9407,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 9463,
									"end": 9529,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9453,
									"end": 9461,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9447,
									"end": 9451,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 9426,
									"end": 9530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9417,
									"end": 9530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9417,
									"end": 9530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9256,
									"end": 9537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9583,
									"end": 9590,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9624,
									"end": 9625,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9606,
									"end": 9626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9601,
									"end": 9626,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9601,
									"end": 9626,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9658,
									"end": 9659,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9640,
									"end": 9660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9635,
									"end": 9660,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9635,
									"end": 9660,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9696,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9692,
									"end": 9693,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9688,
									"end": 9697,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9735,
									"end": 9746,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 9717,
									"end": 9747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9706,
									"end": 9747,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9706,
									"end": 9747,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9896,
									"end": 9897,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9887,
									"end": 9894,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9883,
									"end": 9898,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9877,
									"end": 9899,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 9857,
									"end": 9858,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9850,
									"end": 9859,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9830,
									"end": 9913,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 9926,
									"end": 9944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "tag",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9591,
									"end": 9953,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9543,
									"end": 9953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9999,
									"end": 10002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 10036,
									"end": 10037,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 10018,
									"end": 10038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "tag",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10013,
									"end": 10038,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10013,
									"end": 10038,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 10070,
									"end": 10071,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 10052,
									"end": 10072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10047,
									"end": 10072,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10047,
									"end": 10072,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10095,
									"end": 10096,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10092,
									"end": 10093,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10088,
									"end": 10097,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10081,
									"end": 10097,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10081,
									"end": 10097,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10116,
									"end": 10119,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10113,
									"end": 10114,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10110,
									"end": 10120,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 10123,
									"end": 10141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "tag",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9959,
									"end": 10150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 10261,
									"end": 10266,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 10243,
									"end": 10267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10238,
									"end": 10241,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10231,
									"end": 10268,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10156,
									"end": 10274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10429,
									"end": 10433,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10467,
									"end": 10469,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 10456,
									"end": 10465,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10452,
									"end": 10470,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 10548,
									"end": 10549,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10537,
									"end": 10546,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10533,
									"end": 10550,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10524,
									"end": 10530,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 10480,
									"end": 10551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "tag",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 10629,
									"end": 10631,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10618,
									"end": 10627,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10614,
									"end": 10632,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10605,
									"end": 10611,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10561,
									"end": 10633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "tag",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 10711,
									"end": 10713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 10700,
									"end": 10709,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10696,
									"end": 10714,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10687,
									"end": 10693,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10643,
									"end": 10715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "tag",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10280,
									"end": 10722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10821,
									"end": 10825,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10859,
									"end": 10861,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10848,
									"end": 10857,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10844,
									"end": 10862,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 10940,
									"end": 10941,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10929,
									"end": 10938,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10925,
									"end": 10942,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10916,
									"end": 10922,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 10872,
									"end": 10943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "tag",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 4666,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220175b9d67b782a0f8282649bb21f01726efaa5978f65b9197e2f774617d4fe11b64736f6c634300081a0033",
									".code": [
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "C2507AC1"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "E086E5EC"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "F7A182F5"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "C2507AC1"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "D0FEBE4C"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "D5ACE7BA"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "ACDE1241"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "AE0140B4"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "B8664F59"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "8E15F473"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "6C11BCD3"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "724E78DA"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "724E78DA"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "76697640"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "7D1D5D19"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "6C11BCD3"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 4666,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4365,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4365,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3170,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3170,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4464,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4464,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 453,
											"end": 509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 453,
											"end": 509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 607,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 557,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 557,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2224,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2224,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1893,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1893,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1893,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3812,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3812,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1320,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2485,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2485,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2485,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2778,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 735,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 735,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 735,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4167,
											"end": 4359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 384,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 384,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4440,
											"end": 4442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4444,
											"end": 4450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4434,
											"end": 4451,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4434,
											"end": 4451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3247,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3236,
											"end": 3251,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3228,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3228,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3327,
											"end": 3338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3312,
											"end": 3322,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3302,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3302,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3338,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3338,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3294,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3294,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3399,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3402,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3402,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3418,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3402,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 429,
											"name": "PUSH",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3447,
											"end": 3458,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3447,
											"end": 3476,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3447,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3476,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3447,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3507,
											"end": 3515,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3507,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3506,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3577,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3590,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3548,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3548,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3641,
											"end": 3651,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3635,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3665,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3635,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3693,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "2DCF9433D75DB0D8B1C172641F85E319FFE4AD22E108A95D1847CEB906E5195D"
										},
										{
											"begin": 3741,
											"end": 3751,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3764,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3775,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3730,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3776,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4543,
											"end": 4569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4555,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4543,
											"end": 4569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4569,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4535,
											"end": 4600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4535,
											"end": 4600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4656,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4610,
											"end": 4619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4657,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 509,
											"name": "PUSH",
											"source": 8,
											"value": "1FF973CAFA8000"
										},
										{
											"begin": 453,
											"end": 509,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 607,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 599,
											"end": 607,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 557,
											"end": 607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2305,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"name": "PUSH",
											"source": 8,
											"value": "FEAF968C"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2312,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2312,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "PUSH",
											"source": 8,
											"value": "2540BE400"
										},
										{
											"begin": 2364,
											"end": 2369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2037,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2012,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1997,
											"end": 2038,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1997,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2038,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1997,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 2038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 2038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 599,
											"end": 607,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 2052,
											"end": 2062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2081,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2048,
											"end": 2116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2116,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2048,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 599,
											"end": 607,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2132,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 2167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3893,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3875,
											"end": 3927,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3875,
											"end": 3927,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 3976,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3955,
											"end": 3965,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3945,
											"end": 3966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3945,
											"end": 3966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3976,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3976,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3937,
											"end": 4001,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3937,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4011,
											"end": 4055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4021,
											"end": 4031,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4045,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4054,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4011,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4011,
											"end": 4055,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4011,
											"end": 4055,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4011,
											"end": 4055,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1320,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 599,
											"end": 607,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 1402,
											"end": 1419,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1430,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1402,
											"end": 1449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1402,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1449,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1402,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1449,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1449,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1362,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1362,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 509,
											"name": "PUSH",
											"source": 8,
											"value": "1FF973CAFA8000"
										},
										{
											"begin": 1559,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1577,
											"end": 1581,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1559,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1583,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1559,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1600,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1538,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1538,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1699,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1680,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1699,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1699,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 1699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1744,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 493,
											"end": 509,
											"name": "PUSH",
											"source": 8,
											"value": "1FF973CAFA8000"
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1709,
											"end": 1760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1760,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1709,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "4CCC2CB57D301275BFF907DF4FCC7431CA6CEF9083F95CDC1098086C2360E29A"
										},
										{
											"begin": 1800,
											"end": 1810,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 493,
											"end": 509,
											"name": "PUSH",
											"source": 8,
											"value": "1FF973CAFA8000"
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1784,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2590,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2606,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2590,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2672,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2641,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2640,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2737,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 426,
											"end": 429,
											"name": "PUSH",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2715,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2690,
											"end": 2703,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2690,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2689,
											"end": 2738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2689,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2738,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2689,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2738,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2778,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2841,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2824,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2933,
											"end": 2942,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2918,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2943,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2918,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2896,
											"end": 2943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2896,
											"end": 2943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2953,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2953,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3026,
											"end": 3036,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3020,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33"
										},
										{
											"begin": 3090,
											"end": 3100,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3102,
											"end": 3113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3124,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3074,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 3132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 3132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 735,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4167,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4256,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4256,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4285,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 4266,
											"end": 4308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4266,
											"end": 4308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4326,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4326,
											"end": 4333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4318,
											"end": 4343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 4344,
											"end": 4351,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 426,
											"end": 429,
											"name": "PUSH",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 384,
											"end": 429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6938,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6760,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6900,
											"end": 6930,
											"name": "PUSH",
											"source": 9,
											"value": "4D7573742073656C6C206D6F7265207468616E203020746F6B656E7300000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6877,
											"end": 6931,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7171,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 7166,
											"end": 7169,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 7107,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 7272,
											"end": 7275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7183,
											"end": 7276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7303,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7296,
											"end": 7299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7285,
											"end": 7304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7285,
											"end": 7304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 7310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7563,
											"end": 7567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7540,
											"end": 7557,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7580,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 7723,
											"end": 7727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7597,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7741,
											"end": 7917,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 7741,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7909,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E7420746F6B656E2062616C616E6365000000000000"
										},
										{
											"begin": 7877,
											"end": 7878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7865,
											"end": 7879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7858,
											"end": 7910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7741,
											"end": 7917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7741,
											"end": 7917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 8289,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 7923,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 8150,
											"end": 8152,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 8145,
											"end": 8148,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 8086,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8153,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 8086,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 8251,
											"end": 8254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8162,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8255,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 8162,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8280,
											"end": 8282,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8264,
											"end": 8283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8264,
											"end": 8283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 8289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 8289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 8289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 8289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8714,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 8295,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8501,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8484,
											"end": 8502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8557,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8538,
											"end": 8558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8534,
											"end": 8535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8532,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8512,
											"end": 8559,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8576,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 8702,
											"end": 8706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8576,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 8576,
											"end": 8707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8576,
											"end": 8707,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 8576,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8568,
											"end": 8707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8568,
											"end": 8707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8714,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8714,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8714,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8720,
											"end": 8900,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 8720,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8768,
											"end": 8845,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8846,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8865,
											"end": 8869,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8855,
											"end": 8870,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 8893,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8886,
											"end": 8887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8894,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 9316,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8906,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 8987,
											"end": 8988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 8969,
											"end": 8989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 9003,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9058,
											"end": 9059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9051,
											"end": 9060,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 9098,
											"end": 9109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 9080,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9110,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 9080,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9250,
											"end": 9257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9246,
											"end": 9261,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9243,
											"end": 9244,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9220,
											"end": 9221,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9222,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9193,
											"end": 9276,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 9170,
											"end": 9309,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 9289,
											"end": 9307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9309,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 9170,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 9316,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 9316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 9316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 9316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 9316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9322,
											"end": 9502,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9322,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9447,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9367,
											"end": 9368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 9464,
											"end": 9465,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9457,
											"end": 9472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9495,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9488,
											"end": 9489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9496,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9693,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 9508,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 9583,
											"end": 9584,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 9565,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 9617,
											"end": 9618,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 9599,
											"end": 9619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9619,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9638,
											"end": 9639,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 9628,
											"end": 9663,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9643,
											"end": 9661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9663,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 9628,
											"end": 9663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9685,
											"end": 9686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9682,
											"end": 9683,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9678,
											"end": 9687,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9673,
											"end": 9687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9673,
											"end": 9687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9693,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9878,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 9699,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9870,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 9835,
											"end": 9836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9837,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9816,
											"end": 9871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 10250,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 9884,
											"end": 10250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10026,
											"end": 10029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 10111,
											"end": 10113,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 10106,
											"end": 10109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10047,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10047,
											"end": 10114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10047,
											"end": 10114,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 10047,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10040,
											"end": 10114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10040,
											"end": 10114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10123,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 10212,
											"end": 10215,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10123,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10123,
											"end": 10216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10123,
											"end": 10216,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 10123,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10241,
											"end": 10243,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10236,
											"end": 10239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10232,
											"end": 10244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10225,
											"end": 10244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10225,
											"end": 10244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 10250,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 10250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 10250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 10250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10675,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 10256,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10460,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10449,
											"end": 10458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10445,
											"end": 10463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10437,
											"end": 10463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10437,
											"end": 10463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10503,
											"end": 10507,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10484,
											"end": 10493,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10480,
											"end": 10497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 10663,
											"end": 10667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 10537,
											"end": 10668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10668,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 10537,
											"end": 10668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10675,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10830,
											"end": 10834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10870,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10857,
											"end": 10866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 10871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10845,
											"end": 10871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10845,
											"end": 10871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 10949,
											"end": 10950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10947,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 10951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10925,
											"end": 10931,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 10881,
											"end": 10952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 10952,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 10881,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10962,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 11030,
											"end": 11032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11019,
											"end": 11028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10962,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10962,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10962,
											"end": 11034,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 10962,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 11112,
											"end": 11114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11101,
											"end": 11110,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11097,
											"end": 11115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11088,
											"end": 11094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 11044,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11116,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 11044,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 11123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11305,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11129,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11269,
											"end": 11297,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C696420707269636520666565642061646472657373000000000000"
										},
										{
											"begin": 11265,
											"end": 11266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11257,
											"end": 11263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11246,
											"end": 11298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11677,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 11311,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11453,
											"end": 11456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 11538,
											"end": 11540,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 11533,
											"end": 11536,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11474,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11474,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11474,
											"end": 11541,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 11474,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11550,
											"end": 11643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 11639,
											"end": 11642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11550,
											"end": 11643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11550,
											"end": 11643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11550,
											"end": 11643,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 11550,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11668,
											"end": 11670,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11677,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11683,
											"end": 12102,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 11683,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11876,
											"end": 11885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11872,
											"end": 11890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11864,
											"end": 11890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11864,
											"end": 11890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11936,
											"end": 11945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11930,
											"end": 11934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11926,
											"end": 11946,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11920,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 11924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 11947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 12090,
											"end": 12094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 11964,
											"end": 12095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12095,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 11964,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11956,
											"end": 12095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11956,
											"end": 12095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11683,
											"end": 12102,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11683,
											"end": 12102,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11683,
											"end": 12102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11683,
											"end": 12102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12213,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 12108,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12144,
											"end": 12151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12206,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12207,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12162,
											"end": 12207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12162,
											"end": 12207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12108,
											"end": 12213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12219,
											"end": 12339,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12219,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12291,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 12308,
											"end": 12313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12291,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 12291,
											"end": 12314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12291,
											"end": 12314,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 12291,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12284,
											"end": 12289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12315,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12271,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 12271,
											"end": 12333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12329,
											"end": 12330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12326,
											"end": 12327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12319,
											"end": 12331,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12271,
											"end": 12333,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 12271,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12219,
											"end": 12339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12219,
											"end": 12339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12486,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 12345,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12432,
											"end": 12438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12426,
											"end": 12439,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12417,
											"end": 12439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12417,
											"end": 12439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12448,
											"end": 12480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 12474,
											"end": 12479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12448,
											"end": 12480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12448,
											"end": 12480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12448,
											"end": 12480,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 12448,
											"end": 12480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12486,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12546,
											"end": 12562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12546,
											"end": 12562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12492,
											"end": 12568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12694,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12574,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 12663,
											"end": 12668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12646,
											"end": 12669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12669,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 12646,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12636,
											"end": 12670,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12626,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 12626,
											"end": 12688,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12684,
											"end": 12685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12681,
											"end": 12682,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12674,
											"end": 12686,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12626,
											"end": 12688,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 12626,
											"end": 12688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12700,
											"end": 12841,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 12700,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12756,
											"end": 12761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12787,
											"end": 12793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12781,
											"end": 12794,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 12829,
											"end": 12834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12803,
											"end": 12835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12835,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 12803,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12700,
											"end": 12841,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12700,
											"end": 12841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12700,
											"end": 12841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12700,
											"end": 12841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12700,
											"end": 12841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12990,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12847,
											"end": 12990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12904,
											"end": 12909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12929,
											"end": 12942,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12920,
											"end": 12942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12920,
											"end": 12942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12951,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 12978,
											"end": 12983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12951,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 12951,
											"end": 12984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12951,
											"end": 12984,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 12951,
											"end": 12984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12990,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12990,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13099,
											"end": 13105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13107,
											"end": 13113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13115,
											"end": 13121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13131,
											"end": 13137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13183,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 13168,
											"end": 13177,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13159,
											"end": 13166,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13155,
											"end": 13178,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13151,
											"end": 13184,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 13148,
											"end": 13268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 13187,
											"end": 13266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 13187,
											"end": 13266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13268,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 13148,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13307,
											"end": 13308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 13387,
											"end": 13394,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13378,
											"end": 13384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13367,
											"end": 13376,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 13363,
											"end": 13385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13332,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 13332,
											"end": 13395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13332,
											"end": 13395,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 13332,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13322,
											"end": 13395,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 13322,
											"end": 13395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13278,
											"end": 13405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13444,
											"end": 13446,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13470,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 13525,
											"end": 13532,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13516,
											"end": 13522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13505,
											"end": 13514,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 13501,
											"end": 13523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 13470,
											"end": 13533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13533,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 13470,
											"end": 13533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13460,
											"end": 13533,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13460,
											"end": 13533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13582,
											"end": 13584,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 13664,
											"end": 13671,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13644,
											"end": 13653,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 13640,
											"end": 13662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13608,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 13608,
											"end": 13672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13608,
											"end": 13672,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 13608,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13672,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13553,
											"end": 13682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13721,
											"end": 13723,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13747,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 13803,
											"end": 13810,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13794,
											"end": 13800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13783,
											"end": 13792,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 13779,
											"end": 13801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13747,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 13747,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13747,
											"end": 13811,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 13747,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13737,
											"end": 13811,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13737,
											"end": 13811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 13821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13860,
											"end": 13863,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 13887,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 13942,
											"end": 13949,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13933,
											"end": 13939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13922,
											"end": 13931,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 13918,
											"end": 13940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 13887,
											"end": 13950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13950,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 13887,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13877,
											"end": 13950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13877,
											"end": 13950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13831,
											"end": 13960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14167,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 13973,
											"end": 14167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14013,
											"end": 14017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14033,
											"end": 14053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 14051,
											"end": 14052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14033,
											"end": 14053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 14033,
											"end": 14053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14033,
											"end": 14053,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 14033,
											"end": 14053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14028,
											"end": 14053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14028,
											"end": 14053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 14085,
											"end": 14086,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 14067,
											"end": 14087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14087,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 14067,
											"end": 14087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14087,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14111,
											"end": 14112,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14104,
											"end": 14113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14135,
											"end": 14136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14126,
											"end": 14137,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14160,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 14123,
											"end": 14160,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14140,
											"end": 14158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 14140,
											"end": 14158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 14140,
											"end": 14158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14140,
											"end": 14158,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 14140,
											"end": 14158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14160,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 14123,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14167,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14167,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14352,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 14173,
											"end": 14352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14313,
											"end": 14344,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 14309,
											"end": 14310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14297,
											"end": 14311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14345,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14358,
											"end": 14724,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 14358,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14500,
											"end": 14503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14521,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 14585,
											"end": 14587,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 14580,
											"end": 14583,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14521,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 14521,
											"end": 14588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14521,
											"end": 14588,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 14521,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14514,
											"end": 14588,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14514,
											"end": 14588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 14686,
											"end": 14689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 14597,
											"end": 14690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14690,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 14597,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14710,
											"end": 14713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14699,
											"end": 14718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14699,
											"end": 14718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14358,
											"end": 14724,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14358,
											"end": 14724,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14358,
											"end": 14724,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14358,
											"end": 14724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 15149,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14730,
											"end": 15149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14896,
											"end": 14900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14934,
											"end": 14936,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14923,
											"end": 14932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14919,
											"end": 14937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14911,
											"end": 14937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14911,
											"end": 14937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14983,
											"end": 14992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14977,
											"end": 14981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14973,
											"end": 14993,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14969,
											"end": 14970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14958,
											"end": 14967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 14971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14947,
											"end": 14994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15011,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 15137,
											"end": 15141,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15011,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 15011,
											"end": 15142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15011,
											"end": 15142,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 15011,
											"end": 15142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15003,
											"end": 15142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15003,
											"end": 15142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 15149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 15149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 15149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 15149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15325,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 15155,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15295,
											"end": 15317,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 15291,
											"end": 15292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15283,
											"end": 15289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15279,
											"end": 15293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15272,
											"end": 15318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15473,
											"end": 15476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 15558,
											"end": 15560,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 15553,
											"end": 15556,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 15494,
											"end": 15561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15487,
											"end": 15561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15487,
											"end": 15561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 15659,
											"end": 15662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 15570,
											"end": 15663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 15690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15679,
											"end": 15691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15672,
											"end": 15691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15672,
											"end": 15691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 15873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15907,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15896,
											"end": 15905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15892,
											"end": 15910,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15884,
											"end": 15910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15884,
											"end": 15910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15956,
											"end": 15965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15950,
											"end": 15954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15946,
											"end": 15966,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15942,
											"end": 15943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15940,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15927,
											"end": 15944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 15967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 16110,
											"end": 16114,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 15984,
											"end": 16115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 16115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 16115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16128,
											"end": 16319,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 16128,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16168,
											"end": 16171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16187,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 16205,
											"end": 16206,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16187,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 16187,
											"end": 16207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16187,
											"end": 16207,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 16187,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16221,
											"end": 16241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 16239,
											"end": 16240,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16221,
											"end": 16241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 16221,
											"end": 16241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16221,
											"end": 16241,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 16221,
											"end": 16241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16241,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16264,
											"end": 16265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16261,
											"end": 16262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16257,
											"end": 16266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16250,
											"end": 16266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16250,
											"end": 16266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16285,
											"end": 16288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16282,
											"end": 16283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16279,
											"end": 16289,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16276,
											"end": 16312,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16276,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 16276,
											"end": 16312,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 16292,
											"end": 16310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 16292,
											"end": 16310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16310,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 16292,
											"end": 16310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16276,
											"end": 16312,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 16276,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16128,
											"end": 16319,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16128,
											"end": 16319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16128,
											"end": 16319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16128,
											"end": 16319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16128,
											"end": 16319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16556,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 16325,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16465,
											"end": 16499,
											"name": "PUSH",
											"source": 9,
											"value": "506C65617365207761697420323420686F757273206265747765656E20666175"
										},
										{
											"begin": 16461,
											"end": 16462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16453,
											"end": 16459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16449,
											"end": 16463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16442,
											"end": 16500,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16534,
											"end": 16548,
											"name": "PUSH",
											"source": 9,
											"value": "6365742072657175657374730000000000000000000000000000000000000000"
										},
										{
											"begin": 16529,
											"end": 16531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16521,
											"end": 16527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16517,
											"end": 16532,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16510,
											"end": 16549,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16704,
											"end": 16707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 16789,
											"end": 16791,
											"name": "PUSH",
											"source": 9,
											"value": "2C"
										},
										{
											"begin": 16784,
											"end": 16787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 16725,
											"end": 16792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16718,
											"end": 16792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16718,
											"end": 16792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 16890,
											"end": 16893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 16801,
											"end": 16894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16919,
											"end": 16921,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16914,
											"end": 16917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16910,
											"end": 16922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17100,
											"end": 17104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17127,
											"end": 17136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17123,
											"end": 17141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17115,
											"end": 17141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17115,
											"end": 17141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17187,
											"end": 17196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17181,
											"end": 17185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17197,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17173,
											"end": 17174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17162,
											"end": 17171,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17158,
											"end": 17175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17151,
											"end": 17198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 17341,
											"end": 17345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 17215,
											"end": 17346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16934,
											"end": 17353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17359,
											"end": 17524,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 17359,
											"end": 17524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17499,
											"end": 17516,
											"name": "PUSH",
											"source": 9,
											"value": "46617563657420697320656D7074790000000000000000000000000000000000"
										},
										{
											"begin": 17495,
											"end": 17496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17487,
											"end": 17493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17483,
											"end": 17497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17476,
											"end": 17517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17359,
											"end": 17524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17359,
											"end": 17524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17530,
											"end": 17896,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 17530,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17672,
											"end": 17675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17693,
											"end": 17760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 17757,
											"end": 17759,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 17752,
											"end": 17755,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17693,
											"end": 17760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 17693,
											"end": 17760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17693,
											"end": 17760,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 17693,
											"end": 17760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17686,
											"end": 17760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17686,
											"end": 17760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17769,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 17858,
											"end": 17861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17769,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 17769,
											"end": 17862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17769,
											"end": 17862,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 17769,
											"end": 17862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17887,
											"end": 17889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17882,
											"end": 17885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17878,
											"end": 17890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17871,
											"end": 17890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17871,
											"end": 17890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17530,
											"end": 17896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17530,
											"end": 17896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17530,
											"end": 17896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17530,
											"end": 17896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18321,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 17902,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18068,
											"end": 18072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18106,
											"end": 18108,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18095,
											"end": 18104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18083,
											"end": 18109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18083,
											"end": 18109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18155,
											"end": 18164,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18149,
											"end": 18153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18145,
											"end": 18165,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18141,
											"end": 18142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18130,
											"end": 18139,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18126,
											"end": 18143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18119,
											"end": 18166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18183,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 18309,
											"end": 18313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18183,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 18183,
											"end": 18314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18183,
											"end": 18314,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 18183,
											"end": 18314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18175,
											"end": 18314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18175,
											"end": 18314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18321,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18327,
											"end": 18659,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 18327,
											"end": 18659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18448,
											"end": 18452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18486,
											"end": 18488,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18475,
											"end": 18484,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18471,
											"end": 18489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18489,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 18567,
											"end": 18568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18556,
											"end": 18565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18552,
											"end": 18569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18543,
											"end": 18549,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 18499,
											"end": 18570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18570,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 18499,
											"end": 18570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18580,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 18648,
											"end": 18650,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18637,
											"end": 18646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18633,
											"end": 18651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18624,
											"end": 18630,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18580,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 18580,
											"end": 18652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18580,
											"end": 18652,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 18580,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18327,
											"end": 18659,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18327,
											"end": 18659,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18327,
											"end": 18659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18327,
											"end": 18659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18327,
											"end": 18659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18327,
											"end": 18659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18842,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 18665,
											"end": 18842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18805,
											"end": 18834,
											"name": "PUSH",
											"source": 9,
											"value": "4D7573742073656E642045544820746F2062757920746F6B656E730000000000"
										},
										{
											"begin": 18801,
											"end": 18802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18793,
											"end": 18799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18789,
											"end": 18803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18782,
											"end": 18835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 19214,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 18848,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18990,
											"end": 18993,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19011,
											"end": 19078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 19075,
											"end": 19077,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 19070,
											"end": 19073,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19011,
											"end": 19078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 19011,
											"end": 19078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19011,
											"end": 19078,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 19011,
											"end": 19078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19004,
											"end": 19078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19004,
											"end": 19078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19087,
											"end": 19180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 19176,
											"end": 19179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19087,
											"end": 19180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 19087,
											"end": 19180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19087,
											"end": 19180,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 19087,
											"end": 19180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19205,
											"end": 19207,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19200,
											"end": 19203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19196,
											"end": 19208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19189,
											"end": 19208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19189,
											"end": 19208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 19214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 19214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 19214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 19214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19639,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 19220,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19386,
											"end": 19390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19424,
											"end": 19426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19413,
											"end": 19422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19409,
											"end": 19427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19401,
											"end": 19427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19401,
											"end": 19427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19473,
											"end": 19482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19467,
											"end": 19471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19463,
											"end": 19483,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19459,
											"end": 19460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19448,
											"end": 19457,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19444,
											"end": 19461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19437,
											"end": 19484,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19501,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 19627,
											"end": 19631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19501,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 19501,
											"end": 19632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19501,
											"end": 19632,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 19501,
											"end": 19632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19493,
											"end": 19632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19493,
											"end": 19632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19220,
											"end": 19639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19645,
											"end": 19815,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 19645,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19785,
											"end": 19807,
											"name": "PUSH",
											"source": 9,
											"value": "45544820616D6F756E7420746F6F20736D616C6C000000000000000000000000"
										},
										{
											"begin": 19781,
											"end": 19782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19773,
											"end": 19779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19769,
											"end": 19783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19762,
											"end": 19808,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19645,
											"end": 19815,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19645,
											"end": 19815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19821,
											"end": 20187,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 19821,
											"end": 20187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19963,
											"end": 19966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19984,
											"end": 20051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 20048,
											"end": 20050,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 20043,
											"end": 20046,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19984,
											"end": 20051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 19984,
											"end": 20051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19984,
											"end": 20051,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 19984,
											"end": 20051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19977,
											"end": 20051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19977,
											"end": 20051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20060,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 20149,
											"end": 20152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20060,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 20060,
											"end": 20153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20060,
											"end": 20153,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 20060,
											"end": 20153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20178,
											"end": 20180,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20173,
											"end": 20176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20169,
											"end": 20181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20162,
											"end": 20181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20162,
											"end": 20181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19821,
											"end": 20187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19821,
											"end": 20187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19821,
											"end": 20187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19821,
											"end": 20187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20612,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 20193,
											"end": 20612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20359,
											"end": 20363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20397,
											"end": 20399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20386,
											"end": 20395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20382,
											"end": 20400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20446,
											"end": 20455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 20444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20436,
											"end": 20456,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20432,
											"end": 20433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20421,
											"end": 20430,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20417,
											"end": 20434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20410,
											"end": 20457,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20474,
											"end": 20605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 20600,
											"end": 20604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20474,
											"end": 20605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 20474,
											"end": 20605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20474,
											"end": 20605,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 20474,
											"end": 20605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20466,
											"end": 20605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20466,
											"end": 20605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20618,
											"end": 20786,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 20618,
											"end": 20786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20758,
											"end": 20778,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F2045544820746F2077697468647261770000000000000000000000000000"
										},
										{
											"begin": 20754,
											"end": 20755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20746,
											"end": 20752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20742,
											"end": 20756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20735,
											"end": 20779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20618,
											"end": 20786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20618,
											"end": 20786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20792,
											"end": 21158,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 20792,
											"end": 21158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20934,
											"end": 20937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20955,
											"end": 21022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 21019,
											"end": 21021,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 21014,
											"end": 21017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20955,
											"end": 21022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 20955,
											"end": 21022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20955,
											"end": 21022,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 20955,
											"end": 21022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20948,
											"end": 21022,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20948,
											"end": 21022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21031,
											"end": 21124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 21120,
											"end": 21123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21031,
											"end": 21124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 21031,
											"end": 21124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21031,
											"end": 21124,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 21031,
											"end": 21124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21149,
											"end": 21151,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21144,
											"end": 21147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21133,
											"end": 21152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21133,
											"end": 21152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20792,
											"end": 21158,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20792,
											"end": 21158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20792,
											"end": 21158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20792,
											"end": 21158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21164,
											"end": 21583,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 21164,
											"end": 21583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21330,
											"end": 21334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21368,
											"end": 21370,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21357,
											"end": 21366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21353,
											"end": 21371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21345,
											"end": 21371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21345,
											"end": 21371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21417,
											"end": 21426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21411,
											"end": 21415,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21403,
											"end": 21404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21392,
											"end": 21401,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21388,
											"end": 21405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21381,
											"end": 21428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21445,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 21571,
											"end": 21575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21445,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 21445,
											"end": 21576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21445,
											"end": 21576,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 21445,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21437,
											"end": 21576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21437,
											"end": 21576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21164,
											"end": 21583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21164,
											"end": 21583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21164,
											"end": 21583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21164,
											"end": 21583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/flibber/flibberToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"FAUCET_AMOUNT()": "76697640",
							"FAUCET_COOLDOWN()": "7d1d5d19",
							"TOKEN_PRICE_USD()": "f7a182f5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"buyTokens()": "d0febe4c",
							"decimals()": "313ce567",
							"fundFaucet(uint256)": "ae0140b4",
							"getLatestPrice()": "8e15f473",
							"getTokenAmount(uint256)": "c2507ac1",
							"lastFaucetRequest(address)": "d5ace7ba",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"requestFaucet()": "b8664f59",
							"sellTokens(uint256)": "6c11bcd3",
							"setPriceFeed(address)": "724e78da",
							"symbol()": "95d89b41",
							"timeUntilNextFaucet(address)": "acde1241",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawETH()": "e086e5ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FaucetDispensed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"TokensSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FAUCET_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FAUCET_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_PRICE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundFaucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastFaucetRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestFaucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"timeUntilNextFaucet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/flibber/flibberToken.sol\":\"FIBToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/flibber/flibberToken.sol\":{\"keccak256\":\"0x71f7e3bb5fb8776c020847ddcf7e72f7872ec7d89b4e3b2c7f41d71a502c8c3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22f225496f2bf71a1eaf2f771154248429f219cf69431be59c716dc36974f5aa\",\"dweb:/ipfs/QmP8eBZZpdEUHowkMsNmSYXNhVvzbNCuzfLnwuXZXCDiW4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 353,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 359,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 361,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 363,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 365,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 54,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1049,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "priceFeed",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1053,
								"contract": "contracts/flibber/flibberToken.sol:FIBToken",
								"label": "lastFaucetRequest",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "189:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:0"
									},
									"scope": 45,
									"src": "146:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:0"
									},
									"scope": 45,
									"src": "200:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "307:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:0"
									},
									"scope": 45,
									"src": "265:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:0"
									},
									"scope": 45,
									"src": "320:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "599:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "618:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:0"
									},
									"scope": 45,
									"src": "487:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "110:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 1026,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								1025
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							330
						],
						"IERC20Errors": [
							235
						],
						"IERC721Errors": [
							283
						]
					},
					"id": 331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 205,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 210,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 215,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 224,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 229,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 234,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 331,
							"src": "280:1764:2",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 283,
							"linearizedBaseContracts": [
								283
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 241,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 246,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 255,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 260,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 265,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 272,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 277,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 282,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 331,
							"src": "2190:2092:2",
							"usedErrors": [
								241,
								246,
								255,
								260,
								265,
								272,
								277,
								282
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 284,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 295,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 300,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 305,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 312,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 317,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 322,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 329,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 331,
							"src": "4430:2107:2",
							"usedErrors": [
								295,
								300,
								305,
								312,
								317,
								322,
								329
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"ERC20": [
							845
						],
						"IERC20": [
							923
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							995
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 924,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 333,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 923,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 996,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 335,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 995,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 1026,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 337,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 331,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 339,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 235,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 342,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "1133:7:3"
									},
									"id": 343,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 344,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "1142:6:3"
									},
									"id": 345,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 346,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 995,
										"src": "1150:14:3"
									},
									"id": 347,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 348,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 235,
										"src": "1166:12:3"
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 341,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 845,
							"linearizedBaseContracts": [
								845,
								235,
								995,
								923,
								1025
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 352,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 350,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 351,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 358,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 354,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 355,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 356,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 361,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 362,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 364,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 382,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 845,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										982
									],
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 388,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 387,
												"id": 389,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 845,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										988
									],
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 397,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 365,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 396,
												"id": 398,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 845,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										994
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 405,
												"id": 407,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 403,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 845,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										872
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 415,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 361,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 414,
												"id": 416,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 845,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										880
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 426,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 428,
													"indexExpression": {
														"id": 427,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 425,
												"id": 429,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 845,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 441,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 443,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 440,
												"id": 453,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 845,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										900
									],
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 465,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 467,
														"indexExpression": {
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 469,
													"indexExpression": {
														"id": 468,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 470,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 845,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										910
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 482,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 484,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															736,
															796
														],
														"referencedDeclaration": 736,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 481,
												"id": 494,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 845,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										922
									],
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 527,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 508,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 510,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 519,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 507,
												"id": 526,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 845,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 538,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 539,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 552,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 551,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 545,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 544,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 550,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 553,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 554,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 560,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 559,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 565,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 845,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 586,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																597
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 597,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 622,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 596,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 601,
															"initialValue": {
																"baseExpression": {
																	"id": 598,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"id": 599,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 602,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 612,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 611,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 606,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 607,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 608,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 605,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 610,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 621,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 613,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 353,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 615,
																			"indexExpression": {
																				"id": 614,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 616,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 617,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 620,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 591,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 592,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 642,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 636,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 353,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 638,
																			"indexExpression": {
																				"id": 637,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 641,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 644,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 635,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 634,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 630,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 631,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 633,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 646,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 645,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 845,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 660,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 661,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 667,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 666,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 672,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 676,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 845,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 694,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 706,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 699,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 705,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 710,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 708,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 845,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 728,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															736,
															796
														],
														"referencedDeclaration": 796,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 845,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 748,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 749,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 755,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 754,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 760,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 763,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 764,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 770,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 769,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 775,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 778,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 781,
															"indexExpression": {
																"id": 779,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 782,
														"indexExpression": {
															"id": 780,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 783,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 786,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 788,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 789,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 790,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 787,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 845,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 806,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"id": 809,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 808,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 814,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 820,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 821,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 830,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 829,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 824,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 825,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 826,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 823,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 828,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 840,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 832,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 833,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 834,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 835,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 831,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				736,
																				796
																			],
																			"referencedDeclaration": 796,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 839,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 845,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 846,
							"src": "1106:9787:3",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 848,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 923,
							"linearizedBaseContracts": [
								923
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 857,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 866,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 923,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 923,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 923,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 923,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 923,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 919,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 923,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 924,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"ERC20": [
							845
						],
						"ERC20Burnable": [
							969
						]
					},
					"id": 970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 970,
							"sourceUnit": 846,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 845,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 970,
							"sourceUnit": 1026,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 928,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 931,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "483:7:5"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 933,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "492:5:5"
									},
									"id": 934,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 930,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 969,
							"linearizedBaseContracts": [
								969,
								845,
								235,
								995,
								923,
								1025
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 941,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 969,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 957,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 955,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 963,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 962,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 969,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 970,
							"src": "448:733:5",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							923
						],
						"IERC20Metadata": [
							995
						]
					},
					"id": 996,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 996,
							"sourceUnit": 924,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 972,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 923,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 975,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "306:6:6"
									},
									"id": 976,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 974,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 995,
							"linearizedBaseContracts": [
								995,
								923
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 995,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 985,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 995,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 991,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 995,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 996,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 997,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 998,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1003,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1005,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1025,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1012,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1014,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1025,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1020,
												"id": 1022,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1025,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1026,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"contracts/flibber/flibberToken.sol": {
				"ast": {
					"absolutePath": "contracts/flibber/flibberToken.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							1025
						],
						"ERC20": [
							845
						],
						"ERC20Burnable": [
							969
						],
						"FIBToken": [
							1464
						],
						"IERC20": [
							923
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							995
						],
						"Ownable": [
							193
						]
					},
					"id": 1465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1028,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 846,
							"src": "58:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 194,
							"src": "114:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1030,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 970,
							"src": "167:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 1031,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 46,
							"src": "242:83:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1032,
										"name": "ERC20",
										"nameLocations": [
											"348:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "348:5:8"
									},
									"id": 1033,
									"nodeType": "InheritanceSpecifier",
									"src": "348:5:8"
								},
								{
									"baseName": {
										"id": 1034,
										"name": "ERC20Burnable",
										"nameLocations": [
											"355:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "355:13:8"
									},
									"id": 1035,
									"nodeType": "InheritanceSpecifier",
									"src": "355:13:8"
								},
								{
									"baseName": {
										"id": 1036,
										"name": "Ownable",
										"nameLocations": [
											"370:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "370:7:8"
									},
									"id": 1037,
									"nodeType": "InheritanceSpecifier",
									"src": "370:7:8"
								}
							],
							"canonicalName": "FIBToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1464,
							"linearizedBaseContracts": [
								1464,
								193,
								969,
								845,
								235,
								995,
								923,
								1025
							],
							"name": "FIBToken",
							"nameLocation": "336:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "f7a182f5",
									"id": 1040,
									"mutability": "constant",
									"name": "TOKEN_PRICE_USD",
									"nameLocation": "408:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "384:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1038,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "384:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 1039,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "426:3:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "76697640",
									"id": 1043,
									"mutability": "constant",
									"name": "FAUCET_AMOUNT",
									"nameLocation": "477:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "453:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "453:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "39303030303030303030303030303030",
										"id": 1042,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "493:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9000000000000000_by_1",
											"typeString": "int_const 9000000000000000"
										},
										"value": "9000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7d1d5d19",
									"id": 1046,
									"mutability": "constant",
									"name": "FAUCET_COOLDOWN",
									"nameLocation": "581:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "557:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1044,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3234",
										"id": 1045,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "599:8:8",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "24"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1049,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "649:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "618:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1048,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1047,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"618:21:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "618:21:8"
										},
										"referencedDeclaration": 45,
										"src": "618:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d5ace7ba",
									"id": 1053,
									"mutability": "mutable",
									"name": "lastFaucetRequest",
									"nameLocation": "770:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "735:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1052,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1050,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "743:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "735:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1051,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "754:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 1061,
									"name": "TokensPurchased",
									"nameLocation": "818:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "842:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "834:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "857:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "849:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"indexed": false,
												"mutability": "mutable",
												"name": "cost",
												"nameLocation": "873:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "865:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:45:8"
									},
									"src": "812:67:8"
								},
								{
									"anonymous": false,
									"eventSelector": "2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d",
									"id": 1069,
									"name": "TokensSold",
									"nameLocation": "890:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "909:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "901:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "925:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "917:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "941:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "933:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:49:8"
									},
									"src": "884:66:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4ccc2cb57d301275bff907df4fcc7431ca6cef9083f95cdc1098086c2360e29a",
									"id": 1075,
									"name": "FaucetDispensed",
									"nameLocation": "961:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "985:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "977:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1004:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "996:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:35:8"
									},
									"src": "955:57:8"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "1148:124:8",
										"statements": [
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1089,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "1158:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1091,
																"name": "_priceFeedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "1192:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1090,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1170:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1170:40:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1158:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "1158:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1096,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1226:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1230:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1226:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1238:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1248:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1100,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1254:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1254:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1248:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1238:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1095,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "1220:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1220:45:8"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "464c4942424552",
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1107:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d7dd78dda95ff3cd5a465ede6053ec32f02e282a22c505d8da9275b529cb79e7",
														"typeString": "literal_string \"FLIBBER\""
													},
													"value": "FLIBBER"
												},
												{
													"hexValue": "24464942",
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1118:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb22ad6c0e01dc9ce54d681e6a84031c666ef9f08a925074ac431cc4c9b03bc7",
														"typeString": "literal_string \"$FIB\""
													},
													"value": "$FIB"
												}
											],
											"id": 1084,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1081,
												"name": "ERC20",
												"nameLocations": [
													"1101:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 845,
												"src": "1101:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1101:24:8"
										},
										{
											"arguments": [
												{
													"id": 1086,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1077,
													"src": "1134:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1087,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1085,
												"name": "Ownable",
												"nameLocations": [
													"1126:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "1126:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1126:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1047:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1039:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "_priceFeedAddress",
												"nameLocation": "1077:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1069:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:71:8"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:0:8"
									},
									"scope": 1464,
									"src": "1018:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "1352:481:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1111,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1383:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1389:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1383:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1113,
																		"name": "lastFaucetRequest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "1402:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1116,
																	"indexExpression": {
																		"expression": {
																			"id": 1114,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1420:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1424:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1420:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1402:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1117,
																	"name": "FAUCET_COOLDOWN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "1434:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1402:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1383:66:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365207761697420323420686f757273206265747765656e20666175636574207265717565737473",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1463:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e",
																"typeString": "literal_string \"Please wait 24 hours between faucet requests\""
															},
															"value": "Please wait 24 hours between faucet requests"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26890f56c1116f79368728fef39a1bd269932f0a86efb9b08b00e62bce3a9c8e",
																"typeString": "literal_string \"Please wait 24 hours between faucet requests\""
															}
														],
														"id": 1110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1362:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:157:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "1362:157:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1127,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1577:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FIBToken_$1464",
																					"typeString": "contract FIBToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FIBToken_$1464",
																					"typeString": "contract FIBToken"
																				}
																			],
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1569:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1125,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1569:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1569:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1124,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "1559:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1559:24:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1130,
																"name": "FAUCET_AMOUNT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "1587:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1559:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46617563657420697320656d707479",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1614:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21",
																"typeString": "literal_string \"Faucet is empty\""
															},
															"value": "Faucet is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69d08b978e0aea4b30dc3e23a32914946f541c3fa9cda6fb3e36f640811dc21",
																"typeString": "literal_string \"Faucet is empty\""
															}
														],
														"id": 1123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1538:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1538:103:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1538:103:8"
											},
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1135,
															"name": "lastFaucetRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "1652:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1138,
														"indexExpression": {
															"expression": {
																"id": 1136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1670:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1674:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1670:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1652:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1139,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1684:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1690:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1684:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1652:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "1652:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1146,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1727:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FIBToken_$1464",
																		"typeString": "contract FIBToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FIBToken_$1464",
																		"typeString": "contract FIBToken"
																	}
																],
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1719:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1144,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1719:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1719:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1148,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1734:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1738:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1734:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "FAUCET_AMOUNT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "1746:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1143,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "1709:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1709:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "1709:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1800:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1804:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1800:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "FAUCET_AMOUNT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "1812:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1153,
														"name": "FaucetDispensed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "1784:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1784:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "EmitStatement",
												"src": "1779:47:8"
											}
										]
									},
									"functionSelector": "b8664f59",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestFaucet",
									"nameLocation": "1329:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:2:8"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1352:0:8"
									},
									"scope": 1464,
									"src": "1320:513:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "1966:201:8",
										"statements": [
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "timePassed",
														"nameLocation": "1984:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "1976:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1976:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1175,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1169,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1997:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2003:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1997:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1171,
															"name": "lastFaucetRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "2015:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1173,
														"indexExpression": {
															"id": 1172,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2033:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2015:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1997:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1976:62:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1176,
														"name": "timePassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "2052:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1177,
														"name": "FAUCET_COOLDOWN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2066:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2052:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "2048:68:8",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "2083:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2104:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1166,
															"id": 1180,
															"nodeType": "Return",
															"src": "2097:8:8"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1183,
														"name": "FAUCET_COOLDOWN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2132:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1184,
														"name": "timePassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "2150:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2132:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1186,
												"nodeType": "Return",
												"src": "2125:35:8"
											}
										]
									},
									"functionSelector": "acde1241",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeUntilNextFaucet",
									"nameLocation": "1902:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1930:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1922:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:14:8"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1957:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:9:8"
									},
									"scope": 1464,
									"src": "1893:274:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "2280:130:8",
										"statements": [
											{
												"assignments": [
													null,
													1194,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2300:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1206,
														"src": "2293:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1193,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2293:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1198,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1195,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "2312:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2322:15:8",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2312:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:49:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1201,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "2364:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2356:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1199,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2356:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2356:14:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653130",
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2373:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														},
														"value": "1e10"
													},
													"src": "2356:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1205,
												"nodeType": "Return",
												"src": "2349:28:8"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "2233:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2247:2:8"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "2271:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:8"
									},
									"scope": 1464,
									"src": "2224:186:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "2558:187:8",
										"statements": [
											{
												"assignments": [
													1215
												],
												"declarations": [
													{
														"constant": false,
														"id": 1215,
														"mutability": "mutable",
														"name": "ethUsdPrice",
														"nameLocation": "2576:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "2568:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2568:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1216,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2590:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2568:38:8"
											},
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "ethValueInUsd",
														"nameLocation": "2624:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "2616:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2616:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1221,
																	"name": "ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "2641:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1222,
																	"name": "ethUsdPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "2653:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2641:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1224,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2640:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2640:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2616:56:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1228,
																	"name": "ethValueInUsd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "2690:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2706:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2690:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2689:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1232,
																	"name": "TOKEN_PRICE_USD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "2715:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2733:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2715:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1235,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2714:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2689:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1237,
												"nodeType": "Return",
												"src": "2682:56:8"
											}
										]
									},
									"functionSelector": "c2507ac1",
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmount",
									"nameLocation": "2494:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "2517:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2509:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:19:8"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2549:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:9:8"
									},
									"scope": 1464,
									"src": "2485:260:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "2814:318:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1243,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2832:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2836:5:8",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2832:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2844:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2832:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e73",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de",
																"typeString": "literal_string \"Must send ETH to buy tokens\""
															},
															"value": "Must send ETH to buy tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de",
																"typeString": "literal_string \"Must send ETH to buy tokens\""
															}
														],
														"id": 1242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2824:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2824:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "2824:53:8"
											},
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "2904:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "2896:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2896:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1253,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2933:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2937:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2933:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "2918:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2918:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2896:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "2961:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2975:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2961:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e7420746f6f20736d616c6c",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2978:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3",
																"typeString": "literal_string \"ETH amount too small\""
															},
															"value": "ETH amount too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a786ecc224dfe3f62744d96b8af07f1a1c782022060f840b2c0ebf4f689713a3",
																"typeString": "literal_string \"ETH amount too small\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2953:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2953:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "2953:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3026:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3030:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3026:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "3038:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1264,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "3020:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "3020:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3090:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3094:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3090:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "3102:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3115:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3119:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3115:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1270,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3074:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "EmitStatement",
												"src": "3069:56:8"
											}
										]
									},
									"functionSelector": "d0febe4c",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "2787:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2796:2:8"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2814:0:8"
									},
									"scope": 1464,
									"src": "2778:354:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "3218:565:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1285,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "3236:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3250:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3236:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656c6c206d6f7265207468616e203020746f6b656e73",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3253:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9",
																"typeString": "literal_string \"Must sell more than 0 tokens\""
															},
															"value": "Must sell more than 0 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3097bc72219334520c1a769edd9dbd1b5251724a44f7080d592028f0746663d9",
																"typeString": "literal_string \"Must sell more than 0 tokens\""
															}
														],
														"id": 1284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3228:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3228:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "3228:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1293,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3312:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3316:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3312:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1292,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3302:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3302:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1296,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "3327:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3302:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3340:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															},
															"value": "Insufficient token balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3294:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "3294:75:8"
											},
											{
												"assignments": [
													1302
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "ethUsdPrice",
														"nameLocation": "3388:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "3380:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1301,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3380:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1303,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "3402:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3402:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3380:38:8"
											},
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "usdValue",
														"nameLocation": "3436:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "3428:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3428:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1308,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "3447:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1309,
														"name": "TOKEN_PRICE_USD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "3461:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3447:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3428:48:8"
											},
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "3494:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "3486:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3486:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1314,
																	"name": "usdValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "3507:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3518:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "3507:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1317,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3506:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1318,
														"name": "ethUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "3526:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3506:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3486:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1324,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3564:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_FIBToken_$1464",
																				"typeString": "contract FIBToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_FIBToken_$1464",
																				"typeString": "contract FIBToken"
																			}
																		],
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3556:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1322,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3556:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3556:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3570:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3556:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1327,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "3581:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3556:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3592:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															},
															"value": "Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															}
														],
														"id": 1321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3548:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3548:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "3548:76:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1333,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3641:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3645:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3641:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "3653:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1332,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3635:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3635:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "3635:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "3704:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1340,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3683:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3687:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3683:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3675:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1338,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3675:8:8",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3675:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3695:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3675:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3675:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "3675:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1348,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3741:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3745:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3741:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "3753:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1351,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "3766:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1347,
														"name": "TokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "3730:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "EmitStatement",
												"src": "3725:51:8"
											}
										]
									},
									"functionSelector": "6c11bcd3",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellTokens",
									"nameLocation": "3179:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "3198:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3190:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3189:21:8"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3218:0:8"
									},
									"scope": 1464,
									"src": "3170:613:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "3865:197:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1363,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "3883:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3892:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3883:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3895:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3875:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3875:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "3875:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1371,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3955:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3959:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3955:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1370,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3945:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3945:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1374,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "3970:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3945:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3978:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3937:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3937:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "3937:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1380,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4021:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4025:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4021:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1384,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4041:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FIBToken_$1464",
																		"typeString": "contract FIBToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FIBToken_$1464",
																		"typeString": "contract FIBToken"
																	}
																],
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4033:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1382,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4033:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4033:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "4048:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1379,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4011:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4011:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "4011:44:8"
											}
										]
									},
									"functionSelector": "ae0140b4",
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1359,
												"name": "onlyOwner",
												"nameLocations": [
													"3855:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "3855:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3855:9:8"
										}
									],
									"name": "fundFaucet",
									"nameLocation": "3821:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3840:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "3832:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:16:8"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3865:0:8"
									},
									"scope": 1464,
									"src": "3812:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "4136:2:8",
										"statements": []
									},
									"id": 1394,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:2:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4136:0:8"
									},
									"scope": 1464,
									"src": "4109:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "4207:152:8",
										"statements": [
											{
												"assignments": [
													1400
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4225:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1423,
														"src": "4217:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4217:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1406,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1403,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4243:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_FIBToken_$1464",
																	"typeString": "contract FIBToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_FIBToken_$1464",
																	"typeString": "contract FIBToken"
																}
															],
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4235:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1401,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4235:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4235:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4249:7:8",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4235:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4217:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "4274:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4284:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4274:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2045544820746f207769746864726177",
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4287:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															},
															"value": "No ETH to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															}
														],
														"id": 1407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4266:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "4266:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1420,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "4344:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1416,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "4326:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4326:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4318:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4318:8:8",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4318:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4335:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4318:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4318:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "4318:34:8"
											}
										]
									},
									"functionSelector": "e086e5ec",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1397,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1396,
												"name": "onlyOwner",
												"nameLocations": [
													"4197:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "4197:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4197:9:8"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "4176:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4187:2:8"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4207:0:8"
									},
									"scope": 1464,
									"src": "4167:192:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "4424:34:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "4440:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "4444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1433,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "4434:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4434:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "4434:17:8"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1430,
												"name": "onlyOwner",
												"nameLocations": [
													"4414:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "4414:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4414:9:8"
										}
									],
									"name": "mint",
									"nameLocation": "4374:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4387:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "4379:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4379:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4399:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "4391:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:28:8"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4424:0:8"
									},
									"scope": 1464,
									"src": "4365:93:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "4525:139:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1447,
																"name": "newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "4543:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4567:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4559:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1448,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4559:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4559:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4543:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420707269636520666565642061646472657373",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4571:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															},
															"value": "Invalid price feed address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4535:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4535:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "4535:65:8"
											},
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1456,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "4610:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1458,
																"name": "newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "4644:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1457,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4622:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4622:35:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "4610:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "4610:47:8"
											}
										]
									},
									"functionSelector": "724e78da",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1443,
												"name": "onlyOwner",
												"nameLocations": [
													"4515:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "4515:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4515:9:8"
										}
									],
									"name": "setPriceFeed",
									"nameLocation": "4473:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "newPriceFeed",
												"nameLocation": "4494:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "4486:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:22:8"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4525:0:8"
									},
									"scope": 1464,
									"src": "4464:200:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1465,
							"src": "327:4339:8",
							"usedErrors": [
								59,
								64,
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								70,
								857,
								866,
								1061,
								1069,
								1075
							]
						}
					],
					"src": "32:4635:8"
				},
				"id": 8
			}
		}
	}
}