{
	"id": "08fe110bb0853a6c161f497eff4fa0cc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/flipit.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.17;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\n\ncontract flipit is ERC20 {\n    address _owner_;\n    //uint256 private constant dec = 1e18;\n    uint256 private constant DECIMALS = 10**18;\n    address contractAddress;\n    error NoToken(string);\n    error TokenClaimed(string);\n    error AddressNotFound(string);\n    address[] private _senderEth;\n    constructor(string memory _name, string memory _symbol)\n        ERC20(_name, _symbol)\n    {\n        //_mint(msg.sender, 1000000 * dec);\n        _mint(address(this), 10_000_000_000_000 * DECIMALS);\n        _owner_ = msg.sender;\n        contractAddress = address(this);\n\n    }\n    function pumptit(uint256 _pumpMint) public {\n        require(_owner_ == msg.sender, \"Not owner!\");\n        _mint(msg.sender, _pumpMint * DECIMALS);\n    }\n    function decimalsz() public pure returns(uint){\n        return DECIMALS;\n    }\n    function Claim(address _addrs, uint _amount) external {\n        if (_addrs == address(0)) {\n            revert AddressNotFound(\"Address zero not allowed!\");\n        }\n        if (balanceOf(_addrs) > 0) {\n            revert TokenClaimed(\"Address Claimed!\");\n        }\n        _transfer(contractAddress, _addrs, _amount * DECIMALS);\n    }\n\n    function Burn(uint256 _value) external {\n        if (balanceOf(msg.sender) < 0) {\n            revert NoToken(\"Token not Enough!\");\n        }\n        _burn(msg.sender, _value * DECIMALS);\n    }\n\n    function Balance(address _user) external view returns (uint256) {\n        return balanceOf(_user);\n    }\n\n    function flipClick(address _addrs, uint256 _amount) external {\n        if (_addrs == address(0)) {\n            revert AddressNotFound(\"Address zero not allowed!\");\n        }\n        _transfer(_addrs, _owner_, _amount * DECIMALS);\n    }\n\n    function gain(address _addrs, uint256 _tokenStaked) public {\n        _tokenStaked = _tokenStaked * DECIMALS;\n        _transfer(address(this), _addrs, _tokenStaked*2);\n    }\n\n    function payContractGasFee() public payable {\n        _senderEth.push(msg.sender);\n    }\n    function realTime(address _addrs) public view returns(uint256){\n        if(balanceOf(_addrs) < DECIMALS){\n            revert NoToken(\"Token not enough!\");\n        }\n       return balanceOf(_addrs)/DECIMALS;\n    }\n    function SenderEth() public view returns(address[] memory){\n        require(_owner_ == msg.sender, \"Not owner!\");\n        return _senderEth;\n    }\n    function withDraw() public {\n        require(_owner_ == msg.sender, \"Not owner!\");\n        payable (_owner_).transfer(address(this).balance);\n    }\n    function addressBalnc(address _user) public view  returns (uint256){\n        return _user.balance;  \n        //ether \n    }\n}\n/* \n\n   ca 0xC5CaC9d5a86bB578553ee84FaeE022f8d251A9C9\n\n*/ \n //500000000000000000000\n//0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\n//me\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n    \n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/flipit.sol": {
				"flipit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "AddressNotFound",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "NoToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "TokenClaimed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addrs",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SenderEth",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "addressBalnc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimalsz",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addrs",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "flipClick",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addrs",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenStaked",
									"type": "uint256"
								}
							],
							"name": "gain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "payContractGasFee",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pumpMint",
									"type": "uint256"
								}
							],
							"name": "pumptit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addrs",
									"type": "address"
								}
							],
							"name": "realTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/flipit.sol\":169:2796  contract flipit is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/flipit.sol\":469:743  constructor(string memory _name, string memory _symbol)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/flipit.sol\":539:544  _name */\n  dup2\n    /* \"contracts/flipit.sol\":546:553  _symbol */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/flipit.sol\":613:664  _mint(address(this), 10_000_000_000_000 * DECIMALS) */\n  tag_11\n    /* \"contracts/flipit.sol\":627:631  this */\n  address\n    /* \"contracts/flipit.sol\":300:306  10**18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/flipit.sol\":634:652  10_000_000_000_000 */\n  0x09184e72a000\n    /* \"contracts/flipit.sol\":634:663  10_000_000_000_000 * DECIMALS */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"contracts/flipit.sol\":613:618  _mint */\n  shl(0x20, tag_14)\n    /* \"contracts/flipit.sol\":613:664  _mint(address(this), 10_000_000_000_000 * DECIMALS) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/flipit.sol\":684:694  msg.sender */\n  caller\n    /* \"contracts/flipit.sol\":674:681  _owner_ */\n  0x05\n  0x00\n    /* \"contracts/flipit.sol\":674:694  _owner_ = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/flipit.sol\":730:734  this */\n  address\n    /* \"contracts/flipit.sol\":704:719  contractAddress */\n  0x06\n  0x00\n    /* \"contracts/flipit.sol\":704:735  contractAddress = address(this) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/flipit.sol\":469:743  constructor(string memory _name, string memory _symbol)... */\n  pop\n  pop\n    /* \"contracts/flipit.sol\":169:2796  contract flipit is ERC20 {... */\n  jump(tag_15)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7462:7670  function _mint(address account, uint256 value) internal {... */\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7551:7552  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7532:7553  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7532:7539  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7532:7553  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7619  if (account == address(0)) {... */\n  tag_17\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7605:7606  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7576:7608  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7619  if (account == address(0)) {... */\ntag_17:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7628:7663  _update(address(0), account, value) */\n  tag_20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7644:7645  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7648:7655  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7657:7662  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7628:7635  _update */\n  shl(0x20, tag_21)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7628:7663  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7462:7670  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6012:7119  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6117:6118  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6101:6119  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6101:6105  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6101:6119  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6637  if (from == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6253:6258  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6237:6249  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6237:6258  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6637  if (from == address(0)) {... */\n  jump(tag_26)\ntag_23:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6289:6308  uint256 fromBalance */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6311:6320  _balances */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6311:6326  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6325  from */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6311:6326  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6289:6326  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6358:6363  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6344:6355  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6344:6363  fromBalance < value */\n  lt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6455  if (fromBalance < value) {... */\n  iszero\n  tag_27\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6415:6419  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6421:6432  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6434:6439  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6390:6440  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_28\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6455  if (fromBalance < value) {... */\ntag_27:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6607:6612  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6593:6604  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6593:6612  fromBalance - value */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6584  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6590  _balances[from] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6585:6589  from */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6590  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6612  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6275:6637  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6637  if (from == address(0)) {... */\ntag_26:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6665:6666  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6651:6667  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6651:6653  to */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6651:6667  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:7072  if (to == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6830:6835  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6814:6826  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6814:6835  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:7072  if (to == address(0)) {... */\n  jump(tag_31)\ntag_30:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7042:7047  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7034  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7038  _balances[to] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7035:7037  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7038  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7047  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:7072  if (to == address(0)) {... */\ntag_31:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7102:7104  to */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7112  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7096:7100  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7112  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7106:7111  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7112  Transfer(from, to, value) */\n  mload(0x40)\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6012:7119  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_34:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_35:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_36:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_37:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_38:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_39:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_40:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_41:\n    /* \"#utility.yul\":957:984   */\n  tag_80\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_39\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_82\n  tag_40\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1030:1118   */\ntag_81:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_42:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_84\n  tag_34\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_85\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_43:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_88\n  tag_40\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1434:1490   */\ntag_87:\n    /* \"#utility.yul\":1508:1537   */\n  tag_89\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_39\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_44:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_45:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_92\n    /* \"#utility.yul\":1885:1934   */\n  tag_93\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_43\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1869:1935   */\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_95\n  tag_38\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2010:2122   */\ntag_94:\n    /* \"#utility.yul\":2131:2183   */\n  tag_96\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_44\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_46:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_99\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2292:2414   */\ntag_98:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_100\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_45\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  dup1\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_103\n  tag_35\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2694:2813   */\ntag_102:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_105\n  tag_36\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2889:3006   */\ntag_104:\n    /* \"#utility.yul\":3030:3104   */\n  tag_106\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_108\n  tag_36\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3191:3308   */\ntag_107:\n    /* \"#utility.yul\":3332:3406   */\n  tag_109\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_46\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_47:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_48:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_49:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_113:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_115\n  tag_48\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3950:4034   */\ntag_114:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_50:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_51:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_52:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_53:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_120\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_52\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4665:4704   */\n  tag_121\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_52\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_54:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_55:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_56:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_125\n    /* \"#utility.yul\":5054:5088   */\n  tag_126\n    /* \"#utility.yul\":5063:5087   */\n  tag_127\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_54\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5054:5088   */\n  tag_55\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5036:5089   */\n  tag_54\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_57:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_58:\n    /* \"#utility.yul\":5292:5331   */\n  tag_130\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_56\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5353:5444   */\n  tag_131\n    /* \"#utility.yul\":5402:5443   */\n  tag_132\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_57\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_53\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_59:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_60:\n    /* \"#utility.yul\":5613:5645   */\n  tag_135\n  tag_59\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5654:5719   */\n  tag_136\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_58\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_61:\n    /* \"#utility.yul\":5791:5911   */\ntag_138:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_141\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_60\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_62:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_144\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_50\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6142:6171   */\n  tag_145\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_51\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_146:\n    /* \"#utility.yul\":6369:6449   */\n  tag_147\n    /* \"#utility.yul\":6425:6447   */\n  tag_148\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_51\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_61\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_143:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_63:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_64:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_151\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_63\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_65:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_153\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_64\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_8:\n    /* \"#utility.yul\":7186:7223   */\n  tag_155\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_47\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_157\n  tag_40\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7274:7330   */\ntag_156:\n    /* \"#utility.yul\":7354:7392   */\n  tag_158\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_49\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7439:7506   */\n  tag_159\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_62\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_161\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_162:\n    /* \"#utility.yul\":8380:8447   */\n  tag_163\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_65\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_160)\n    /* \"#utility.yul\":7601:8219   */\ntag_161:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_164\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_50\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_165:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_165)\ntag_167:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_169\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_64\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_168:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_160:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8470:8650   */\ntag_66:\n    /* \"#utility.yul\":8518:8595   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8515:8516   */\n  0x00\n    /* \"#utility.yul\":8508:8596   */\n  mstore\n    /* \"#utility.yul\":8615:8619   */\n  0x11\n    /* \"#utility.yul\":8612:8613   */\n  0x04\n    /* \"#utility.yul\":8605:8620   */\n  mstore\n    /* \"#utility.yul\":8639:8643   */\n  0x24\n    /* \"#utility.yul\":8636:8637   */\n  0x00\n    /* \"#utility.yul\":8629:8644   */\n  revert\n    /* \"#utility.yul\":8656:9066   */\ntag_13:\n    /* \"#utility.yul\":8696:8703   */\n  0x00\n    /* \"#utility.yul\":8719:8739   */\n  tag_172\n    /* \"#utility.yul\":8737:8738   */\n  dup3\n    /* \"#utility.yul\":8719:8739   */\n  tag_54\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8714:8739   */\n  swap2\n  pop\n    /* \"#utility.yul\":8753:8773   */\n  tag_173\n    /* \"#utility.yul\":8771:8772   */\n  dup4\n    /* \"#utility.yul\":8753:8773   */\n  tag_54\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8748:8773   */\n  swap3\n  pop\n    /* \"#utility.yul\":8808:8809   */\n  dup3\n    /* \"#utility.yul\":8805:8806   */\n  dup3\n    /* \"#utility.yul\":8801:8810   */\n  mul\n    /* \"#utility.yul\":8830:8860   */\n  tag_174\n    /* \"#utility.yul\":8848:8859   */\n  dup2\n    /* \"#utility.yul\":8830:8860   */\n  tag_54\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8819:8860   */\n  swap2\n  pop\n    /* \"#utility.yul\":9009:9010   */\n  dup3\n    /* \"#utility.yul\":9000:9007   */\n  dup3\n    /* \"#utility.yul\":8996:9011   */\n  div\n    /* \"#utility.yul\":8993:8994   */\n  dup5\n    /* \"#utility.yul\":8990:9012   */\n  eq\n    /* \"#utility.yul\":8970:8971   */\n  dup4\n    /* \"#utility.yul\":8963:8972   */\n  iszero\n    /* \"#utility.yul\":8943:9026   */\n  or\n    /* \"#utility.yul\":8920:9059   */\n  tag_175\n  jumpi\n    /* \"#utility.yul\":9039:9057   */\n  tag_176\n  tag_66\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8920:9059   */\ntag_175:\n    /* \"#utility.yul\":8704:9066   */\n  pop\n    /* \"#utility.yul\":8656:9066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9072:9198   */\ntag_67:\n    /* \"#utility.yul\":9109:9116   */\n  0x00\n    /* \"#utility.yul\":9149:9191   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9142:9147   */\n  dup3\n    /* \"#utility.yul\":9138:9192   */\n  and\n    /* \"#utility.yul\":9127:9192   */\n  swap1\n  pop\n    /* \"#utility.yul\":9072:9198   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9204:9300   */\ntag_68:\n    /* \"#utility.yul\":9241:9248   */\n  0x00\n    /* \"#utility.yul\":9270:9294   */\n  tag_179\n    /* \"#utility.yul\":9288:9293   */\n  dup3\n    /* \"#utility.yul\":9270:9294   */\n  tag_67\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9259:9294   */\n  swap1\n  pop\n    /* \"#utility.yul\":9204:9300   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9306:9424   */\ntag_69:\n    /* \"#utility.yul\":9393:9417   */\n  tag_181\n    /* \"#utility.yul\":9411:9416   */\n  dup2\n    /* \"#utility.yul\":9393:9417   */\n  tag_68\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9388:9391   */\n  dup3\n    /* \"#utility.yul\":9381:9418   */\n  mstore\n    /* \"#utility.yul\":9306:9424   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9430:9652   */\ntag_19:\n    /* \"#utility.yul\":9523:9527   */\n  0x00\n    /* \"#utility.yul\":9561:9563   */\n  0x20\n    /* \"#utility.yul\":9550:9559   */\n  dup3\n    /* \"#utility.yul\":9546:9564   */\n  add\n    /* \"#utility.yul\":9538:9564   */\n  swap1\n  pop\n    /* \"#utility.yul\":9574:9645   */\n  tag_183\n    /* \"#utility.yul\":9642:9643   */\n  0x00\n    /* \"#utility.yul\":9631:9640   */\n  dup4\n    /* \"#utility.yul\":9627:9644   */\n  add\n    /* \"#utility.yul\":9618:9624   */\n  dup5\n    /* \"#utility.yul\":9574:9645   */\n  tag_69\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9430:9652   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9658:9849   */\ntag_25:\n    /* \"#utility.yul\":9698:9701   */\n  0x00\n    /* \"#utility.yul\":9717:9737   */\n  tag_185\n    /* \"#utility.yul\":9735:9736   */\n  dup3\n    /* \"#utility.yul\":9717:9737   */\n  tag_54\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9712:9737   */\n  swap2\n  pop\n    /* \"#utility.yul\":9751:9771   */\n  tag_186\n    /* \"#utility.yul\":9769:9770   */\n  dup4\n    /* \"#utility.yul\":9751:9771   */\n  tag_54\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9746:9771   */\n  swap3\n  pop\n    /* \"#utility.yul\":9794:9795   */\n  dup3\n    /* \"#utility.yul\":9791:9792   */\n  dup3\n    /* \"#utility.yul\":9787:9796   */\n  add\n    /* \"#utility.yul\":9780:9796   */\n  swap1\n  pop\n    /* \"#utility.yul\":9815:9818   */\n  dup1\n    /* \"#utility.yul\":9812:9813   */\n  dup3\n    /* \"#utility.yul\":9809:9819   */\n  gt\n    /* \"#utility.yul\":9806:9842   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9822:9840   */\n  tag_188\n  tag_66\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9806:9842   */\ntag_187:\n    /* \"#utility.yul\":9658:9849   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9855:9973   */\ntag_70:\n    /* \"#utility.yul\":9942:9966   */\n  tag_190\n    /* \"#utility.yul\":9960:9965   */\n  dup2\n    /* \"#utility.yul\":9942:9966   */\n  tag_54\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9937:9940   */\n  dup3\n    /* \"#utility.yul\":9930:9967   */\n  mstore\n    /* \"#utility.yul\":9855:9973   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9979:10421   */\ntag_29:\n    /* \"#utility.yul\":10128:10132   */\n  0x00\n    /* \"#utility.yul\":10166:10168   */\n  0x60\n    /* \"#utility.yul\":10155:10164   */\n  dup3\n    /* \"#utility.yul\":10151:10169   */\n  add\n    /* \"#utility.yul\":10143:10169   */\n  swap1\n  pop\n    /* \"#utility.yul\":10179:10250   */\n  tag_192\n    /* \"#utility.yul\":10247:10248   */\n  0x00\n    /* \"#utility.yul\":10236:10245   */\n  dup4\n    /* \"#utility.yul\":10232:10249   */\n  add\n    /* \"#utility.yul\":10223:10229   */\n  dup7\n    /* \"#utility.yul\":10179:10250   */\n  tag_69\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":10260:10332   */\n  tag_193\n    /* \"#utility.yul\":10328:10330   */\n  0x20\n    /* \"#utility.yul\":10317:10326   */\n  dup4\n    /* \"#utility.yul\":10313:10331   */\n  add\n    /* \"#utility.yul\":10304:10310   */\n  dup6\n    /* \"#utility.yul\":10260:10332   */\n  tag_70\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10342:10414   */\n  tag_194\n    /* \"#utility.yul\":10410:10412   */\n  0x40\n    /* \"#utility.yul\":10399:10408   */\n  dup4\n    /* \"#utility.yul\":10395:10413   */\n  add\n    /* \"#utility.yul\":10386:10392   */\n  dup5\n    /* \"#utility.yul\":10342:10414   */\n  tag_70\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9979:10421   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10427:10649   */\ntag_33:\n    /* \"#utility.yul\":10520:10524   */\n  0x00\n    /* \"#utility.yul\":10558:10560   */\n  0x20\n    /* \"#utility.yul\":10547:10556   */\n  dup3\n    /* \"#utility.yul\":10543:10561   */\n  add\n    /* \"#utility.yul\":10535:10561   */\n  swap1\n  pop\n    /* \"#utility.yul\":10571:10642   */\n  tag_196\n    /* \"#utility.yul\":10639:10640   */\n  0x00\n    /* \"#utility.yul\":10628:10637   */\n  dup4\n    /* \"#utility.yul\":10624:10641   */\n  add\n    /* \"#utility.yul\":10615:10621   */\n  dup5\n    /* \"#utility.yul\":10571:10642   */\n  tag_70\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":10427:10649   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/flipit.sol\":169:2796  contract flipit is ERC20 {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/flipit.sol\":169:2796  contract flipit is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9fe5491c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb90306ad\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc12019eb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x47cee97c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6010b797\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6d41b22c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x1e548d7a\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x1e548d7a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x20c63d56\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x21ba18a1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x239fcf0f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x06763788\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fdb1c10\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/flipit.sol\":2671:2794  function addressBalnc(address _user) public view  returns (uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4002:4188  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flipit.sol\":2519:2666  function withDraw() public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flipit.sol\":748:901  function pumptit(uint256 _pumpMint) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/flipit.sol\":2058:2146  function payContractGasFee() public payable {... */\n    tag_8:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/flipit.sol\":1639:1874  function flipClick(address _addrs, uint256 _amount) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/flipit.sol\":1529:1633  function Balance(address _user) external view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4780:5024  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flipit.sol\":989:1325  function Claim(address _addrs, uint _amount) external {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/flipit.sol\":2151:2363  function realTime(address _addrs) public view returns(uint256){... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flipit.sol\":906:984  function decimalsz() public pure returns(uint){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flipit.sol\":1880:2052  function gain(address _addrs, uint256 _tokenStaked) public {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3319:3497  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flipit.sol\":1331:1523  function Burn(uint256 _value) external {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/flipit.sol\":2368:2514  function SenderEth() public view returns(address[] memory){... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3555:3695  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/flipit.sol\":2671:2794  function addressBalnc(address _user) public view  returns (uint256){... */\n    tag_30:\n        /* \"contracts/flipit.sol\":2730:2737  uint256 */\n      0x00\n        /* \"contracts/flipit.sol\":2755:2760  _user */\n      dup2\n        /* \"contracts/flipit.sol\":2755:2768  _user.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/flipit.sol\":2748:2768  return _user.balance */\n      swap1\n      pop\n        /* \"contracts/flipit.sol\":2671:2794  function addressBalnc(address _user) public view  returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_128\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4002:4188  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4075:4079  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4091:4104  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4107:4119  _msgSender() */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4107:4117  _msgSender */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4107:4119  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4091:4119  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4129:4160  _approve(owner, spender, value) */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4138:4143  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4145:4152  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4154:4159  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4129:4137  _approve */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4129:4160  _approve(owner, spender, value) */\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4177:4181  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4170:4181  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4002:4188  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/flipit.sol\":2519:2666  function withDraw() public {... */\n    tag_47:\n        /* \"contracts/flipit.sol\":2575:2585  msg.sender */\n      caller\n        /* \"contracts/flipit.sol\":2564:2585  _owner_ == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":2564:2571  _owner_ */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":2564:2585  _owner_ == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/flipit.sol\":2556:2600  require(_owner_ == msg.sender, \"Not owner!\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/flipit.sol\":2619:2626  _owner_ */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":2610:2636  payable (_owner_).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":2610:2659  payable (_owner_).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/flipit.sol\":2637:2658  address(this).balance */\n      selfbalance\n        /* \"contracts/flipit.sol\":2610:2659  payable (_owner_).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n        /* \"contracts/flipit.sol\":2519:2666  function withDraw() public {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/flipit.sol\":748:901  function pumptit(uint256 _pumpMint) public {... */\n    tag_56:\n        /* \"contracts/flipit.sol\":820:830  msg.sender */\n      caller\n        /* \"contracts/flipit.sol\":809:830  _owner_ == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":809:816  _owner_ */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":809:830  _owner_ == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/flipit.sol\":801:845  require(_owner_ == msg.sender, \"Not owner!\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_141\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/flipit.sol\":855:894  _mint(msg.sender, _pumpMint * DECIMALS) */\n      tag_148\n        /* \"contracts/flipit.sol\":861:871  msg.sender */\n      caller\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":873:882  _pumpMint */\n      dup4\n        /* \"contracts/flipit.sol\":873:893  _pumpMint * DECIMALS */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"contracts/flipit.sol\":855:860  _mint */\n      tag_151\n        /* \"contracts/flipit.sol\":855:894  _mint(msg.sender, _pumpMint * DECIMALS) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/flipit.sol\":748:901  function pumptit(uint256 _pumpMint) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/flipit.sol\":2058:2146  function payContractGasFee() public payable {... */\n    tag_58:\n        /* \"contracts/flipit.sol\":2112:2122  _senderEth */\n      0x07\n        /* \"contracts/flipit.sol\":2128:2138  msg.sender */\n      caller\n        /* \"contracts/flipit.sol\":2112:2139  _senderEth.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/flipit.sol\":2058:2146  function payContractGasFee() public payable {... */\n      jump\t// out\n        /* \"contracts/flipit.sol\":1639:1874  function flipClick(address _addrs, uint256 _amount) external {... */\n    tag_62:\n        /* \"contracts/flipit.sol\":1732:1733  0 */\n      0x00\n        /* \"contracts/flipit.sol\":1714:1734  _addrs == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":1714:1720  _addrs */\n      dup3\n        /* \"contracts/flipit.sol\":1714:1734  _addrs == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/flipit.sol\":1710:1812  if (_addrs == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"contracts/flipit.sol\":1757:1801  AddressNotFound(\"Address zero not allowed!\") */\n      mload(0x40)\n      0x577375f300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/flipit.sol\":1710:1812  if (_addrs == address(0)) {... */\n    tag_155:\n        /* \"contracts/flipit.sol\":1821:1867  _transfer(_addrs, _owner_, _amount * DECIMALS) */\n      tag_158\n        /* \"contracts/flipit.sol\":1831:1837  _addrs */\n      dup3\n        /* \"contracts/flipit.sol\":1839:1846  _owner_ */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":1848:1855  _amount */\n      dup5\n        /* \"contracts/flipit.sol\":1848:1866  _amount * DECIMALS */\n      tag_159\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_159:\n        /* \"contracts/flipit.sol\":1821:1830  _transfer */\n      tag_160\n        /* \"contracts/flipit.sol\":1821:1867  _transfer(_addrs, _owner_, _amount * DECIMALS) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/flipit.sol\":1639:1874  function flipClick(address _addrs, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/flipit.sol\":1529:1633  function Balance(address _user) external view returns (uint256) {... */\n    tag_66:\n        /* \"contracts/flipit.sol\":1584:1591  uint256 */\n      0x00\n        /* \"contracts/flipit.sol\":1610:1626  balanceOf(_user) */\n      tag_162\n        /* \"contracts/flipit.sol\":1620:1625  _user */\n      dup3\n        /* \"contracts/flipit.sol\":1610:1619  balanceOf */\n      tag_95\n        /* \"contracts/flipit.sol\":1610:1626  balanceOf(_user) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/flipit.sol\":1603:1626  return balanceOf(_user) */\n      swap1\n      pop\n        /* \"contracts/flipit.sol\":1529:1633  function Balance(address _user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4780:5024  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4867:4871  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4883:4898  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4901:4913  _msgSender() */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4901:4911  _msgSender */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4901:4913  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4883:4913  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4923:4960  _spendAllowance(from, spender, value) */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4939:4943  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4945:4952  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4954:4959  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4923:4938  _spendAllowance */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4923:4960  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4970:4996  _transfer(from, to, value) */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4980:4984  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4986:4988  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4990:4995  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4970:4979  _transfer */\n      tag_160\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4970:4996  _transfer(from, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5013:5017  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5006:5017  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4780:5024  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/flipit.sol\":989:1325  function Claim(address _addrs, uint _amount) external {... */\n    tag_82:\n        /* \"contracts/flipit.sol\":1075:1076  0 */\n      0x00\n        /* \"contracts/flipit.sol\":1057:1077  _addrs == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":1057:1063  _addrs */\n      dup3\n        /* \"contracts/flipit.sol\":1057:1077  _addrs == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/flipit.sol\":1053:1155  if (_addrs == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"contracts/flipit.sol\":1100:1144  AddressNotFound(\"Address zero not allowed!\") */\n      mload(0x40)\n      0x577375f300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_157\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/flipit.sol\":1053:1155  if (_addrs == address(0)) {... */\n    tag_170:\n        /* \"contracts/flipit.sol\":1188:1189  0 */\n      0x00\n        /* \"contracts/flipit.sol\":1168:1185  balanceOf(_addrs) */\n      tag_172\n        /* \"contracts/flipit.sol\":1178:1184  _addrs */\n      dup4\n        /* \"contracts/flipit.sol\":1168:1177  balanceOf */\n      tag_95\n        /* \"contracts/flipit.sol\":1168:1185  balanceOf(_addrs) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/flipit.sol\":1168:1189  balanceOf(_addrs) > 0 */\n      gt\n        /* \"contracts/flipit.sol\":1164:1255  if (balanceOf(_addrs) > 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/flipit.sol\":1212:1244  TokenClaimed(\"Address Claimed!\") */\n      mload(0x40)\n      0xc18cab9000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/flipit.sol\":1164:1255  if (balanceOf(_addrs) > 0) {... */\n    tag_173:\n        /* \"contracts/flipit.sol\":1264:1318  _transfer(contractAddress, _addrs, _amount * DECIMALS) */\n      tag_176\n        /* \"contracts/flipit.sol\":1274:1289  contractAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":1291:1297  _addrs */\n      dup4\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":1299:1306  _amount */\n      dup5\n        /* \"contracts/flipit.sol\":1299:1317  _amount * DECIMALS */\n      tag_177\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_177:\n        /* \"contracts/flipit.sol\":1264:1273  _transfer */\n      tag_160\n        /* \"contracts/flipit.sol\":1264:1318  _transfer(contractAddress, _addrs, _amount * DECIMALS) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/flipit.sol\":989:1325  function Claim(address _addrs, uint _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/flipit.sol\":2151:2363  function realTime(address _addrs) public view returns(uint256){... */\n    tag_86:\n        /* \"contracts/flipit.sol\":2205:2212  uint256 */\n      0x00\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":2226:2243  balanceOf(_addrs) */\n      tag_179\n        /* \"contracts/flipit.sol\":2236:2242  _addrs */\n      dup4\n        /* \"contracts/flipit.sol\":2226:2235  balanceOf */\n      tag_95\n        /* \"contracts/flipit.sol\":2226:2243  balanceOf(_addrs) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/flipit.sol\":2226:2254  balanceOf(_addrs) < DECIMALS */\n      lt\n        /* \"contracts/flipit.sol\":2223:2315  if(balanceOf(_addrs) < DECIMALS){... */\n      iszero\n      tag_180\n      jumpi\n        /* \"contracts/flipit.sol\":2276:2304  NoToken(\"Token not enough!\") */\n      mload(0x40)\n      0xb4600e9900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/flipit.sol\":2223:2315  if(balanceOf(_addrs) < DECIMALS){... */\n    tag_180:\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":2330:2347  balanceOf(_addrs) */\n      tag_183\n        /* \"contracts/flipit.sol\":2340:2346  _addrs */\n      dup4\n        /* \"contracts/flipit.sol\":2330:2339  balanceOf */\n      tag_95\n        /* \"contracts/flipit.sol\":2330:2347  balanceOf(_addrs) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/flipit.sol\":2330:2356  balanceOf(_addrs)/DECIMALS */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/flipit.sol\":2323:2356  return balanceOf(_addrs)/DECIMALS */\n      swap1\n      pop\n        /* \"contracts/flipit.sol\":2151:2363  function realTime(address _addrs) public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/flipit.sol\":906:984  function decimalsz() public pure returns(uint){... */\n    tag_90:\n        /* \"contracts/flipit.sol\":947:951  uint */\n      0x00\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":962:977  return DECIMALS */\n      swap1\n      pop\n        /* \"contracts/flipit.sol\":906:984  function decimalsz() public pure returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_128\n      jump\t// in\n    tag_189:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_128\n      jump\t// in\n    tag_190:\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/flipit.sol\":1880:2052  function gain(address _addrs, uint256 _tokenStaked) public {... */\n    tag_104:\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":1964:1976  _tokenStaked */\n      dup2\n        /* \"contracts/flipit.sol\":1964:1987  _tokenStaked * DECIMALS */\n      tag_195\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_195:\n        /* \"contracts/flipit.sol\":1949:1987  _tokenStaked = _tokenStaked * DECIMALS */\n      swap1\n      pop\n        /* \"contracts/flipit.sol\":1997:2045  _transfer(address(this), _addrs, _tokenStaked*2) */\n      tag_196\n        /* \"contracts/flipit.sol\":2015:2019  this */\n      address\n        /* \"contracts/flipit.sol\":2022:2028  _addrs */\n      dup4\n        /* \"contracts/flipit.sol\":2043:2044  2 */\n      0x02\n        /* \"contracts/flipit.sol\":2030:2042  _tokenStaked */\n      dup5\n        /* \"contracts/flipit.sol\":2030:2044  _tokenStaked*2 */\n      tag_197\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_197:\n        /* \"contracts/flipit.sol\":1997:2006  _transfer */\n      tag_160\n        /* \"contracts/flipit.sol\":1997:2045  _transfer(address(this), _addrs, _tokenStaked*2) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/flipit.sol\":1880:2052  function gain(address _addrs, uint256 _tokenStaked) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3319:3497  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3388:3392  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3404:3417  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3420:3432  _msgSender() */\n      tag_199\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3420:3430  _msgSender */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3420:3432  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3404:3432  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3442:3469  _transfer(owner, to, value) */\n      tag_200\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3452:3457  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3459:3461  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3463:3468  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3442:3451  _transfer */\n      tag_160\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3442:3469  _transfer(owner, to, value) */\n      jump\t// in\n    tag_200:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3486:3490  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3479:3490  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3319:3497  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/flipit.sol\":1331:1523  function Burn(uint256 _value) external {... */\n    tag_113:\n        /* \"contracts/flipit.sol\":1408:1409  0 */\n      0x00\n        /* \"contracts/flipit.sol\":1384:1405  balanceOf(msg.sender) */\n      tag_202\n        /* \"contracts/flipit.sol\":1394:1404  msg.sender */\n      caller\n        /* \"contracts/flipit.sol\":1384:1393  balanceOf */\n      tag_95\n        /* \"contracts/flipit.sol\":1384:1405  balanceOf(msg.sender) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/flipit.sol\":1384:1409  balanceOf(msg.sender) < 0 */\n      lt\n        /* \"contracts/flipit.sol\":1380:1471  if (balanceOf(msg.sender) < 0) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/flipit.sol\":1432:1460  NoToken(\"Token not Enough!\") */\n      mload(0x40)\n      0xb4600e9900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/flipit.sol\":1380:1471  if (balanceOf(msg.sender) < 0) {... */\n    tag_203:\n        /* \"contracts/flipit.sol\":1480:1516  _burn(msg.sender, _value * DECIMALS) */\n      tag_206\n        /* \"contracts/flipit.sol\":1486:1496  msg.sender */\n      caller\n        /* \"contracts/flipit.sol\":300:306  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/flipit.sol\":1498:1504  _value */\n      dup4\n        /* \"contracts/flipit.sol\":1498:1515  _value * DECIMALS */\n      tag_207\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_207:\n        /* \"contracts/flipit.sol\":1480:1485  _burn */\n      tag_208\n        /* \"contracts/flipit.sol\":1480:1516  _burn(msg.sender, _value * DECIMALS) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/flipit.sol\":1331:1523  function Burn(uint256 _value) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/flipit.sol\":2368:2514  function SenderEth() public view returns(address[] memory){... */\n    tag_116:\n        /* \"contracts/flipit.sol\":2409:2425  address[] memory */\n      0x60\n        /* \"contracts/flipit.sol\":2455:2465  msg.sender */\n      caller\n        /* \"contracts/flipit.sol\":2444:2465  _owner_ == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":2444:2451  _owner_ */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/flipit.sol\":2444:2465  _owner_ == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/flipit.sol\":2436:2480  require(_owner_ == msg.sender, \"Not owner!\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_141\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/flipit.sol\":2497:2507  _senderEth */\n      0x07\n        /* \"contracts/flipit.sol\":2490:2507  return _senderEth */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_213:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_213\n      jumpi\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/flipit.sol\":2368:2514  function SenderEth() public view returns(address[] memory){... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3555:3695  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3635:3642  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3661:3672  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3661:3679  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3673:3678  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3661:3679  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3661:3688  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3680:3687  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3661:3688  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3654:3688  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3555:3695  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8730:8858  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8814:8851  _approve(owner, spender, value, true) */\n      tag_217\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8823:8828  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8830:8837  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8839:8844  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8846:8850  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8814:8822  _approve */\n      tag_218\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8814:8851  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8730:8858  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7462:7670  function _mint(address account, uint256 value) internal {... */\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7551:7552  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7532:7553  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7532:7539  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7532:7553  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7619  if (account == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7605:7606  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7576:7608  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7619  if (account == address(0)) {... */\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7628:7663  _update(address(0), account, value) */\n      tag_223\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7644:7645  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7648:7655  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7657:7662  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7628:7635  _update */\n      tag_224\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7628:7663  _update(address(0), account, value) */\n      jump\t// in\n    tag_223:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7462:7670  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5397:5697  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5496:5497  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5480:5498  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5480:5484  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5480:5498  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5562  if (from == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5548:5549  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5521:5551  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5562  if (from == address(0)) {... */\n    tag_226:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5589:5590  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5575:5591  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5575:5577  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5575:5591  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5657  if (to == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5643:5644  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5614:5646  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5657  if (to == address(0)) {... */\n    tag_228:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5666:5690  _update(from, to, value) */\n      tag_230\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5674:5678  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5680:5682  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5684:5689  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5666:5673  _update */\n      tag_224\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5666:5690  _update(from, to, value) */\n      jump\t// in\n    tag_230:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5397:5697  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10419:10895  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10518:10542  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10545:10570  allowance(owner, spender) */\n      tag_232\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10555:10560  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10562:10569  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10545:10554  allowance */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10545:10570  allowance(owner, spender) */\n      jump\t// in\n    tag_232:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10518:10570  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10603:10620  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10584:10600  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10584:10620  currentAllowance < type(uint256).max */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10889  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10659:10664  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10640:10656  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10640:10664  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10636:10766  if (currentAllowance < value) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10718:10725  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10727:10743  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10745:10750  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10691:10751  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10636:10766  if (currentAllowance < value) {... */\n    tag_234:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10807:10864  _approve(owner, spender, currentAllowance - value, false) */\n      tag_237\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10816:10821  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10823:10830  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10851:10856  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10832:10848  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10832:10856  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10858:10863  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10807:10815  _approve */\n      tag_218\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10807:10864  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_237:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10889  if (currentAllowance < type(uint256).max) {... */\n    tag_233:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10508:10895  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10419:10895  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7988:8194  function _burn(address account, uint256 value) internal {... */\n    tag_208:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8058:8079  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8058:8065  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8058:8079  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8054:8143  if (account == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8129:8130  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8102:8132  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8054:8143  if (account == address(0)) {... */\n    tag_239:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8152:8187  _update(account, address(0), value) */\n      tag_241\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8160:8167  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8177:8178  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8181:8186  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8152:8159  _update */\n      tag_224\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8152:8187  _update(account, address(0), value) */\n      jump\t// in\n    tag_241:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7988:8194  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9705:10137  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_218:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9817:9836  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9817:9822  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9817:9836  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9902  if (owner == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9888:9889  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9859:9891  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9902  if (owner == address(0)) {... */\n    tag_243:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9934:9935  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9915:9936  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9915:9922  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9915:9936  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:10001  if (spender == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9987:9988  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9959:9990  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:10001  if (spender == address(0)) {... */\n    tag_245:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10040:10045  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10010:10021  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10010:10028  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10022:10027  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10010:10028  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10010:10037  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10029:10036  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10010:10037  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10010:10045  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10059:10068  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10055:10131  if (emitEvent) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10105:10112  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10089:10120  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10098:10103  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10089:10120  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10114:10119  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10089:10120  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_248\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10055:10131  if (emitEvent) {... */\n    tag_247:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9705:10137  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6012:7119  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_224:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6117:6118  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6101:6119  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6101:6105  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6101:6119  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6637  if (from == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6253:6258  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6237:6249  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6237:6258  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6637  if (from == address(0)) {... */\n      jump(tag_253)\n    tag_250:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6289:6308  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6311:6320  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6311:6326  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6325  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6311:6326  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6289:6326  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6358:6363  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6344:6355  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6344:6363  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6455  if (fromBalance < value) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6415:6419  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6421:6432  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6434:6439  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6390:6440  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6455  if (fromBalance < value) {... */\n    tag_254:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6607:6612  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6593:6604  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6593:6612  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6584  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6590  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6585:6589  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6590  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6575:6612  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6275:6637  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6637  if (from == address(0)) {... */\n    tag_253:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6665:6666  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6651:6667  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6651:6653  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6651:6667  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:7072  if (to == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6830:6835  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6814:6826  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6814:6835  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:7072  if (to == address(0)) {... */\n      jump(tag_257)\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7042:7047  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7034  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7038  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7035:7037  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7038  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7047  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:7072  if (to == address(0)) {... */\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7102:7104  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7112  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7096:7100  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7112  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7106:7111  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7112  Transfer(from, to, value) */\n      mload(0x40)\n      tag_258\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6012:7119  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_260:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_262:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_263:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_306\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_262\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_264:\n        /* \"#utility.yul\":641:665   */\n      tag_308\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_263\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_309:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_265:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_311\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_264\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_29:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_314\n      tag_260\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":917:1036   */\n    tag_313:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_315\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_265\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_266:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_267:\n        /* \"#utility.yul\":1346:1370   */\n      tag_318\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_266\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_32:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_320\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_267\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1710   */\n    tag_268:\n        /* \"#utility.yul\":1663:1669   */\n      0x00\n        /* \"#utility.yul\":1697:1702   */\n      dup2\n        /* \"#utility.yul\":1691:1703   */\n      mload\n        /* \"#utility.yul\":1681:1703   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1885   */\n    tag_269:\n        /* \"#utility.yul\":1800:1811   */\n      0x00\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1829:1832   */\n      dup3\n        /* \"#utility.yul\":1822:1841   */\n      mstore\n        /* \"#utility.yul\":1874:1878   */\n      0x20\n        /* \"#utility.yul\":1869:1872   */\n      dup3\n        /* \"#utility.yul\":1865:1879   */\n      add\n        /* \"#utility.yul\":1850:1879   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:1885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2030   */\n    tag_270:\n        /* \"#utility.yul\":1980:1986   */\n      dup3\n        /* \"#utility.yul\":1975:1978   */\n      dup2\n        /* \"#utility.yul\":1970:1973   */\n      dup4\n        /* \"#utility.yul\":1964:1987   */\n      mcopy\n        /* \"#utility.yul\":2021:2022   */\n      0x00\n        /* \"#utility.yul\":2012:2018   */\n      dup4\n        /* \"#utility.yul\":2007:2010   */\n      dup4\n        /* \"#utility.yul\":2003:2019   */\n      add\n        /* \"#utility.yul\":1996:2023   */\n      mstore\n        /* \"#utility.yul\":1891:2030   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2036:2138   */\n    tag_271:\n        /* \"#utility.yul\":2077:2083   */\n      0x00\n        /* \"#utility.yul\":2128:2130   */\n      0x1f\n        /* \"#utility.yul\":2124:2131   */\n      not\n        /* \"#utility.yul\":2119:2121   */\n      0x1f\n        /* \"#utility.yul\":2112:2117   */\n      dup4\n        /* \"#utility.yul\":2108:2122   */\n      add\n        /* \"#utility.yul\":2104:2132   */\n      and\n        /* \"#utility.yul\":2094:2132   */\n      swap1\n      pop\n        /* \"#utility.yul\":2036:2138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2144:2521   */\n    tag_272:\n        /* \"#utility.yul\":2232:2235   */\n      0x00\n        /* \"#utility.yul\":2260:2299   */\n      tag_326\n        /* \"#utility.yul\":2293:2298   */\n      dup3\n        /* \"#utility.yul\":2260:2299   */\n      tag_268\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2315:2386   */\n      tag_327\n        /* \"#utility.yul\":2379:2385   */\n      dup2\n        /* \"#utility.yul\":2374:2377   */\n      dup6\n        /* \"#utility.yul\":2315:2386   */\n      tag_269\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2308:2386   */\n      swap4\n      pop\n        /* \"#utility.yul\":2395:2460   */\n      tag_328\n        /* \"#utility.yul\":2453:2459   */\n      dup2\n        /* \"#utility.yul\":2448:2451   */\n      dup6\n        /* \"#utility.yul\":2441:2445   */\n      0x20\n        /* \"#utility.yul\":2434:2439   */\n      dup7\n        /* \"#utility.yul\":2430:2446   */\n      add\n        /* \"#utility.yul\":2395:2460   */\n      tag_270\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2485:2514   */\n      tag_329\n        /* \"#utility.yul\":2507:2513   */\n      dup2\n        /* \"#utility.yul\":2485:2514   */\n      tag_271\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2480:2483   */\n      dup5\n        /* \"#utility.yul\":2476:2515   */\n      add\n        /* \"#utility.yul\":2469:2515   */\n      swap2\n      pop\n        /* \"#utility.yul\":2236:2521   */\n      pop\n        /* \"#utility.yul\":2144:2521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2527:2840   */\n    tag_37:\n        /* \"#utility.yul\":2640:2644   */\n      0x00\n        /* \"#utility.yul\":2678:2680   */\n      0x20\n        /* \"#utility.yul\":2667:2676   */\n      dup3\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2655:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2727:2736   */\n      dup2\n        /* \"#utility.yul\":2721:2725   */\n      dup2\n        /* \"#utility.yul\":2717:2737   */\n      sub\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2702:2711   */\n      dup4\n        /* \"#utility.yul\":2698:2715   */\n      add\n        /* \"#utility.yul\":2691:2738   */\n      mstore\n        /* \"#utility.yul\":2755:2833   */\n      tag_331\n        /* \"#utility.yul\":2828:2832   */\n      dup2\n        /* \"#utility.yul\":2819:2825   */\n      dup5\n        /* \"#utility.yul\":2755:2833   */\n      tag_272\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2747:2833   */\n      swap1\n      pop\n        /* \"#utility.yul\":2527:2840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2968   */\n    tag_273:\n        /* \"#utility.yul\":2919:2943   */\n      tag_333\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2919:2943   */\n      tag_266\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2909:2944   */\n      eq\n        /* \"#utility.yul\":2899:2962   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      dup1\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2899:2962   */\n    tag_334:\n        /* \"#utility.yul\":2846:2968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3113   */\n    tag_274:\n        /* \"#utility.yul\":3020:3025   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3045:3065   */\n      calldataload\n        /* \"#utility.yul\":3036:3065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3107   */\n      tag_336\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3074:3107   */\n      tag_273\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2974:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3593   */\n    tag_41:\n        /* \"#utility.yul\":3187:3193   */\n      0x00\n        /* \"#utility.yul\":3195:3201   */\n      dup1\n        /* \"#utility.yul\":3244:3246   */\n      0x40\n        /* \"#utility.yul\":3232:3241   */\n      dup4\n        /* \"#utility.yul\":3223:3230   */\n      dup6\n        /* \"#utility.yul\":3219:3242   */\n      sub\n        /* \"#utility.yul\":3215:3247   */\n      slt\n        /* \"#utility.yul\":3212:3331   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":3250:3329   */\n      tag_339\n      tag_260\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3212:3331   */\n    tag_338:\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3395:3448   */\n      tag_340\n        /* \"#utility.yul\":3440:3447   */\n      dup6\n        /* \"#utility.yul\":3431:3437   */\n      dup3\n        /* \"#utility.yul\":3420:3429   */\n      dup7\n        /* \"#utility.yul\":3416:3438   */\n      add\n        /* \"#utility.yul\":3395:3448   */\n      tag_265\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3385:3448   */\n      swap3\n      pop\n        /* \"#utility.yul\":3341:3458   */\n      pop\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3523:3576   */\n      tag_341\n        /* \"#utility.yul\":3568:3575   */\n      dup6\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup7\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_274\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3468:3586   */\n      pop\n        /* \"#utility.yul\":3119:3593   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3689   */\n    tag_275:\n        /* \"#utility.yul\":3633:3640   */\n      0x00\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3669:3682   */\n      iszero\n        /* \"#utility.yul\":3662:3683   */\n      iszero\n        /* \"#utility.yul\":3651:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3804   */\n    tag_276:\n        /* \"#utility.yul\":3776:3797   */\n      tag_344\n        /* \"#utility.yul\":3791:3796   */\n      dup2\n        /* \"#utility.yul\":3776:3797   */\n      tag_275\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3771:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3798   */\n      mstore\n        /* \"#utility.yul\":3695:3804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:4020   */\n    tag_44:\n        /* \"#utility.yul\":3897:3901   */\n      0x00\n        /* \"#utility.yul\":3935:3937   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3920:3938   */\n      add\n        /* \"#utility.yul\":3912:3938   */\n      swap1\n      pop\n        /* \"#utility.yul\":3948:4013   */\n      tag_346\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3948:4013   */\n      tag_276\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3810:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4355   */\n    tag_55:\n        /* \"#utility.yul\":4085:4091   */\n      0x00\n        /* \"#utility.yul\":4134:4136   */\n      0x20\n        /* \"#utility.yul\":4122:4131   */\n      dup3\n        /* \"#utility.yul\":4113:4120   */\n      dup5\n        /* \"#utility.yul\":4109:4132   */\n      sub\n        /* \"#utility.yul\":4105:4137   */\n      slt\n        /* \"#utility.yul\":4102:4221   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4140:4219   */\n      tag_349\n      tag_260\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4102:4221   */\n    tag_348:\n        /* \"#utility.yul\":4260:4261   */\n      0x00\n        /* \"#utility.yul\":4285:4338   */\n      tag_350\n        /* \"#utility.yul\":4330:4337   */\n      dup5\n        /* \"#utility.yul\":4321:4327   */\n      dup3\n        /* \"#utility.yul\":4310:4319   */\n      dup6\n        /* \"#utility.yul\":4306:4328   */\n      add\n        /* \"#utility.yul\":4285:4338   */\n      tag_274\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4275:4338   */\n      swap2\n      pop\n        /* \"#utility.yul\":4231:4348   */\n      pop\n        /* \"#utility.yul\":4026:4355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4980   */\n    tag_71:\n        /* \"#utility.yul\":4438:4444   */\n      0x00\n        /* \"#utility.yul\":4446:4452   */\n      dup1\n        /* \"#utility.yul\":4454:4460   */\n      0x00\n        /* \"#utility.yul\":4503:4505   */\n      0x60\n        /* \"#utility.yul\":4491:4500   */\n      dup5\n        /* \"#utility.yul\":4482:4489   */\n      dup7\n        /* \"#utility.yul\":4478:4501   */\n      sub\n        /* \"#utility.yul\":4474:4506   */\n      slt\n        /* \"#utility.yul\":4471:4590   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":4509:4588   */\n      tag_353\n      tag_260\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4471:4590   */\n    tag_352:\n        /* \"#utility.yul\":4629:4630   */\n      0x00\n        /* \"#utility.yul\":4654:4707   */\n      tag_354\n        /* \"#utility.yul\":4699:4706   */\n      dup7\n        /* \"#utility.yul\":4690:4696   */\n      dup3\n        /* \"#utility.yul\":4679:4688   */\n      dup8\n        /* \"#utility.yul\":4675:4697   */\n      add\n        /* \"#utility.yul\":4654:4707   */\n      tag_265\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4644:4707   */\n      swap4\n      pop\n        /* \"#utility.yul\":4600:4717   */\n      pop\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4782:4835   */\n      tag_355\n        /* \"#utility.yul\":4827:4834   */\n      dup7\n        /* \"#utility.yul\":4818:4824   */\n      dup3\n        /* \"#utility.yul\":4807:4816   */\n      dup8\n        /* \"#utility.yul\":4803:4825   */\n      add\n        /* \"#utility.yul\":4782:4835   */\n      tag_265\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4772:4835   */\n      swap3\n      pop\n        /* \"#utility.yul\":4727:4845   */\n      pop\n        /* \"#utility.yul\":4884:4886   */\n      0x40\n        /* \"#utility.yul\":4910:4963   */\n      tag_356\n        /* \"#utility.yul\":4955:4962   */\n      dup7\n        /* \"#utility.yul\":4946:4952   */\n      dup3\n        /* \"#utility.yul\":4935:4944   */\n      dup8\n        /* \"#utility.yul\":4931:4953   */\n      add\n        /* \"#utility.yul\":4910:4963   */\n      tag_274\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4900:4963   */\n      swap2\n      pop\n        /* \"#utility.yul\":4855:4973   */\n      pop\n        /* \"#utility.yul\":4361:4980   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4986:5072   */\n    tag_277:\n        /* \"#utility.yul\":5021:5028   */\n      0x00\n        /* \"#utility.yul\":5061:5065   */\n      0xff\n        /* \"#utility.yul\":5054:5059   */\n      dup3\n        /* \"#utility.yul\":5050:5066   */\n      and\n        /* \"#utility.yul\":5039:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":4986:5072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5078:5190   */\n    tag_278:\n        /* \"#utility.yul\":5161:5183   */\n      tag_359\n        /* \"#utility.yul\":5177:5182   */\n      dup2\n        /* \"#utility.yul\":5161:5183   */\n      tag_277\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5156:5159   */\n      dup3\n        /* \"#utility.yul\":5149:5184   */\n      mstore\n        /* \"#utility.yul\":5078:5190   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5196:5410   */\n    tag_78:\n        /* \"#utility.yul\":5285:5289   */\n      0x00\n        /* \"#utility.yul\":5323:5325   */\n      0x20\n        /* \"#utility.yul\":5312:5321   */\n      dup3\n        /* \"#utility.yul\":5308:5326   */\n      add\n        /* \"#utility.yul\":5300:5326   */\n      swap1\n      pop\n        /* \"#utility.yul\":5336:5403   */\n      tag_361\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5389:5398   */\n      dup4\n        /* \"#utility.yul\":5385:5402   */\n      add\n        /* \"#utility.yul\":5376:5382   */\n      dup5\n        /* \"#utility.yul\":5336:5403   */\n      tag_278\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5196:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5530   */\n    tag_279:\n        /* \"#utility.yul\":5483:5489   */\n      0x00\n        /* \"#utility.yul\":5517:5522   */\n      dup2\n        /* \"#utility.yul\":5511:5523   */\n      mload\n        /* \"#utility.yul\":5501:5523   */\n      swap1\n      pop\n        /* \"#utility.yul\":5416:5530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5720   */\n    tag_280:\n        /* \"#utility.yul\":5635:5646   */\n      0x00\n        /* \"#utility.yul\":5669:5675   */\n      dup3\n        /* \"#utility.yul\":5664:5667   */\n      dup3\n        /* \"#utility.yul\":5657:5676   */\n      mstore\n        /* \"#utility.yul\":5709:5713   */\n      0x20\n        /* \"#utility.yul\":5704:5707   */\n      dup3\n        /* \"#utility.yul\":5700:5714   */\n      add\n        /* \"#utility.yul\":5685:5714   */\n      swap1\n      pop\n        /* \"#utility.yul\":5536:5720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5726:5858   */\n    tag_281:\n        /* \"#utility.yul\":5793:5797   */\n      0x00\n        /* \"#utility.yul\":5816:5819   */\n      dup2\n        /* \"#utility.yul\":5808:5819   */\n      swap1\n      pop\n        /* \"#utility.yul\":5846:5850   */\n      0x20\n        /* \"#utility.yul\":5841:5844   */\n      dup3\n        /* \"#utility.yul\":5837:5851   */\n      add\n        /* \"#utility.yul\":5829:5851   */\n      swap1\n      pop\n        /* \"#utility.yul\":5726:5858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5864:5972   */\n    tag_282:\n        /* \"#utility.yul\":5941:5965   */\n      tag_366\n        /* \"#utility.yul\":5959:5964   */\n      dup2\n        /* \"#utility.yul\":5941:5965   */\n      tag_263\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5936:5939   */\n      dup3\n        /* \"#utility.yul\":5929:5966   */\n      mstore\n        /* \"#utility.yul\":5864:5972   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5978:6157   */\n    tag_283:\n        /* \"#utility.yul\":6047:6057   */\n      0x00\n        /* \"#utility.yul\":6068:6114   */\n      tag_368\n        /* \"#utility.yul\":6110:6113   */\n      dup4\n        /* \"#utility.yul\":6102:6108   */\n      dup4\n        /* \"#utility.yul\":6068:6114   */\n      tag_282\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6146:6150   */\n      0x20\n        /* \"#utility.yul\":6141:6144   */\n      dup4\n        /* \"#utility.yul\":6137:6151   */\n      add\n        /* \"#utility.yul\":6123:6151   */\n      swap1\n      pop\n        /* \"#utility.yul\":5978:6157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6163:6276   */\n    tag_284:\n        /* \"#utility.yul\":6233:6237   */\n      0x00\n        /* \"#utility.yul\":6265:6269   */\n      0x20\n        /* \"#utility.yul\":6260:6263   */\n      dup3\n        /* \"#utility.yul\":6256:6270   */\n      add\n        /* \"#utility.yul\":6248:6270   */\n      swap1\n      pop\n        /* \"#utility.yul\":6163:6276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6312:7044   */\n    tag_285:\n        /* \"#utility.yul\":6431:6434   */\n      0x00\n        /* \"#utility.yul\":6460:6514   */\n      tag_371\n        /* \"#utility.yul\":6508:6513   */\n      dup3\n        /* \"#utility.yul\":6460:6514   */\n      tag_279\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6530:6616   */\n      tag_372\n        /* \"#utility.yul\":6609:6615   */\n      dup2\n        /* \"#utility.yul\":6604:6607   */\n      dup6\n        /* \"#utility.yul\":6530:6616   */\n      tag_280\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6523:6616   */\n      swap4\n      pop\n        /* \"#utility.yul\":6640:6696   */\n      tag_373\n        /* \"#utility.yul\":6690:6695   */\n      dup4\n        /* \"#utility.yul\":6640:6696   */\n      tag_281\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6719:6726   */\n      dup1\n        /* \"#utility.yul\":6750:6751   */\n      0x00\n        /* \"#utility.yul\":6735:7019   */\n    tag_374:\n        /* \"#utility.yul\":6760:6766   */\n      dup4\n        /* \"#utility.yul\":6757:6758   */\n      dup2\n        /* \"#utility.yul\":6754:6767   */\n      lt\n        /* \"#utility.yul\":6735:7019   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":6836:6842   */\n      dup2\n        /* \"#utility.yul\":6830:6843   */\n      mload\n        /* \"#utility.yul\":6863:6926   */\n      tag_377\n        /* \"#utility.yul\":6922:6925   */\n      dup9\n        /* \"#utility.yul\":6907:6920   */\n      dup3\n        /* \"#utility.yul\":6863:6926   */\n      tag_283\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6856:6926   */\n      swap8\n      pop\n        /* \"#utility.yul\":6949:7009   */\n      tag_378\n        /* \"#utility.yul\":7002:7008   */\n      dup4\n        /* \"#utility.yul\":6949:7009   */\n      tag_284\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6939:7009   */\n      swap3\n      pop\n        /* \"#utility.yul\":6795:7019   */\n      pop\n        /* \"#utility.yul\":6782:6783   */\n      0x01\n        /* \"#utility.yul\":6779:6780   */\n      dup2\n        /* \"#utility.yul\":6775:6784   */\n      add\n        /* \"#utility.yul\":6770:6784   */\n      swap1\n      pop\n        /* \"#utility.yul\":6735:7019   */\n      jump(tag_374)\n    tag_376:\n        /* \"#utility.yul\":6739:6753   */\n      pop\n        /* \"#utility.yul\":7035:7038   */\n      dup6\n        /* \"#utility.yul\":7028:7038   */\n      swap4\n      pop\n        /* \"#utility.yul\":6436:7044   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6312:7044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7050:7423   */\n    tag_118:\n        /* \"#utility.yul\":7193:7197   */\n      0x00\n        /* \"#utility.yul\":7231:7233   */\n      0x20\n        /* \"#utility.yul\":7220:7229   */\n      dup3\n        /* \"#utility.yul\":7216:7234   */\n      add\n        /* \"#utility.yul\":7208:7234   */\n      swap1\n      pop\n        /* \"#utility.yul\":7280:7289   */\n      dup2\n        /* \"#utility.yul\":7274:7278   */\n      dup2\n        /* \"#utility.yul\":7270:7290   */\n      sub\n        /* \"#utility.yul\":7266:7267   */\n      0x00\n        /* \"#utility.yul\":7255:7264   */\n      dup4\n        /* \"#utility.yul\":7251:7268   */\n      add\n        /* \"#utility.yul\":7244:7291   */\n      mstore\n        /* \"#utility.yul\":7308:7416   */\n      tag_380\n        /* \"#utility.yul\":7411:7415   */\n      dup2\n        /* \"#utility.yul\":7402:7408   */\n      dup5\n        /* \"#utility.yul\":7308:7416   */\n      tag_285\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7300:7416   */\n      swap1\n      pop\n        /* \"#utility.yul\":7050:7423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7429:7903   */\n    tag_122:\n        /* \"#utility.yul\":7497:7503   */\n      0x00\n        /* \"#utility.yul\":7505:7511   */\n      dup1\n        /* \"#utility.yul\":7554:7556   */\n      0x40\n        /* \"#utility.yul\":7542:7551   */\n      dup4\n        /* \"#utility.yul\":7533:7540   */\n      dup6\n        /* \"#utility.yul\":7529:7552   */\n      sub\n        /* \"#utility.yul\":7525:7557   */\n      slt\n        /* \"#utility.yul\":7522:7641   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":7560:7639   */\n      tag_383\n      tag_260\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7522:7641   */\n    tag_382:\n        /* \"#utility.yul\":7680:7681   */\n      0x00\n        /* \"#utility.yul\":7705:7758   */\n      tag_384\n        /* \"#utility.yul\":7750:7757   */\n      dup6\n        /* \"#utility.yul\":7741:7747   */\n      dup3\n        /* \"#utility.yul\":7730:7739   */\n      dup7\n        /* \"#utility.yul\":7726:7748   */\n      add\n        /* \"#utility.yul\":7705:7758   */\n      tag_265\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7695:7758   */\n      swap3\n      pop\n        /* \"#utility.yul\":7651:7768   */\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x20\n        /* \"#utility.yul\":7833:7886   */\n      tag_385\n        /* \"#utility.yul\":7878:7885   */\n      dup6\n        /* \"#utility.yul\":7869:7875   */\n      dup3\n        /* \"#utility.yul\":7858:7867   */\n      dup7\n        /* \"#utility.yul\":7854:7876   */\n      add\n        /* \"#utility.yul\":7833:7886   */\n      tag_265\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7823:7886   */\n      swap2\n      pop\n        /* \"#utility.yul\":7778:7896   */\n      pop\n        /* \"#utility.yul\":7429:7903   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7909:8089   */\n    tag_286:\n        /* \"#utility.yul\":7957:8034   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7954:7955   */\n      0x00\n        /* \"#utility.yul\":7947:8035   */\n      mstore\n        /* \"#utility.yul\":8054:8058   */\n      0x22\n        /* \"#utility.yul\":8051:8052   */\n      0x04\n        /* \"#utility.yul\":8044:8059   */\n      mstore\n        /* \"#utility.yul\":8078:8082   */\n      0x24\n        /* \"#utility.yul\":8075:8076   */\n      0x00\n        /* \"#utility.yul\":8068:8083   */\n      revert\n        /* \"#utility.yul\":8095:8415   */\n    tag_128:\n        /* \"#utility.yul\":8139:8145   */\n      0x00\n        /* \"#utility.yul\":8176:8177   */\n      0x02\n        /* \"#utility.yul\":8170:8174   */\n      dup3\n        /* \"#utility.yul\":8166:8178   */\n      div\n        /* \"#utility.yul\":8156:8178   */\n      swap1\n      pop\n        /* \"#utility.yul\":8223:8224   */\n      0x01\n        /* \"#utility.yul\":8217:8221   */\n      dup3\n        /* \"#utility.yul\":8213:8225   */\n      and\n        /* \"#utility.yul\":8244:8262   */\n      dup1\n        /* \"#utility.yul\":8234:8315   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":8300:8304   */\n      0x7f\n        /* \"#utility.yul\":8292:8298   */\n      dup3\n        /* \"#utility.yul\":8288:8305   */\n      and\n        /* \"#utility.yul\":8278:8305   */\n      swap2\n      pop\n        /* \"#utility.yul\":8234:8315   */\n    tag_388:\n        /* \"#utility.yul\":8362:8364   */\n      0x20\n        /* \"#utility.yul\":8354:8360   */\n      dup3\n        /* \"#utility.yul\":8351:8365   */\n      lt\n        /* \"#utility.yul\":8331:8349   */\n      dup2\n        /* \"#utility.yul\":8328:8366   */\n      sub\n        /* \"#utility.yul\":8325:8409   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":8381:8399   */\n      tag_390\n      tag_286\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8325:8409   */\n    tag_389:\n        /* \"#utility.yul\":8146:8415   */\n      pop\n        /* \"#utility.yul\":8095:8415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8421:8581   */\n    tag_287:\n        /* \"#utility.yul\":8561:8573   */\n      0x4e6f74206f776e65722100000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8557:8558   */\n      0x00\n        /* \"#utility.yul\":8549:8555   */\n      dup3\n        /* \"#utility.yul\":8545:8559   */\n      add\n        /* \"#utility.yul\":8538:8574   */\n      mstore\n        /* \"#utility.yul\":8421:8581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8587:8953   */\n    tag_288:\n        /* \"#utility.yul\":8729:8732   */\n      0x00\n        /* \"#utility.yul\":8750:8817   */\n      tag_393\n        /* \"#utility.yul\":8814:8816   */\n      0x0a\n        /* \"#utility.yul\":8809:8812   */\n      dup4\n        /* \"#utility.yul\":8750:8817   */\n      tag_269\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8743:8817   */\n      swap2\n      pop\n        /* \"#utility.yul\":8826:8919   */\n      tag_394\n        /* \"#utility.yul\":8915:8918   */\n      dup3\n        /* \"#utility.yul\":8826:8919   */\n      tag_287\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8944:8946   */\n      0x20\n        /* \"#utility.yul\":8939:8942   */\n      dup3\n        /* \"#utility.yul\":8935:8947   */\n      add\n        /* \"#utility.yul\":8928:8947   */\n      swap1\n      pop\n        /* \"#utility.yul\":8587:8953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8959:9378   */\n    tag_141:\n        /* \"#utility.yul\":9125:9129   */\n      0x00\n        /* \"#utility.yul\":9163:9165   */\n      0x20\n        /* \"#utility.yul\":9152:9161   */\n      dup3\n        /* \"#utility.yul\":9148:9166   */\n      add\n        /* \"#utility.yul\":9140:9166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9212:9221   */\n      dup2\n        /* \"#utility.yul\":9206:9210   */\n      dup2\n        /* \"#utility.yul\":9202:9222   */\n      sub\n        /* \"#utility.yul\":9198:9199   */\n      0x00\n        /* \"#utility.yul\":9187:9196   */\n      dup4\n        /* \"#utility.yul\":9183:9200   */\n      add\n        /* \"#utility.yul\":9176:9223   */\n      mstore\n        /* \"#utility.yul\":9240:9371   */\n      tag_396\n        /* \"#utility.yul\":9366:9370   */\n      dup2\n        /* \"#utility.yul\":9240:9371   */\n      tag_288\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9232:9371   */\n      swap1\n      pop\n        /* \"#utility.yul\":8959:9378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9384:9564   */\n    tag_289:\n        /* \"#utility.yul\":9432:9509   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9429:9430   */\n      0x00\n        /* \"#utility.yul\":9422:9510   */\n      mstore\n        /* \"#utility.yul\":9529:9533   */\n      0x11\n        /* \"#utility.yul\":9526:9527   */\n      0x04\n        /* \"#utility.yul\":9519:9534   */\n      mstore\n        /* \"#utility.yul\":9553:9557   */\n      0x24\n        /* \"#utility.yul\":9550:9551   */\n      0x00\n        /* \"#utility.yul\":9543:9558   */\n      revert\n        /* \"#utility.yul\":9570:9980   */\n    tag_150:\n        /* \"#utility.yul\":9610:9617   */\n      0x00\n        /* \"#utility.yul\":9633:9653   */\n      tag_399\n        /* \"#utility.yul\":9651:9652   */\n      dup3\n        /* \"#utility.yul\":9633:9653   */\n      tag_266\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9628:9653   */\n      swap2\n      pop\n        /* \"#utility.yul\":9667:9687   */\n      tag_400\n        /* \"#utility.yul\":9685:9686   */\n      dup4\n        /* \"#utility.yul\":9667:9687   */\n      tag_266\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9662:9687   */\n      swap3\n      pop\n        /* \"#utility.yul\":9722:9723   */\n      dup3\n        /* \"#utility.yul\":9719:9720   */\n      dup3\n        /* \"#utility.yul\":9715:9724   */\n      mul\n        /* \"#utility.yul\":9744:9774   */\n      tag_401\n        /* \"#utility.yul\":9762:9773   */\n      dup2\n        /* \"#utility.yul\":9744:9774   */\n      tag_266\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9733:9774   */\n      swap2\n      pop\n        /* \"#utility.yul\":9923:9924   */\n      dup3\n        /* \"#utility.yul\":9914:9921   */\n      dup3\n        /* \"#utility.yul\":9910:9925   */\n      div\n        /* \"#utility.yul\":9907:9908   */\n      dup5\n        /* \"#utility.yul\":9904:9926   */\n      eq\n        /* \"#utility.yul\":9884:9885   */\n      dup4\n        /* \"#utility.yul\":9877:9886   */\n      iszero\n        /* \"#utility.yul\":9857:9940   */\n      or\n        /* \"#utility.yul\":9834:9973   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":9953:9971   */\n      tag_403\n      tag_289\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9834:9973   */\n    tag_402:\n        /* \"#utility.yul\":9618:9980   */\n      pop\n        /* \"#utility.yul\":9570:9980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9986:10161   */\n    tag_290:\n        /* \"#utility.yul\":10126:10153   */\n      0x41646472657373207a65726f206e6f7420616c6c6f7765642100000000000000\n        /* \"#utility.yul\":10122:10123   */\n      0x00\n        /* \"#utility.yul\":10114:10120   */\n      dup3\n        /* \"#utility.yul\":10110:10124   */\n      add\n        /* \"#utility.yul\":10103:10154   */\n      mstore\n        /* \"#utility.yul\":9986:10161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10167:10533   */\n    tag_291:\n        /* \"#utility.yul\":10309:10312   */\n      0x00\n        /* \"#utility.yul\":10330:10397   */\n      tag_406\n        /* \"#utility.yul\":10394:10396   */\n      0x19\n        /* \"#utility.yul\":10389:10392   */\n      dup4\n        /* \"#utility.yul\":10330:10397   */\n      tag_269\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10323:10397   */\n      swap2\n      pop\n        /* \"#utility.yul\":10406:10499   */\n      tag_407\n        /* \"#utility.yul\":10495:10498   */\n      dup3\n        /* \"#utility.yul\":10406:10499   */\n      tag_290\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10524:10526   */\n      0x20\n        /* \"#utility.yul\":10519:10522   */\n      dup3\n        /* \"#utility.yul\":10515:10527   */\n      add\n        /* \"#utility.yul\":10508:10527   */\n      swap1\n      pop\n        /* \"#utility.yul\":10167:10533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10539:10958   */\n    tag_157:\n        /* \"#utility.yul\":10705:10709   */\n      0x00\n        /* \"#utility.yul\":10743:10745   */\n      0x20\n        /* \"#utility.yul\":10732:10741   */\n      dup3\n        /* \"#utility.yul\":10728:10746   */\n      add\n        /* \"#utility.yul\":10720:10746   */\n      swap1\n      pop\n        /* \"#utility.yul\":10792:10801   */\n      dup2\n        /* \"#utility.yul\":10786:10790   */\n      dup2\n        /* \"#utility.yul\":10782:10802   */\n      sub\n        /* \"#utility.yul\":10778:10779   */\n      0x00\n        /* \"#utility.yul\":10767:10776   */\n      dup4\n        /* \"#utility.yul\":10763:10780   */\n      add\n        /* \"#utility.yul\":10756:10803   */\n      mstore\n        /* \"#utility.yul\":10820:10951   */\n      tag_409\n        /* \"#utility.yul\":10946:10950   */\n      dup2\n        /* \"#utility.yul\":10820:10951   */\n      tag_291\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10812:10951   */\n      swap1\n      pop\n        /* \"#utility.yul\":10539:10958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10964:11130   */\n    tag_292:\n        /* \"#utility.yul\":11104:11122   */\n      0x4164647265737320436c61696d65642100000000000000000000000000000000\n        /* \"#utility.yul\":11100:11101   */\n      0x00\n        /* \"#utility.yul\":11092:11098   */\n      dup3\n        /* \"#utility.yul\":11088:11102   */\n      add\n        /* \"#utility.yul\":11081:11123   */\n      mstore\n        /* \"#utility.yul\":10964:11130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11136:11502   */\n    tag_293:\n        /* \"#utility.yul\":11278:11281   */\n      0x00\n        /* \"#utility.yul\":11299:11366   */\n      tag_412\n        /* \"#utility.yul\":11363:11365   */\n      0x10\n        /* \"#utility.yul\":11358:11361   */\n      dup4\n        /* \"#utility.yul\":11299:11366   */\n      tag_269\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11292:11366   */\n      swap2\n      pop\n        /* \"#utility.yul\":11375:11468   */\n      tag_413\n        /* \"#utility.yul\":11464:11467   */\n      dup3\n        /* \"#utility.yul\":11375:11468   */\n      tag_292\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11493:11495   */\n      0x20\n        /* \"#utility.yul\":11488:11491   */\n      dup3\n        /* \"#utility.yul\":11484:11496   */\n      add\n        /* \"#utility.yul\":11477:11496   */\n      swap1\n      pop\n        /* \"#utility.yul\":11136:11502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11508:11927   */\n    tag_175:\n        /* \"#utility.yul\":11674:11678   */\n      0x00\n        /* \"#utility.yul\":11712:11714   */\n      0x20\n        /* \"#utility.yul\":11701:11710   */\n      dup3\n        /* \"#utility.yul\":11697:11715   */\n      add\n        /* \"#utility.yul\":11689:11715   */\n      swap1\n      pop\n        /* \"#utility.yul\":11761:11770   */\n      dup2\n        /* \"#utility.yul\":11755:11759   */\n      dup2\n        /* \"#utility.yul\":11751:11771   */\n      sub\n        /* \"#utility.yul\":11747:11748   */\n      0x00\n        /* \"#utility.yul\":11736:11745   */\n      dup4\n        /* \"#utility.yul\":11732:11749   */\n      add\n        /* \"#utility.yul\":11725:11772   */\n      mstore\n        /* \"#utility.yul\":11789:11920   */\n      tag_415\n        /* \"#utility.yul\":11915:11919   */\n      dup2\n        /* \"#utility.yul\":11789:11920   */\n      tag_293\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11781:11920   */\n      swap1\n      pop\n        /* \"#utility.yul\":11508:11927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11933:12100   */\n    tag_294:\n        /* \"#utility.yul\":12073:12092   */\n      0x546f6b656e206e6f7420656e6f75676821000000000000000000000000000000\n        /* \"#utility.yul\":12069:12070   */\n      0x00\n        /* \"#utility.yul\":12061:12067   */\n      dup3\n        /* \"#utility.yul\":12057:12071   */\n      add\n        /* \"#utility.yul\":12050:12093   */\n      mstore\n        /* \"#utility.yul\":11933:12100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12106:12472   */\n    tag_295:\n        /* \"#utility.yul\":12248:12251   */\n      0x00\n        /* \"#utility.yul\":12269:12336   */\n      tag_418\n        /* \"#utility.yul\":12333:12335   */\n      0x11\n        /* \"#utility.yul\":12328:12331   */\n      dup4\n        /* \"#utility.yul\":12269:12336   */\n      tag_269\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12262:12336   */\n      swap2\n      pop\n        /* \"#utility.yul\":12345:12438   */\n      tag_419\n        /* \"#utility.yul\":12434:12437   */\n      dup3\n        /* \"#utility.yul\":12345:12438   */\n      tag_294\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12463:12465   */\n      0x20\n        /* \"#utility.yul\":12458:12461   */\n      dup3\n        /* \"#utility.yul\":12454:12466   */\n      add\n        /* \"#utility.yul\":12447:12466   */\n      swap1\n      pop\n        /* \"#utility.yul\":12106:12472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12478:12897   */\n    tag_182:\n        /* \"#utility.yul\":12644:12648   */\n      0x00\n        /* \"#utility.yul\":12682:12684   */\n      0x20\n        /* \"#utility.yul\":12671:12680   */\n      dup3\n        /* \"#utility.yul\":12667:12685   */\n      add\n        /* \"#utility.yul\":12659:12685   */\n      swap1\n      pop\n        /* \"#utility.yul\":12731:12740   */\n      dup2\n        /* \"#utility.yul\":12725:12729   */\n      dup2\n        /* \"#utility.yul\":12721:12741   */\n      sub\n        /* \"#utility.yul\":12717:12718   */\n      0x00\n        /* \"#utility.yul\":12706:12715   */\n      dup4\n        /* \"#utility.yul\":12702:12719   */\n      add\n        /* \"#utility.yul\":12695:12742   */\n      mstore\n        /* \"#utility.yul\":12759:12890   */\n      tag_421\n        /* \"#utility.yul\":12885:12889   */\n      dup2\n        /* \"#utility.yul\":12759:12890   */\n      tag_295\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12751:12890   */\n      swap1\n      pop\n        /* \"#utility.yul\":12478:12897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12903:13083   */\n    tag_296:\n        /* \"#utility.yul\":12951:13028   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12948:12949   */\n      0x00\n        /* \"#utility.yul\":12941:13029   */\n      mstore\n        /* \"#utility.yul\":13048:13052   */\n      0x12\n        /* \"#utility.yul\":13045:13046   */\n      0x04\n        /* \"#utility.yul\":13038:13053   */\n      mstore\n        /* \"#utility.yul\":13072:13076   */\n      0x24\n        /* \"#utility.yul\":13069:13070   */\n      0x00\n        /* \"#utility.yul\":13062:13077   */\n      revert\n        /* \"#utility.yul\":13089:13274   */\n    tag_185:\n        /* \"#utility.yul\":13129:13130   */\n      0x00\n        /* \"#utility.yul\":13146:13166   */\n      tag_424\n        /* \"#utility.yul\":13164:13165   */\n      dup3\n        /* \"#utility.yul\":13146:13166   */\n      tag_266\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13141:13166   */\n      swap2\n      pop\n        /* \"#utility.yul\":13180:13200   */\n      tag_425\n        /* \"#utility.yul\":13198:13199   */\n      dup4\n        /* \"#utility.yul\":13180:13200   */\n      tag_266\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13175:13200   */\n      swap3\n      pop\n        /* \"#utility.yul\":13219:13220   */\n      dup3\n        /* \"#utility.yul\":13209:13244   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":13224:13242   */\n      tag_427\n      tag_296\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13209:13244   */\n    tag_426:\n        /* \"#utility.yul\":13266:13267   */\n      dup3\n        /* \"#utility.yul\":13263:13264   */\n      dup3\n        /* \"#utility.yul\":13259:13268   */\n      div\n        /* \"#utility.yul\":13254:13268   */\n      swap1\n      pop\n        /* \"#utility.yul\":13089:13274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13280:13447   */\n    tag_297:\n        /* \"#utility.yul\":13420:13439   */\n      0x546f6b656e206e6f7420456e6f75676821000000000000000000000000000000\n        /* \"#utility.yul\":13416:13417   */\n      0x00\n        /* \"#utility.yul\":13408:13414   */\n      dup3\n        /* \"#utility.yul\":13404:13418   */\n      add\n        /* \"#utility.yul\":13397:13440   */\n      mstore\n        /* \"#utility.yul\":13280:13447   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13453:13819   */\n    tag_298:\n        /* \"#utility.yul\":13595:13598   */\n      0x00\n        /* \"#utility.yul\":13616:13683   */\n      tag_430\n        /* \"#utility.yul\":13680:13682   */\n      0x11\n        /* \"#utility.yul\":13675:13678   */\n      dup4\n        /* \"#utility.yul\":13616:13683   */\n      tag_269\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13609:13683   */\n      swap2\n      pop\n        /* \"#utility.yul\":13692:13785   */\n      tag_431\n        /* \"#utility.yul\":13781:13784   */\n      dup3\n        /* \"#utility.yul\":13692:13785   */\n      tag_297\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":13810:13812   */\n      0x20\n        /* \"#utility.yul\":13805:13808   */\n      dup3\n        /* \"#utility.yul\":13801:13813   */\n      add\n        /* \"#utility.yul\":13794:13813   */\n      swap1\n      pop\n        /* \"#utility.yul\":13453:13819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13825:14244   */\n    tag_205:\n        /* \"#utility.yul\":13991:13995   */\n      0x00\n        /* \"#utility.yul\":14029:14031   */\n      0x20\n        /* \"#utility.yul\":14018:14027   */\n      dup3\n        /* \"#utility.yul\":14014:14032   */\n      add\n        /* \"#utility.yul\":14006:14032   */\n      swap1\n      pop\n        /* \"#utility.yul\":14078:14087   */\n      dup2\n        /* \"#utility.yul\":14072:14076   */\n      dup2\n        /* \"#utility.yul\":14068:14088   */\n      sub\n        /* \"#utility.yul\":14064:14065   */\n      0x00\n        /* \"#utility.yul\":14053:14062   */\n      dup4\n        /* \"#utility.yul\":14049:14066   */\n      add\n        /* \"#utility.yul\":14042:14089   */\n      mstore\n        /* \"#utility.yul\":14106:14237   */\n      tag_433\n        /* \"#utility.yul\":14232:14236   */\n      dup2\n        /* \"#utility.yul\":14106:14237   */\n      tag_298\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14098:14237   */\n      swap1\n      pop\n        /* \"#utility.yul\":13825:14244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14250:14368   */\n    tag_299:\n        /* \"#utility.yul\":14337:14361   */\n      tag_435\n        /* \"#utility.yul\":14355:14360   */\n      dup2\n        /* \"#utility.yul\":14337:14361   */\n      tag_263\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14332:14335   */\n      dup3\n        /* \"#utility.yul\":14325:14362   */\n      mstore\n        /* \"#utility.yul\":14250:14368   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14374:14596   */\n    tag_222:\n        /* \"#utility.yul\":14467:14471   */\n      0x00\n        /* \"#utility.yul\":14505:14507   */\n      0x20\n        /* \"#utility.yul\":14494:14503   */\n      dup3\n        /* \"#utility.yul\":14490:14508   */\n      add\n        /* \"#utility.yul\":14482:14508   */\n      swap1\n      pop\n        /* \"#utility.yul\":14518:14589   */\n      tag_437\n        /* \"#utility.yul\":14586:14587   */\n      0x00\n        /* \"#utility.yul\":14575:14584   */\n      dup4\n        /* \"#utility.yul\":14571:14588   */\n      add\n        /* \"#utility.yul\":14562:14568   */\n      dup5\n        /* \"#utility.yul\":14518:14589   */\n      tag_299\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14374:14596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14602:15044   */\n    tag_236:\n        /* \"#utility.yul\":14751:14755   */\n      0x00\n        /* \"#utility.yul\":14789:14791   */\n      0x60\n        /* \"#utility.yul\":14778:14787   */\n      dup3\n        /* \"#utility.yul\":14774:14792   */\n      add\n        /* \"#utility.yul\":14766:14792   */\n      swap1\n      pop\n        /* \"#utility.yul\":14802:14873   */\n      tag_439\n        /* \"#utility.yul\":14870:14871   */\n      0x00\n        /* \"#utility.yul\":14859:14868   */\n      dup4\n        /* \"#utility.yul\":14855:14872   */\n      add\n        /* \"#utility.yul\":14846:14852   */\n      dup7\n        /* \"#utility.yul\":14802:14873   */\n      tag_299\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":14883:14955   */\n      tag_440\n        /* \"#utility.yul\":14951:14953   */\n      0x20\n        /* \"#utility.yul\":14940:14949   */\n      dup4\n        /* \"#utility.yul\":14936:14954   */\n      add\n        /* \"#utility.yul\":14927:14933   */\n      dup6\n        /* \"#utility.yul\":14883:14955   */\n      tag_267\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14965:15037   */\n      tag_441\n        /* \"#utility.yul\":15033:15035   */\n      0x40\n        /* \"#utility.yul\":15022:15031   */\n      dup4\n        /* \"#utility.yul\":15018:15036   */\n      add\n        /* \"#utility.yul\":15009:15015   */\n      dup5\n        /* \"#utility.yul\":14965:15037   */\n      tag_267\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":14602:15044   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15050:15241   */\n    tag_252:\n        /* \"#utility.yul\":15090:15093   */\n      0x00\n        /* \"#utility.yul\":15109:15129   */\n      tag_443\n        /* \"#utility.yul\":15127:15128   */\n      dup3\n        /* \"#utility.yul\":15109:15129   */\n      tag_266\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15104:15129   */\n      swap2\n      pop\n        /* \"#utility.yul\":15143:15163   */\n      tag_444\n        /* \"#utility.yul\":15161:15162   */\n      dup4\n        /* \"#utility.yul\":15143:15163   */\n      tag_266\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15138:15163   */\n      swap3\n      pop\n        /* \"#utility.yul\":15186:15187   */\n      dup3\n        /* \"#utility.yul\":15183:15184   */\n      dup3\n        /* \"#utility.yul\":15179:15188   */\n      add\n        /* \"#utility.yul\":15172:15188   */\n      swap1\n      pop\n        /* \"#utility.yul\":15207:15210   */\n      dup1\n        /* \"#utility.yul\":15204:15205   */\n      dup3\n        /* \"#utility.yul\":15201:15211   */\n      gt\n        /* \"#utility.yul\":15198:15234   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":15214:15232   */\n      tag_446\n      tag_289\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":15198:15234   */\n    tag_445:\n        /* \"#utility.yul\":15050:15241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220acf72ca333ac27c4b1a3024514972de62bcdc94bf8bd61b97a22af67d3b0a98264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_500": {
									"entryPoint": null,
									"id": 500,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_803": {
									"entryPoint": 261,
									"id": 803,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_770": {
									"entryPoint": 394,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10652:6",
										"nodeType": "YulBlock",
										"src": "0:10652:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2684:739:6",
													"nodeType": "YulBlock",
													"src": "2684:739:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:6",
																"nodeType": "YulBlock",
																"src": "2730:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:6"
																			},
																			"nativeSrc": "2732:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:6"
																		},
																		"nativeSrc": "2732:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:6"
																		},
																		"nativeSrc": "2701:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:6"
																},
																"nativeSrc": "2697:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:6"
															},
															"nativeSrc": "2694:119:6",
															"nodeType": "YulIf",
															"src": "2694:119:6"
														},
														{
															"nativeSrc": "2823:291:6",
															"nodeType": "YulBlock",
															"src": "2823:291:6",
															"statements": [
																{
																	"nativeSrc": "2838:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:6"
																				},
																				"nativeSrc": "2858:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:6"
																		},
																		"nativeSrc": "2852:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:6",
																		"nodeType": "YulBlock",
																		"src": "2923:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:6"
																					},
																					"nativeSrc": "2925:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:6"
																				},
																				"nativeSrc": "2925:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:6",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:6"
																		},
																		"nativeSrc": "2892:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:6"
																	},
																	"nativeSrc": "2889:117:6",
																	"nodeType": "YulIf",
																	"src": "2889:117:6"
																},
																{
																	"nativeSrc": "3020:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:6"
																				},
																				"nativeSrc": "3072:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:6"
																		},
																		"nativeSrc": "3030:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:6",
															"nodeType": "YulBlock",
															"src": "3124:292:6",
															"statements": [
																{
																	"nativeSrc": "3139:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:6"
																				},
																				"nativeSrc": "3159:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:6"
																		},
																		"nativeSrc": "3153:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:6",
																		"nodeType": "YulBlock",
																		"src": "3225:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:6"
																					},
																					"nativeSrc": "3227:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:6"
																				},
																				"nativeSrc": "3227:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:6"
																		},
																		"nativeSrc": "3194:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:6"
																	},
																	"nativeSrc": "3191:117:6",
																	"nodeType": "YulIf",
																	"src": "3191:117:6"
																},
																{
																	"nativeSrc": "3322:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:6"
																				},
																				"nativeSrc": "3374:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:6"
																		},
																		"nativeSrc": "3332:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:6",
														"nodeType": "YulTypedName",
														"src": "2646:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:6",
														"nodeType": "YulTypedName",
														"src": "2657:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:6",
														"nodeType": "YulTypedName",
														"src": "2669:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:6",
														"nodeType": "YulTypedName",
														"src": "2677:6:6",
														"type": ""
													}
												],
												"src": "2570:853:6"
											},
											{
												"body": {
													"nativeSrc": "3488:40:6",
													"nodeType": "YulBlock",
													"src": "3488:40:6",
													"statements": [
														{
															"nativeSrc": "3499:22:6",
															"nodeType": "YulAssignment",
															"src": "3499:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:6"
																},
																"nativeSrc": "3509:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:6",
														"nodeType": "YulTypedName",
														"src": "3471:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:6",
														"nodeType": "YulTypedName",
														"src": "3481:6:6",
														"type": ""
													}
												],
												"src": "3429:99:6"
											},
											{
												"body": {
													"nativeSrc": "3562:152:6",
													"nodeType": "YulBlock",
													"src": "3562:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:6",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:6"
																},
																"nativeSrc": "3572:88:6",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:6"
															},
															"nativeSrc": "3572:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:6"
																},
																"nativeSrc": "3669:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:6"
															},
															"nativeSrc": "3669:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:6"
																},
																"nativeSrc": "3693:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:6"
															},
															"nativeSrc": "3693:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:6"
											},
											{
												"body": {
													"nativeSrc": "3771:269:6",
													"nodeType": "YulBlock",
													"src": "3771:269:6",
													"statements": [
														{
															"nativeSrc": "3781:22:6",
															"nodeType": "YulAssignment",
															"src": "3781:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:6"
																},
																"nativeSrc": "3791:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:6"
																}
															]
														},
														{
															"nativeSrc": "3812:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:6"
																},
																"nativeSrc": "3838:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:6",
																"nodeType": "YulBlock",
																"src": "3889:51:6",
																"statements": [
																	{
																		"nativeSrc": "3903:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:6"
																			},
																			"nativeSrc": "3913:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:6"
																},
																"nativeSrc": "3862:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:6"
															},
															"nativeSrc": "3859:81:6",
															"nodeType": "YulIf",
															"src": "3859:81:6"
														},
														{
															"body": {
																"nativeSrc": "3992:42:6",
																"nodeType": "YulBlock",
																"src": "3992:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:6"
																			},
																			"nativeSrc": "4006:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:6"
																		},
																		"nativeSrc": "4006:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:6"
																		},
																		"nativeSrc": "3976:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:6"
																},
																"nativeSrc": "3953:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:6"
															},
															"nativeSrc": "3950:84:6",
															"nodeType": "YulIf",
															"src": "3950:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:6",
														"nodeType": "YulTypedName",
														"src": "3755:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:6",
														"nodeType": "YulTypedName",
														"src": "3764:6:6",
														"type": ""
													}
												],
												"src": "3720:320:6"
											},
											{
												"body": {
													"nativeSrc": "4100:87:6",
													"nodeType": "YulBlock",
													"src": "4100:87:6",
													"statements": [
														{
															"nativeSrc": "4110:11:6",
															"nodeType": "YulAssignment",
															"src": "4110:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:6",
																"nodeType": "YulIdentifier",
																"src": "4118:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:6"
																},
																"nativeSrc": "4131:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:6"
															},
															"nativeSrc": "4131:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:6"
														},
														{
															"nativeSrc": "4154:26:6",
															"nodeType": "YulAssignment",
															"src": "4154:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:6"
																},
																"nativeSrc": "4162:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:6",
														"nodeType": "YulTypedName",
														"src": "4087:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:6",
														"nodeType": "YulTypedName",
														"src": "4095:4:6",
														"type": ""
													}
												],
												"src": "4046:141:6"
											},
											{
												"body": {
													"nativeSrc": "4237:49:6",
													"nodeType": "YulBlock",
													"src": "4237:49:6",
													"statements": [
														{
															"nativeSrc": "4247:33:6",
															"nodeType": "YulAssignment",
															"src": "4247:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:6"
																		},
																		"nativeSrc": "4261:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:6"
																},
																"nativeSrc": "4257:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:6",
														"nodeType": "YulTypedName",
														"src": "4220:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:6",
														"nodeType": "YulTypedName",
														"src": "4230:6:6",
														"type": ""
													}
												],
												"src": "4193:93:6"
											},
											{
												"body": {
													"nativeSrc": "4345:54:6",
													"nodeType": "YulBlock",
													"src": "4345:54:6",
													"statements": [
														{
															"nativeSrc": "4355:37:6",
															"nodeType": "YulAssignment",
															"src": "4355:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:6"
																},
																"nativeSrc": "4376:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:6",
														"nodeType": "YulTypedName",
														"src": "4320:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:6",
														"nodeType": "YulTypedName",
														"src": "4326:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:6",
														"nodeType": "YulTypedName",
														"src": "4336:8:6",
														"type": ""
													}
												],
												"src": "4292:107:6"
											},
											{
												"body": {
													"nativeSrc": "4481:317:6",
													"nodeType": "YulBlock",
													"src": "4481:317:6",
													"statements": [
														{
															"nativeSrc": "4491:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:6"
																},
																"nativeSrc": "4508:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:6",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:6"
																},
																"nativeSrc": "4547:97:6",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:6",
															"nodeType": "YulAssignment",
															"src": "4653:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:6"
																},
																"nativeSrc": "4665:39:6",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:6"
																}
															]
														},
														{
															"nativeSrc": "4713:30:6",
															"nodeType": "YulAssignment",
															"src": "4713:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:6"
																		},
																		"nativeSrc": "4733:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:6"
																},
																"nativeSrc": "4722:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:6"
																}
															]
														},
														{
															"nativeSrc": "4752:40:6",
															"nodeType": "YulAssignment",
															"src": "4752:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:6"
																		},
																		"nativeSrc": "4772:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:6"
																},
																"nativeSrc": "4762:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:6",
														"nodeType": "YulTypedName",
														"src": "4442:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:6",
														"nodeType": "YulTypedName",
														"src": "4449:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:6",
														"nodeType": "YulTypedName",
														"src": "4461:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:6",
														"nodeType": "YulTypedName",
														"src": "4474:6:6",
														"type": ""
													}
												],
												"src": "4405:393:6"
											},
											{
												"body": {
													"nativeSrc": "4849:32:6",
													"nodeType": "YulBlock",
													"src": "4849:32:6",
													"statements": [
														{
															"nativeSrc": "4859:16:6",
															"nodeType": "YulAssignment",
															"src": "4859:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:6",
																"nodeType": "YulIdentifier",
																"src": "4870:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:6",
														"nodeType": "YulTypedName",
														"src": "4831:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:6",
														"nodeType": "YulTypedName",
														"src": "4841:7:6",
														"type": ""
													}
												],
												"src": "4804:77:6"
											},
											{
												"body": {
													"nativeSrc": "4919:28:6",
													"nodeType": "YulBlock",
													"src": "4919:28:6",
													"statements": [
														{
															"nativeSrc": "4929:12:6",
															"nodeType": "YulAssignment",
															"src": "4929:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:6",
																"nodeType": "YulIdentifier",
																"src": "4936:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:6",
														"nodeType": "YulTypedName",
														"src": "4905:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:6",
														"nodeType": "YulTypedName",
														"src": "4915:3:6",
														"type": ""
													}
												],
												"src": "4887:60:6"
											},
											{
												"body": {
													"nativeSrc": "5013:82:6",
													"nodeType": "YulBlock",
													"src": "5013:82:6",
													"statements": [
														{
															"nativeSrc": "5023:66:6",
															"nodeType": "YulAssignment",
															"src": "5023:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:6"
																				},
																				"nativeSrc": "5063:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:6"
																		},
																		"nativeSrc": "5054:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:6"
																},
																"nativeSrc": "5036:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:6",
														"nodeType": "YulTypedName",
														"src": "4993:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:6",
														"nodeType": "YulTypedName",
														"src": "5003:9:6",
														"type": ""
													}
												],
												"src": "4953:142:6"
											},
											{
												"body": {
													"nativeSrc": "5148:28:6",
													"nodeType": "YulBlock",
													"src": "5148:28:6",
													"statements": [
														{
															"nativeSrc": "5158:12:6",
															"nodeType": "YulAssignment",
															"src": "5158:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:6",
																"nodeType": "YulIdentifier",
																"src": "5165:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:6",
														"nodeType": "YulTypedName",
														"src": "5134:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:6",
														"nodeType": "YulTypedName",
														"src": "5144:3:6",
														"type": ""
													}
												],
												"src": "5101:75:6"
											},
											{
												"body": {
													"nativeSrc": "5258:193:6",
													"nodeType": "YulBlock",
													"src": "5258:193:6",
													"statements": [
														{
															"nativeSrc": "5268:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:6"
																},
																"nativeSrc": "5292:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:6",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:6"
																				},
																				"nativeSrc": "5381:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:6"
																				},
																				"nativeSrc": "5402:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:6"
																		},
																		"nativeSrc": "5353:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:6"
																},
																"nativeSrc": "5340:105:6",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:6"
															},
															"nativeSrc": "5340:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:6",
														"nodeType": "YulTypedName",
														"src": "5235:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:6",
														"nodeType": "YulTypedName",
														"src": "5241:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:6",
														"nodeType": "YulTypedName",
														"src": "5249:7:6",
														"type": ""
													}
												],
												"src": "5182:269:6"
											},
											{
												"body": {
													"nativeSrc": "5506:24:6",
													"nodeType": "YulBlock",
													"src": "5506:24:6",
													"statements": [
														{
															"nativeSrc": "5516:8:6",
															"nodeType": "YulAssignment",
															"src": "5516:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:6",
																"nodeType": "YulLiteral",
																"src": "5523:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:6",
														"nodeType": "YulTypedName",
														"src": "5502:3:6",
														"type": ""
													}
												],
												"src": "5457:73:6"
											},
											{
												"body": {
													"nativeSrc": "5589:136:6",
													"nodeType": "YulBlock",
													"src": "5589:136:6",
													"statements": [
														{
															"nativeSrc": "5599:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:6"
																},
																"nativeSrc": "5613:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:6"
																},
																"nativeSrc": "5654:65:6",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:6"
															},
															"nativeSrc": "5654:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:6",
														"nodeType": "YulTypedName",
														"src": "5575:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:6",
														"nodeType": "YulTypedName",
														"src": "5581:6:6",
														"type": ""
													}
												],
												"src": "5536:189:6"
											},
											{
												"body": {
													"nativeSrc": "5781:136:6",
													"nodeType": "YulBlock",
													"src": "5781:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:6",
																"nodeType": "YulBlock",
																"src": "5848:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:6"
																			},
																			"nativeSrc": "5862:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:6"
																		},
																		"nativeSrc": "5862:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:6"
																},
																"nativeSrc": "5798:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:6"
															},
															"nativeSrc": "5791:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:6",
																"nodeType": "YulBlock",
																"src": "5813:26:6",
																"statements": [
																	{
																		"nativeSrc": "5815:22:6",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:6"
																			},
																			"nativeSrc": "5824:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:6",
																"nodeType": "YulBlock",
																"src": "5795:2:6",
																"statements": []
															},
															"src": "5791:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:6",
														"nodeType": "YulTypedName",
														"src": "5769:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:6",
														"nodeType": "YulTypedName",
														"src": "5776:3:6",
														"type": ""
													}
												],
												"src": "5731:186:6"
											},
											{
												"body": {
													"nativeSrc": "6002:464:6",
													"nodeType": "YulBlock",
													"src": "6002:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:6",
																"nodeType": "YulBlock",
																"src": "6028:431:6",
																"statements": [
																	{
																		"nativeSrc": "6042:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:6"
																			},
																			"nativeSrc": "6058:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:6"
																					},
																					"nativeSrc": "6142:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:6"
																			},
																			"nativeSrc": "6128:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:6",
																			"nodeType": "YulBlock",
																			"src": "6329:27:6",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:6",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:6",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:6"
																			},
																			"nativeSrc": "6310:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:6"
																		},
																		"nativeSrc": "6307:49:6",
																		"nodeType": "YulIf",
																		"src": "6307:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:6"
																							},
																							"nativeSrc": "6425:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:6"
																					},
																					"nativeSrc": "6411:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:6"
																			},
																			"nativeSrc": "6369:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:6"
																		},
																		"nativeSrc": "6369:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:6"
																},
																"nativeSrc": "6016:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:6"
															},
															"nativeSrc": "6013:446:6",
															"nodeType": "YulIf",
															"src": "6013:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:6",
														"nodeType": "YulTypedName",
														"src": "5978:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:6",
														"nodeType": "YulTypedName",
														"src": "5985:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:6",
														"nodeType": "YulTypedName",
														"src": "5990:10:6",
														"type": ""
													}
												],
												"src": "5923:543:6"
											},
											{
												"body": {
													"nativeSrc": "6535:54:6",
													"nodeType": "YulBlock",
													"src": "6535:54:6",
													"statements": [
														{
															"nativeSrc": "6545:37:6",
															"nodeType": "YulAssignment",
															"src": "6545:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:6"
																},
																"nativeSrc": "6566:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:6",
														"nodeType": "YulTypedName",
														"src": "6510:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:6",
														"nodeType": "YulTypedName",
														"src": "6516:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:6",
														"nodeType": "YulTypedName",
														"src": "6526:8:6",
														"type": ""
													}
												],
												"src": "6472:117:6"
											},
											{
												"body": {
													"nativeSrc": "6646:118:6",
													"nodeType": "YulBlock",
													"src": "6646:118:6",
													"statements": [
														{
															"nativeSrc": "6656:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:6"
																				},
																				"nativeSrc": "6701:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:6"
																				},
																				"nativeSrc": "6716:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:6"
																		},
																		"nativeSrc": "6672:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:6"
																},
																"nativeSrc": "6668:56:6",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:6",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:6",
															"nodeType": "YulAssignment",
															"src": "6733:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:6"
																},
																"nativeSrc": "6743:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:6",
														"nodeType": "YulTypedName",
														"src": "6623:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:6",
														"nodeType": "YulTypedName",
														"src": "6629:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:6",
														"nodeType": "YulTypedName",
														"src": "6639:6:6",
														"type": ""
													}
												],
												"src": "6595:169:6"
											},
											{
												"body": {
													"nativeSrc": "6850:214:6",
													"nodeType": "YulBlock",
													"src": "6850:214:6",
													"statements": [
														{
															"nativeSrc": "6983:37:6",
															"nodeType": "YulAssignment",
															"src": "6983:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:6"
																},
																"nativeSrc": "6991:29:6",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:6"
																}
															]
														},
														{
															"nativeSrc": "7029:29:6",
															"nodeType": "YulAssignment",
															"src": "7029:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:6"
																		},
																		"nativeSrc": "7046:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:6"
																},
																"nativeSrc": "7037:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:6",
														"nodeType": "YulTypedName",
														"src": "6831:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:6",
														"nodeType": "YulTypedName",
														"src": "6837:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:6",
														"nodeType": "YulTypedName",
														"src": "6845:4:6",
														"type": ""
													}
												],
												"src": "6769:295:6"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:6",
													"nodeType": "YulBlock",
													"src": "7161:1303:6",
													"statements": [
														{
															"nativeSrc": "7172:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:6"
																},
																"nativeSrc": "7186:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:6",
																"nodeType": "YulBlock",
																"src": "7308:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:6"
																			},
																			"nativeSrc": "7310:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:6"
																		},
																		"nativeSrc": "7310:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:6"
																},
																"nativeSrc": "7277:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:6"
															},
															"nativeSrc": "7274:56:6",
															"nodeType": "YulIf",
															"src": "7274:56:6"
														},
														{
															"nativeSrc": "7340:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:6"
																		},
																		"nativeSrc": "7380:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:6"
																},
																"nativeSrc": "7354:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:6"
																},
																"nativeSrc": "7439:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:6"
															},
															"nativeSrc": "7439:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:6"
														},
														{
															"nativeSrc": "7516:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:6",
																"nodeType": "YulLiteral",
																"src": "7533:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:6",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:6",
															"nodeType": "YulAssignment",
															"src": "7544:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:6",
																"nodeType": "YulLiteral",
																"src": "7557:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:6",
																		"nodeType": "YulBlock",
																		"src": "7608:611:6",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:6",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:6"
																							},
																							"nativeSrc": "7649:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:6"
																					},
																					"nativeSrc": "7637:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:6",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:6"
																					},
																					"nativeSrc": "7687:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:6",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:6",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:6",
																					"nodeType": "YulBlock",
																					"src": "7805:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:6"
																												},
																												"nativeSrc": "7844:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:6"
																										},
																										"nativeSrc": "7838:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:6"
																								},
																								"nativeSrc": "7823:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:6"
																							},
																							"nativeSrc": "7823:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:6"
																						},
																						{
																							"nativeSrc": "7882:24:6",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:6",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:6"
																								},
																								"nativeSrc": "7892:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:6",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:6",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:6"
																								},
																								"nativeSrc": "7936:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:6"
																					},
																					"nativeSrc": "7768:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:6"
																				},
																				"nativeSrc": "7760:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:6",
																					"nodeType": "YulBlock",
																					"src": "7783:21:6",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:6",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:6",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:6"
																								},
																								"nativeSrc": "7790:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:6",
																					"nodeType": "YulBlock",
																					"src": "7764:3:6",
																					"statements": []
																				},
																				"src": "7760:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:6",
																					"nodeType": "YulBlock",
																					"src": "8004:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:6"
																										},
																										"nativeSrc": "8045:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:6"
																								},
																								"nativeSrc": "8039:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:6"
																												},
																												"nativeSrc": "8127:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:6"
																										},
																										"nativeSrc": "8097:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:6"
																								},
																								"nativeSrc": "8082:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:6"
																							},
																							"nativeSrc": "8082:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:6"
																					},
																					"nativeSrc": "7984:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:6"
																				},
																				"nativeSrc": "7981:179:6",
																				"nodeType": "YulIf",
																				"src": "7981:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:6",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:6"
																									},
																									"nativeSrc": "8190:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:6",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:6"
																							},
																							"nativeSrc": "8186:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:6"
																					},
																					"nativeSrc": "8173:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:6"
																				},
																				"nativeSrc": "8173:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:6"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:6",
																	"nodeType": "YulCase",
																	"src": "7601:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:6",
																		"nodeType": "YulBlock",
																		"src": "8236:222:6",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:6",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:6",
																					"nodeType": "YulBlock",
																					"src": "8287:67:6",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:6",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:6"
																										},
																										"nativeSrc": "8320:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:6"
																								},
																								"nativeSrc": "8314:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:6"
																				},
																				"nativeSrc": "8277:77:6",
																				"nodeType": "YulIf",
																				"src": "8277:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:6"
																							},
																							"nativeSrc": "8380:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:6"
																					},
																					"nativeSrc": "8367:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:6"
																				},
																				"nativeSrc": "8367:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:6"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:6",
																	"nodeType": "YulCase",
																	"src": "8228:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:6"
																},
																"nativeSrc": "7578:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:6"
															},
															"nativeSrc": "7571:887:6",
															"nodeType": "YulSwitch",
															"src": "7571:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:6",
														"nodeType": "YulTypedName",
														"src": "7150:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:6",
														"nodeType": "YulTypedName",
														"src": "7156:3:6",
														"type": ""
													}
												],
												"src": "7069:1395:6"
											},
											{
												"body": {
													"nativeSrc": "8498:152:6",
													"nodeType": "YulBlock",
													"src": "8498:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8515:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8515:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8518:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8518:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8508:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:6"
																},
																"nativeSrc": "8508:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8508:88:6"
															},
															"nativeSrc": "8508:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8508:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8612:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8612:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8615:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8615:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8605:6:6"
																},
																"nativeSrc": "8605:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8605:15:6"
															},
															"nativeSrc": "8605:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8605:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8636:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8636:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8639:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8639:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8629:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8629:6:6"
																},
																"nativeSrc": "8629:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8629:15:6"
															},
															"nativeSrc": "8629:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8629:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8470:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8470:180:6"
											},
											{
												"body": {
													"nativeSrc": "8704:362:6",
													"nodeType": "YulBlock",
													"src": "8704:362:6",
													"statements": [
														{
															"nativeSrc": "8714:25:6",
															"nodeType": "YulAssignment",
															"src": "8714:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8737:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8737:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8719:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8719:17:6"
																},
																"nativeSrc": "8719:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8719:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8714:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8714:1:6"
																}
															]
														},
														{
															"nativeSrc": "8748:25:6",
															"nodeType": "YulAssignment",
															"src": "8748:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8771:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8771:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8753:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8753:17:6"
																},
																"nativeSrc": "8753:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8753:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8748:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8748:1:6"
																}
															]
														},
														{
															"nativeSrc": "8782:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8782:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8805:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8805:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8808:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8808:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8801:3:6"
																},
																"nativeSrc": "8801:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8801:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8786:11:6",
																	"nodeType": "YulTypedName",
																	"src": "8786:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8819:41:6",
															"nodeType": "YulAssignment",
															"src": "8819:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8848:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "8848:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8830:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8830:17:6"
																},
																"nativeSrc": "8830:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8830:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8819:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8819:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9037:22:6",
																"nodeType": "YulBlock",
																"src": "9037:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9039:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9039:16:6"
																			},
																			"nativeSrc": "9039:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9039:18:6"
																		},
																		"nativeSrc": "9039:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9039:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8970:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8970:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8963:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8963:6:6"
																				},
																				"nativeSrc": "8963:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8963:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8993:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8993:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9000:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "9000:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9009:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "9009:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8996:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8996:3:6"
																						},
																						"nativeSrc": "8996:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8996:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8990:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8990:2:6"
																				},
																				"nativeSrc": "8990:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8990:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8943:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8943:2:6"
																		},
																		"nativeSrc": "8943:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8943:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8923:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:6"
																},
																"nativeSrc": "8923:113:6",
																"nodeType": "YulFunctionCall",
																"src": "8923:113:6"
															},
															"nativeSrc": "8920:139:6",
															"nodeType": "YulIf",
															"src": "8920:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8656:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8687:1:6",
														"nodeType": "YulTypedName",
														"src": "8687:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8690:1:6",
														"nodeType": "YulTypedName",
														"src": "8690:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8696:7:6",
														"nodeType": "YulTypedName",
														"src": "8696:7:6",
														"type": ""
													}
												],
												"src": "8656:410:6"
											},
											{
												"body": {
													"nativeSrc": "9117:81:6",
													"nodeType": "YulBlock",
													"src": "9117:81:6",
													"statements": [
														{
															"nativeSrc": "9127:65:6",
															"nodeType": "YulAssignment",
															"src": "9127:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9142:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9142:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9149:42:6",
																		"nodeType": "YulLiteral",
																		"src": "9149:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9138:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9138:3:6"
																},
																"nativeSrc": "9138:54:6",
																"nodeType": "YulFunctionCall",
																"src": "9138:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9127:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9127:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9072:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9099:5:6",
														"nodeType": "YulTypedName",
														"src": "9099:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9109:7:6",
														"nodeType": "YulTypedName",
														"src": "9109:7:6",
														"type": ""
													}
												],
												"src": "9072:126:6"
											},
											{
												"body": {
													"nativeSrc": "9249:51:6",
													"nodeType": "YulBlock",
													"src": "9249:51:6",
													"statements": [
														{
															"nativeSrc": "9259:35:6",
															"nodeType": "YulAssignment",
															"src": "9259:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9288:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9288:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9270:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9270:17:6"
																},
																"nativeSrc": "9270:24:6",
																"nodeType": "YulFunctionCall",
																"src": "9270:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9259:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9259:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9204:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9231:5:6",
														"nodeType": "YulTypedName",
														"src": "9231:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9241:7:6",
														"nodeType": "YulTypedName",
														"src": "9241:7:6",
														"type": ""
													}
												],
												"src": "9204:96:6"
											},
											{
												"body": {
													"nativeSrc": "9371:53:6",
													"nodeType": "YulBlock",
													"src": "9371:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9388:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9388:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9411:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9411:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9393:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9393:17:6"
																		},
																		"nativeSrc": "9393:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9393:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9381:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9381:6:6"
																},
																"nativeSrc": "9381:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9381:37:6"
															},
															"nativeSrc": "9381:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9381:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9306:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9359:5:6",
														"nodeType": "YulTypedName",
														"src": "9359:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9366:3:6",
														"nodeType": "YulTypedName",
														"src": "9366:3:6",
														"type": ""
													}
												],
												"src": "9306:118:6"
											},
											{
												"body": {
													"nativeSrc": "9528:124:6",
													"nodeType": "YulBlock",
													"src": "9528:124:6",
													"statements": [
														{
															"nativeSrc": "9538:26:6",
															"nodeType": "YulAssignment",
															"src": "9538:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9550:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9550:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9561:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9561:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9546:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:6"
																},
																"nativeSrc": "9546:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9546:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9538:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9538:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9618:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9618:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9631:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9631:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9642:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9642:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9627:3:6"
																		},
																		"nativeSrc": "9627:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9627:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9574:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9574:43:6"
																},
																"nativeSrc": "9574:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9574:71:6"
															},
															"nativeSrc": "9574:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9574:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9430:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9500:9:6",
														"nodeType": "YulTypedName",
														"src": "9500:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9512:6:6",
														"nodeType": "YulTypedName",
														"src": "9512:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9523:4:6",
														"nodeType": "YulTypedName",
														"src": "9523:4:6",
														"type": ""
													}
												],
												"src": "9430:222:6"
											},
											{
												"body": {
													"nativeSrc": "9702:147:6",
													"nodeType": "YulBlock",
													"src": "9702:147:6",
													"statements": [
														{
															"nativeSrc": "9712:25:6",
															"nodeType": "YulAssignment",
															"src": "9712:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9735:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9735:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9717:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9717:17:6"
																},
																"nativeSrc": "9717:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9717:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9712:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9712:1:6"
																}
															]
														},
														{
															"nativeSrc": "9746:25:6",
															"nodeType": "YulAssignment",
															"src": "9746:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9769:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9769:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9751:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9751:17:6"
																},
																"nativeSrc": "9751:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9751:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9746:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9746:1:6"
																}
															]
														},
														{
															"nativeSrc": "9780:16:6",
															"nodeType": "YulAssignment",
															"src": "9780:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9791:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9791:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9794:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9794:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9787:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:6"
																},
																"nativeSrc": "9787:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9787:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9780:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9780:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9820:22:6",
																"nodeType": "YulBlock",
																"src": "9820:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9822:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9822:16:6"
																			},
																			"nativeSrc": "9822:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9822:18:6"
																		},
																		"nativeSrc": "9822:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9822:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9812:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9812:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9815:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9815:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9809:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:2:6"
																},
																"nativeSrc": "9809:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9809:10:6"
															},
															"nativeSrc": "9806:36:6",
															"nodeType": "YulIf",
															"src": "9806:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9658:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9689:1:6",
														"nodeType": "YulTypedName",
														"src": "9689:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9692:1:6",
														"nodeType": "YulTypedName",
														"src": "9692:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9698:3:6",
														"nodeType": "YulTypedName",
														"src": "9698:3:6",
														"type": ""
													}
												],
												"src": "9658:191:6"
											},
											{
												"body": {
													"nativeSrc": "9920:53:6",
													"nodeType": "YulBlock",
													"src": "9920:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9937:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9937:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9960:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9960:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9942:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9942:17:6"
																		},
																		"nativeSrc": "9942:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9942:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9930:6:6"
																},
																"nativeSrc": "9930:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9930:37:6"
															},
															"nativeSrc": "9930:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9930:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9855:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9908:5:6",
														"nodeType": "YulTypedName",
														"src": "9908:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9915:3:6",
														"nodeType": "YulTypedName",
														"src": "9915:3:6",
														"type": ""
													}
												],
												"src": "9855:118:6"
											},
											{
												"body": {
													"nativeSrc": "10133:288:6",
													"nodeType": "YulBlock",
													"src": "10133:288:6",
													"statements": [
														{
															"nativeSrc": "10143:26:6",
															"nodeType": "YulAssignment",
															"src": "10143:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10155:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10155:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10166:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10166:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10151:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10151:3:6"
																},
																"nativeSrc": "10151:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10151:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10143:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10223:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10223:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10236:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10236:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10247:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10247:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10232:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10232:3:6"
																		},
																		"nativeSrc": "10232:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10232:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10179:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10179:43:6"
																},
																"nativeSrc": "10179:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10179:71:6"
															},
															"nativeSrc": "10179:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10179:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10304:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10304:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10317:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10317:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10328:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10328:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10313:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10313:3:6"
																		},
																		"nativeSrc": "10313:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10313:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10260:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10260:43:6"
																},
																"nativeSrc": "10260:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10260:72:6"
															},
															"nativeSrc": "10260:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10260:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10386:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10386:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10399:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10399:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10410:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10410:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10395:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10395:3:6"
																		},
																		"nativeSrc": "10395:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10395:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10342:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10342:43:6"
																},
																"nativeSrc": "10342:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10342:72:6"
															},
															"nativeSrc": "10342:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10342:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9979:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10089:9:6",
														"nodeType": "YulTypedName",
														"src": "10089:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10101:6:6",
														"nodeType": "YulTypedName",
														"src": "10101:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10109:6:6",
														"nodeType": "YulTypedName",
														"src": "10109:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10117:6:6",
														"nodeType": "YulTypedName",
														"src": "10117:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10128:4:6",
														"nodeType": "YulTypedName",
														"src": "10128:4:6",
														"type": ""
													}
												],
												"src": "9979:442:6"
											},
											{
												"body": {
													"nativeSrc": "10525:124:6",
													"nodeType": "YulBlock",
													"src": "10525:124:6",
													"statements": [
														{
															"nativeSrc": "10535:26:6",
															"nodeType": "YulAssignment",
															"src": "10535:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10547:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10547:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10558:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10558:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10543:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10543:3:6"
																},
																"nativeSrc": "10543:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10543:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10535:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10535:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10615:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10615:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10628:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10628:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10639:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10639:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10624:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10624:3:6"
																		},
																		"nativeSrc": "10624:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10624:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10571:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10571:43:6"
																},
																"nativeSrc": "10571:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10571:71:6"
															},
															"nativeSrc": "10571:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10571:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10427:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10497:9:6",
														"nodeType": "YulTypedName",
														"src": "10497:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10509:6:6",
														"nodeType": "YulTypedName",
														"src": "10509:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10520:4:6",
														"nodeType": "YulTypedName",
														"src": "10520:4:6",
														"type": ""
													}
												],
												"src": "10427:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612542380380612542833981810160405281019061003191906104f0565b818181600390816100429190610773565b5080600490816100529190610773565b50505061007e30670de0b6b3a76400006509184e72a000610073919061086f565b61010560201b60201c565b3360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610998565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610175575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161016c91906108ef565b60405180910390fd5b6101865f838361018a60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101da578060025f8282546101ce9190610908565b925050819055506102a8565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610263578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161025a9392919061094a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102ef578060025f8282540392505081905550610339565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610396919061097f565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610402826103bc565b810181811067ffffffffffffffff82111715610421576104206103cc565b5b80604052505050565b5f6104336103a3565b905061043f82826103f9565b919050565b5f67ffffffffffffffff82111561045e5761045d6103cc565b5b610467826103bc565b9050602081019050919050565b8281835e5f83830152505050565b5f61049461048f84610444565b61042a565b9050828152602081018484840111156104b0576104af6103b8565b5b6104bb848285610474565b509392505050565b5f82601f8301126104d7576104d66103b4565b5b81516104e7848260208601610482565b91505092915050565b5f8060408385031215610506576105056103ac565b5b5f83015167ffffffffffffffff811115610523576105226103b0565b5b61052f858286016104c3565b925050602083015167ffffffffffffffff8111156105505761054f6103b0565b5b61055c858286016104c3565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105b457607f821691505b6020821081036105c7576105c6610570565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105ee565b61063386836105ee565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61067761067261066d8461064b565b610654565b61064b565b9050919050565b5f819050919050565b6106908361065d565b6106a461069c8261067e565b8484546105fa565b825550505050565b5f90565b6106b86106ac565b6106c3818484610687565b505050565b5b818110156106e6576106db5f826106b0565b6001810190506106c9565b5050565b601f82111561072b576106fc816105cd565b610705846105df565b81016020851015610714578190505b610728610720856105df565b8301826106c8565b50505b505050565b5f82821c905092915050565b5f61074b5f1984600802610730565b1980831691505092915050565b5f610763838361073c565b9150826002028217905092915050565b61077c82610566565b67ffffffffffffffff811115610795576107946103cc565b5b61079f825461059d565b6107aa8282856106ea565b5f60209050601f8311600181146107db575f84156107c9578287015190505b6107d38582610758565b86555061083a565b601f1984166107e9866105cd565b5f5b82811015610810578489015182556001820191506020850194506020810190506107eb565b8683101561082d5784890151610829601f89168261073c565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108798261064b565b91506108848361064b565b92508282026108928161064b565b915082820484148315176108a9576108a8610842565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108d9826108b0565b9050919050565b6108e9816108cf565b82525050565b5f6020820190506109025f8301846108e0565b92915050565b5f6109128261064b565b915061091d8361064b565b925082820190508082111561093557610934610842565b5b92915050565b6109448161064b565b82525050565b5f60608201905061095d5f8301866108e0565b61096a602083018561093b565b610977604083018461093b565b949350505050565b5f6020820190506109925f83018461093b565b92915050565b611b9d806109a55f395ff3fe608060405260043610610129575f3560e01c8063313ce567116100aa57806395d89b411161006e57806395d89b41146103d55780639fe5491c146103ff578063a9059cbb14610427578063b90306ad14610463578063c12019eb1461048b578063dd62ed3e146104b557610129565b8063313ce567146102e157806347cee97c1461030b5780636010b797146103335780636d41b22c1461036f57806370a082311461039957610129565b80631e548d7a116100f15780631e548d7a1461020f57806320c63d561461023757806321ba18a114610241578063239fcf0f1461026957806323b872dd146102a557610129565b8063067637881461012d57806306fdde0314610169578063095ea7b3146101935780630fdb1c10146101cf57806318160ddd146101e5575b5f80fd5b348015610138575f80fd5b50610153600480360381019061014e919061145c565b6104f1565b604051610160919061149f565b60405180910390f35b348015610174575f80fd5b5061017d610511565b60405161018a9190611528565b60405180910390f35b34801561019e575f80fd5b506101b960048036038101906101b49190611572565b6105a1565b6040516101c691906115ca565b60405180910390f35b3480156101da575f80fd5b506101e36105c3565b005b3480156101f0575f80fd5b506101f96106b9565b604051610206919061149f565b60405180910390f35b34801561021a575f80fd5b50610235600480360381019061023091906115e3565b6106c2565b005b61023f610771565b005b34801561024c575f80fd5b5061026760048036038101906102629190611572565b6107d3565b005b348015610274575f80fd5b5061028f600480360381019061028a919061145c565b610884565b60405161029c919061149f565b60405180910390f35b3480156102b0575f80fd5b506102cb60048036038101906102c6919061160e565b610895565b6040516102d891906115ca565b60405180910390f35b3480156102ec575f80fd5b506102f56108c3565b6040516103029190611679565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190611572565b6108cb565b005b34801561033e575f80fd5b506103596004803603810190610354919061145c565b6109c7565b604051610366919061149f565b60405180910390f35b34801561037a575f80fd5b50610383610a3e565b604051610390919061149f565b60405180910390f35b3480156103a4575f80fd5b506103bf60048036038101906103ba919061145c565b610a4d565b6040516103cc919061149f565b60405180910390f35b3480156103e0575f80fd5b506103e9610a92565b6040516103f69190611528565b60405180910390f35b34801561040a575f80fd5b5061042560048036038101906104209190611572565b610b22565b005b348015610432575f80fd5b5061044d60048036038101906104489190611572565b610b53565b60405161045a91906115ca565b60405180910390f35b34801561046e575f80fd5b50610489600480360381019061048491906115e3565b610b75565b005b348015610496575f80fd5b5061049f610be0565b6040516104ac9190611749565b60405180910390f35b3480156104c0575f80fd5b506104db60048036038101906104d69190611769565b610cfa565b6040516104e8919061149f565b60405180910390f35b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b606060038054610520906117d4565b80601f016020809104026020016040519081016040528092919081815260200182805461054c906117d4565b80156105975780601f1061056e57610100808354040283529160200191610597565b820191905f5260205f20905b81548152906001019060200180831161057a57829003601f168201915b5050505050905090565b5f806105ab610d7c565b90506105b8818585610d83565b600191505092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610652576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106499061184e565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156106b6573d5f803e3d5ffd5b50565b5f600254905090565b3373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610751576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107489061184e565b60405180910390fd5b61076e33670de0b6b3a7640000836107699190611899565b610d95565b50565b600733908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610841576040517f577375f300000000000000000000000000000000000000000000000000000000815260040161083890611924565b60405180910390fd5b6108808260055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400008461087b9190611899565b610e14565b5050565b5f61088e82610a4d565b9050919050565b5f8061089f610d7c565b90506108ac858285610f04565b6108b7858585610e14565b60019150509392505050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610939576040517f577375f300000000000000000000000000000000000000000000000000000000815260040161093090611924565b60405180910390fd5b5f61094383610a4d565b1115610984576040517fc18cab9000000000000000000000000000000000000000000000000000000000815260040161097b9061198c565b60405180910390fd5b6109c360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683670de0b6b3a7640000846109be9190611899565b610e14565b5050565b5f670de0b6b3a76400006109da83610a4d565b1015610a1b576040517fb4600e99000000000000000000000000000000000000000000000000000000008152600401610a12906119f4565b60405180910390fd5b670de0b6b3a7640000610a2d83610a4d565b610a379190611a3f565b9050919050565b5f670de0b6b3a7640000905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610aa1906117d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610acd906117d4565b8015610b185780601f10610aef57610100808354040283529160200191610b18565b820191905f5260205f20905b815481529060010190602001808311610afb57829003601f168201915b5050505050905090565b670de0b6b3a764000081610b369190611899565b9050610b4f3083600284610b4a9190611899565b610e14565b5050565b5f80610b5d610d7c565b9050610b6a818585610e14565b600191505092915050565b5f610b7f33610a4d565b1015610bc0576040517fb4600e99000000000000000000000000000000000000000000000000000000008152600401610bb790611ab9565b60405180910390fd5b610bdd33670de0b6b3a764000083610bd89190611899565b610f97565b50565b60603373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c689061184e565b60405180910390fd5b6007805480602002602001604051908101604052809291908181526020018280548015610cf057602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ca7575b5050505050905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610d908383836001611016565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e05575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dfc9190611ae6565b60405180910390fd5b610e105f83836111e5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e84575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e7b9190611ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610eeb9190611ae6565b60405180910390fd5b610eff8383836111e5565b505050565b5f610f0f8484610cfa565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f915781811015610f82578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f7993929190611aff565b60405180910390fd5b610f9084848484035f611016565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611007575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ffe9190611ae6565b60405180910390fd5b611012825f836111e5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611086575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161107d9190611ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f6575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110ed9190611ae6565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111df578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111d6919061149f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611235578060025f8282546112299190611b34565b92505081905550611303565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156112be578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112b593929190611aff565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361134a578060025f8282540392505081905550611394565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113f1919061149f565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61142b82611402565b9050919050565b61143b81611421565b8114611445575f80fd5b50565b5f8135905061145681611432565b92915050565b5f60208284031215611471576114706113fe565b5b5f61147e84828501611448565b91505092915050565b5f819050919050565b61149981611487565b82525050565b5f6020820190506114b25f830184611490565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114fa826114b8565b61150481856114c2565b93506115148185602086016114d2565b61151d816114e0565b840191505092915050565b5f6020820190508181035f83015261154081846114f0565b905092915050565b61155181611487565b811461155b575f80fd5b50565b5f8135905061156c81611548565b92915050565b5f8060408385031215611588576115876113fe565b5b5f61159585828601611448565b92505060206115a68582860161155e565b9150509250929050565b5f8115159050919050565b6115c4816115b0565b82525050565b5f6020820190506115dd5f8301846115bb565b92915050565b5f602082840312156115f8576115f76113fe565b5b5f6116058482850161155e565b91505092915050565b5f805f60608486031215611625576116246113fe565b5b5f61163286828701611448565b935050602061164386828701611448565b92505060406116548682870161155e565b9150509250925092565b5f60ff82169050919050565b6116738161165e565b82525050565b5f60208201905061168c5f83018461166a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116c481611421565b82525050565b5f6116d583836116bb565b60208301905092915050565b5f602082019050919050565b5f6116f782611692565b611701818561169c565b935061170c836116ac565b805f5b8381101561173c57815161172388826116ca565b975061172e836116e1565b92505060018101905061170f565b5085935050505092915050565b5f6020820190508181035f83015261176181846116ed565b905092915050565b5f806040838503121561177f5761177e6113fe565b5b5f61178c85828601611448565b925050602061179d85828601611448565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117eb57607f821691505b6020821081036117fe576117fd6117a7565b5b50919050565b7f4e6f74206f776e657221000000000000000000000000000000000000000000005f82015250565b5f611838600a836114c2565b915061184382611804565b602082019050919050565b5f6020820190508181035f8301526118658161182c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118a382611487565b91506118ae83611487565b92508282026118bc81611487565b915082820484148315176118d3576118d261186c565b5b5092915050565b7f41646472657373207a65726f206e6f7420616c6c6f77656421000000000000005f82015250565b5f61190e6019836114c2565b9150611919826118da565b602082019050919050565b5f6020820190508181035f83015261193b81611902565b9050919050565b7f4164647265737320436c61696d656421000000000000000000000000000000005f82015250565b5f6119766010836114c2565b915061198182611942565b602082019050919050565b5f6020820190508181035f8301526119a38161196a565b9050919050565b7f546f6b656e206e6f7420656e6f756768210000000000000000000000000000005f82015250565b5f6119de6011836114c2565b91506119e9826119aa565b602082019050919050565b5f6020820190508181035f830152611a0b816119d2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a4982611487565b9150611a5483611487565b925082611a6457611a63611a12565b5b828204905092915050565b7f546f6b656e206e6f7420456e6f756768210000000000000000000000000000005f82015250565b5f611aa36011836114c2565b9150611aae82611a6f565b602082019050919050565b5f6020820190508181035f830152611ad081611a97565b9050919050565b611ae081611421565b82525050565b5f602082019050611af95f830184611ad7565b92915050565b5f606082019050611b125f830186611ad7565b611b1f6020830185611490565b611b2c6040830184611490565b949350505050565b5f611b3e82611487565b9150611b4983611487565b9250828201905080821115611b6157611b6061186c565b5b9291505056fea2646970667358221220acf72ca333ac27c4b1a3024514972de62bcdc94bf8bd61b97a22af67d3b0a98264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2542 CODESIZE SUB DUP1 PUSH2 0x2542 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4F0 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x773 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x773 JUMP JUMPDEST POP POP POP PUSH2 0x7E ADDRESS PUSH8 0xDE0B6B3A7640000 PUSH6 0x9184E72A000 PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x105 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP ADDRESS PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x998 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186 PUSH0 DUP4 DUP4 PUSH2 0x18A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2A8 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x263 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2EF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x339 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x402 DUP3 PUSH2 0x3BC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x421 JUMPI PUSH2 0x420 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x433 PUSH2 0x3A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP3 DUP3 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45E JUMPI PUSH2 0x45D PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x467 DUP3 PUSH2 0x3BC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x494 PUSH2 0x48F DUP5 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4B0 JUMPI PUSH2 0x4AF PUSH2 0x3B8 JUMP JUMPDEST JUMPDEST PUSH2 0x4BB DUP5 DUP3 DUP6 PUSH2 0x474 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4D7 JUMPI PUSH2 0x4D6 PUSH2 0x3B4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x482 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x506 JUMPI PUSH2 0x505 PUSH2 0x3AC JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x523 JUMPI PUSH2 0x522 PUSH2 0x3B0 JUMP JUMPDEST JUMPDEST PUSH2 0x52F DUP6 DUP3 DUP7 ADD PUSH2 0x4C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x550 JUMPI PUSH2 0x54F PUSH2 0x3B0 JUMP JUMPDEST JUMPDEST PUSH2 0x55C DUP6 DUP3 DUP7 ADD PUSH2 0x4C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5C7 JUMPI PUSH2 0x5C6 PUSH2 0x570 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x629 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x633 DUP7 DUP4 PUSH2 0x5EE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x677 PUSH2 0x672 PUSH2 0x66D DUP5 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x690 DUP4 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x6A4 PUSH2 0x69C DUP3 PUSH2 0x67E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5FA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x6C3 DUP2 DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6DB PUSH0 DUP3 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x72B JUMPI PUSH2 0x6FC DUP2 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x705 DUP5 PUSH2 0x5DF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x714 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x728 PUSH2 0x720 DUP6 PUSH2 0x5DF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6C8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x74B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x730 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x763 DUP4 DUP4 PUSH2 0x73C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x77C DUP3 PUSH2 0x566 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x79F DUP3 SLOAD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x7AA DUP3 DUP3 DUP6 PUSH2 0x6EA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7DB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7C9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7D3 DUP6 DUP3 PUSH2 0x758 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x83A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7E9 DUP7 PUSH2 0x5CD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x810 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7EB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x82D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x829 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x73C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x879 DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP2 POP PUSH2 0x884 DUP4 PUSH2 0x64B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x892 DUP2 PUSH2 0x64B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x842 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8D9 DUP3 PUSH2 0x8B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x902 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x912 DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP4 PUSH2 0x64B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x935 JUMPI PUSH2 0x934 PUSH2 0x842 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x944 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x95D PUSH0 DUP4 ADD DUP7 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x96A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x977 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x93B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x992 PUSH0 DUP4 ADD DUP5 PUSH2 0x93B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B9D DUP1 PUSH2 0x9A5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x9FE5491C EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB90306AD EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xC12019EB EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B5 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x47CEE97C EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x6010B797 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x6D41B22C EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x399 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x1E548D7A GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x1E548D7A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x20C63D56 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x21BA18A1 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x239FCF0F EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A5 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x6763788 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x5C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x6C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0x771 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x520 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54C SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x597 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x597 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AB PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH2 0x5B8 DUP2 DUP6 DUP6 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x649 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76E CALLER PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH32 0x577375F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x838 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x880 DUP3 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88E DUP3 PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89F PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH2 0x8AC DUP6 DUP3 DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x8B7 DUP6 DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x577375F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x930 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x943 DUP4 PUSH2 0xA4D JUMP JUMPDEST GT ISZERO PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18CAB9000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97B SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9DA DUP4 PUSH2 0xA4D JUMP JUMPDEST LT ISZERO PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4600E9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA12 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2D DUP4 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA1 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xACD SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAFB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST SWAP1 POP PUSH2 0xB4F ADDRESS DUP4 PUSH1 0x2 DUP5 PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB5D PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH2 0xB6A DUP2 DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7F CALLER PUSH2 0xA4D JUMP JUMPDEST LT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4600E9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB7 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDD CALLER PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC68 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xCF0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xCA7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD90 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1016 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH0 DUP4 DUP4 PUSH2 0x11E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 DUP4 DUP4 PUSH2 0x11E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF0F DUP5 DUP5 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF82 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF79 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF90 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1016 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1012 DUP3 PUSH0 DUP4 PUSH2 0x11E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1086 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11DF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1235 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1303 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12BE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x134A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1394 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13F1 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP2 EQ PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1456 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147E DUP5 DUP3 DUP6 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1499 DUP2 PUSH2 0x1487 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14FA DUP3 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1504 DUP2 DUP6 PUSH2 0x14C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1514 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x151D DUP2 PUSH2 0x14E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1540 DUP2 DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x1487 JUMP JUMPDEST DUP2 EQ PUSH2 0x155B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156C DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C4 DUP2 PUSH2 0x15B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DD PUSH0 DUP4 ADD DUP5 PUSH2 0x15BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1605 DUP5 DUP3 DUP6 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1625 JUMPI PUSH2 0x1624 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1632 DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1643 DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1654 DUP7 DUP3 DUP8 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1673 DUP2 PUSH2 0x165E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168C PUSH0 DUP4 ADD DUP5 PUSH2 0x166A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C4 DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D5 DUP4 DUP4 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F7 DUP3 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x1701 DUP2 DUP6 PUSH2 0x169C JUMP JUMPDEST SWAP4 POP PUSH2 0x170C DUP4 PUSH2 0x16AC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173C JUMPI DUP2 MLOAD PUSH2 0x1723 DUP9 DUP3 PUSH2 0x16CA JUMP JUMPDEST SWAP8 POP PUSH2 0x172E DUP4 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x170F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1761 DUP2 DUP5 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x179D DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17FE JUMPI PUSH2 0x17FD PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65722100000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1838 PUSH1 0xA DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1843 DUP3 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1865 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18A3 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AE DUP4 PUSH2 0x1487 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18BC DUP2 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x186C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373207A65726F206E6F7420616C6C6F7765642100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190E PUSH1 0x19 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1919 DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x193B DUP2 PUSH2 0x1902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320436C61696D65642100000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1976 PUSH1 0x10 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1981 DUP3 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A3 DUP2 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420656E6F75676821000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE PUSH1 0x11 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A0B DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A49 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A54 DUP4 PUSH2 0x1487 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x1A12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420456E6F75676821000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA3 PUSH1 0x11 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAE DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD0 DUP2 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B12 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1490 JUMP JUMPDEST PUSH2 0x1B2C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3E DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B49 DUP4 PUSH2 0x1487 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x186C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xF7 0x2C LOG3 CALLER 0xAC 0x27 0xC4 0xB1 LOG3 MUL GASLIMIT EQ SWAP8 0x2D 0xE6 0x2B 0xCD 0xC9 0x4B 0xF8 0xBD PUSH2 0xB97A 0x22 0xAF PUSH8 0xD3B0A98264736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "169:2627:0:-:0;;;469:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;539:5;546:7;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;613:51:0::1;627:4;300:6;634:18;:29;;;;:::i;:::-;613:5;;;:51;;:::i;:::-;684:10;674:7;;:20;;;;;;;;;;;;;;;;;;730:4;704:15;;:31;;;;;;;;;;;;;;;;;;469:274:::0;;169:2627;;7462:208:2;7551:1;7532:21;;:7;:21;;;7528:91;;7605:1;7576:32;;;;;;;;;;;:::i;:::-;;;;;;;;7528:91;7628:35;7644:1;7648:7;7657:5;7628:7;;;:35;;:::i;:::-;7462:208;;:::o;6012:1107::-;6117:1;6101:18;;:4;:18;;;6097:540;;6253:5;6237:12;;:21;;;;;;;:::i;:::-;;;;;;;;6097:540;;;6289:19;6311:9;:15;6321:4;6311:15;;;;;;;;;;;;;;;;6289:37;;6358:5;6344:11;:19;6340:115;;;6415:4;6421:11;6434:5;6390:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6340:115;6607:5;6593:11;:19;6575:9;:15;6585:4;6575:15;;;;;;;;;;;;;;;:37;;;;6275:362;6097:540;6665:1;6651:16;;:2;:16;;;6647:425;;6830:5;6814:12;;:21;;;;;;;;;;;6647:425;;;7042:5;7025:9;:13;7035:2;7025:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6647:425;7102:2;7087:25;;7096:4;7087:25;;;7106:5;7087:25;;;;;;:::i;:::-;;;;;;;;6012:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;8470:180::-;8518:77;8515:1;8508:88;8615:4;8612:1;8605:15;8639:4;8636:1;8629:15;8656:410;8696:7;8719:20;8737:1;8719:20;:::i;:::-;8714:25;;8753:20;8771:1;8753:20;:::i;:::-;8748:25;;8808:1;8805;8801:9;8830:30;8848:11;8830:30;:::i;:::-;8819:41;;9009:1;9000:7;8996:15;8993:1;8990:22;8970:1;8963:9;8943:83;8920:139;;9039:18;;:::i;:::-;8920:139;8704:362;8656:410;;;;:::o;9072:126::-;9109:7;9149:42;9142:5;9138:54;9127:65;;9072:126;;;:::o;9204:96::-;9241:7;9270:24;9288:5;9270:24;:::i;:::-;9259:35;;9204:96;;;:::o;9306:118::-;9393:24;9411:5;9393:24;:::i;:::-;9388:3;9381:37;9306:118;;:::o;9430:222::-;9523:4;9561:2;9550:9;9546:18;9538:26;;9574:71;9642:1;9631:9;9627:17;9618:6;9574:71;:::i;:::-;9430:222;;;;:::o;9658:191::-;9698:3;9717:20;9735:1;9717:20;:::i;:::-;9712:25;;9751:20;9769:1;9751:20;:::i;:::-;9746:25;;9794:1;9791;9787:9;9780:16;;9815:3;9812:1;9809:10;9806:36;;;9822:18;;:::i;:::-;9806:36;9658:191;;;;:::o;9855:118::-;9942:24;9960:5;9942:24;:::i;:::-;9937:3;9930:37;9855:118;;:::o;9979:442::-;10128:4;10166:2;10155:9;10151:18;10143:26;;10179:71;10247:1;10236:9;10232:17;10223:6;10179:71;:::i;:::-;10260:72;10328:2;10317:9;10313:18;10304:6;10260:72;:::i;:::-;10342;10410:2;10399:9;10395:18;10386:6;10342:72;:::i;:::-;9979:442;;;;;;:::o;10427:222::-;10520:4;10558:2;10547:9;10543:18;10535:26;;10571:71;10639:1;10628:9;10624:17;10615:6;10571:71;:::i;:::-;10427:222;;;;:::o;169:2627:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Balance_169": {
									"entryPoint": 2180,
									"id": 169,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Burn_157": {
									"entryPoint": 2933,
									"id": 157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@Claim_131": {
									"entryPoint": 2251,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@SenderEth_275": {
									"entryPoint": 3040,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_854": {
									"entryPoint": 3459,
									"id": 854,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_914": {
									"entryPoint": 4118,
									"id": 914,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_836": {
									"entryPoint": 3991,
									"id": 836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_803": {
									"entryPoint": 3477,
									"id": 803,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1079": {
									"entryPoint": 3452,
									"id": 1079,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_962": {
									"entryPoint": 3844,
									"id": 962,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_693": {
									"entryPoint": 3604,
									"id": 693,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_770": {
									"entryPoint": 4581,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addressBalnc_310": {
									"entryPoint": 1265,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_590": {
									"entryPoint": 3322,
									"id": 590,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_614": {
									"entryPoint": 1441,
									"id": 614,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_549": {
									"entryPoint": 2637,
									"id": 549,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_527": {
									"entryPoint": 2243,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimalsz_92": {
									"entryPoint": 2622,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@flipClick_197": {
									"entryPoint": 2003,
									"id": 197,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gain_222": {
									"entryPoint": 2850,
									"id": 222,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_509": {
									"entryPoint": 1297,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payContractGasFee_233": {
									"entryPoint": 1905,
									"id": 233,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pumptit_84": {
									"entryPoint": 1730,
									"id": 84,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@realTime_258": {
									"entryPoint": 2503,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_518": {
									"entryPoint": 2706,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_536": {
									"entryPoint": 1721,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_646": {
									"entryPoint": 2197,
									"id": 646,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_573": {
									"entryPoint": 2899,
									"id": 573,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withDraw_299": {
									"entryPoint": 1475,
									"id": 299,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15244:6",
										"nodeType": "YulBlock",
										"src": "0:15244:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1221:32:6",
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nativeSrc": "1231:16:6",
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:6",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:6",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:6",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nativeSrc": "1324:53:6",
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nativeSrc": "1346:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nativeSrc": "1334:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:6",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nativeSrc": "1481:124:6",
													"nodeType": "YulBlock",
													"src": "1481:124:6",
													"statements": [
														{
															"nativeSrc": "1491:26:6",
															"nodeType": "YulAssignment",
															"src": "1491:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nativeSrc": "1499:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:6"
																		},
																		"nativeSrc": "1580:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:6"
																},
																"nativeSrc": "1527:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:6"
															},
															"nativeSrc": "1527:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:6",
														"nodeType": "YulTypedName",
														"src": "1453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:6",
														"nodeType": "YulTypedName",
														"src": "1465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:6",
														"nodeType": "YulTypedName",
														"src": "1476:4:6",
														"type": ""
													}
												],
												"src": "1383:222:6"
											},
											{
												"body": {
													"nativeSrc": "1670:40:6",
													"nodeType": "YulBlock",
													"src": "1670:40:6",
													"statements": [
														{
															"nativeSrc": "1681:22:6",
															"nodeType": "YulAssignment",
															"src": "1681:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1697:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1697:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1691:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1691:5:6"
																},
																"nativeSrc": "1691:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1691:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1681:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1611:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1653:5:6",
														"nodeType": "YulTypedName",
														"src": "1653:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1663:6:6",
														"nodeType": "YulTypedName",
														"src": "1663:6:6",
														"type": ""
													}
												],
												"src": "1611:99:6"
											},
											{
												"body": {
													"nativeSrc": "1812:73:6",
													"nodeType": "YulBlock",
													"src": "1812:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1829:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1829:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1834:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1822:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:6"
																},
																"nativeSrc": "1822:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1822:19:6"
															},
															"nativeSrc": "1822:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1822:19:6"
														},
														{
															"nativeSrc": "1850:29:6",
															"nodeType": "YulAssignment",
															"src": "1850:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1869:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1869:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1874:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1874:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:6"
																},
																"nativeSrc": "1865:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1865:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1850:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1716:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1784:3:6",
														"nodeType": "YulTypedName",
														"src": "1784:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1789:6:6",
														"nodeType": "YulTypedName",
														"src": "1789:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1800:11:6",
														"nodeType": "YulTypedName",
														"src": "1800:11:6",
														"type": ""
													}
												],
												"src": "1716:169:6"
											},
											{
												"body": {
													"nativeSrc": "1953:77:6",
													"nodeType": "YulBlock",
													"src": "1953:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1970:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1970:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1975:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1975:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1980:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1980:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1964:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1964:5:6"
																},
																"nativeSrc": "1964:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1964:23:6"
															},
															"nativeSrc": "1964:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1964:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2007:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2007:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2012:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2003:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:6"
																		},
																		"nativeSrc": "2003:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2003:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2021:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2021:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1996:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:6"
																},
																"nativeSrc": "1996:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1996:27:6"
															},
															"nativeSrc": "1996:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1996:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1891:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1935:3:6",
														"nodeType": "YulTypedName",
														"src": "1935:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1940:3:6",
														"nodeType": "YulTypedName",
														"src": "1940:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1945:6:6",
														"nodeType": "YulTypedName",
														"src": "1945:6:6",
														"type": ""
													}
												],
												"src": "1891:139:6"
											},
											{
												"body": {
													"nativeSrc": "2084:54:6",
													"nodeType": "YulBlock",
													"src": "2084:54:6",
													"statements": [
														{
															"nativeSrc": "2094:38:6",
															"nodeType": "YulAssignment",
															"src": "2094:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2112:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2112:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2119:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2119:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2108:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:6"
																		},
																		"nativeSrc": "2108:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2128:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2124:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:6"
																		},
																		"nativeSrc": "2124:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2104:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:6"
																},
																"nativeSrc": "2104:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2104:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2094:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2036:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2067:5:6",
														"nodeType": "YulTypedName",
														"src": "2067:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2077:6:6",
														"nodeType": "YulTypedName",
														"src": "2077:6:6",
														"type": ""
													}
												],
												"src": "2036:102:6"
											},
											{
												"body": {
													"nativeSrc": "2236:285:6",
													"nodeType": "YulBlock",
													"src": "2236:285:6",
													"statements": [
														{
															"nativeSrc": "2246:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2246:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2293:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2293:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2260:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "2260:32:6"
																},
																"nativeSrc": "2260:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2260:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2250:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2250:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2308:78:6",
															"nodeType": "YulAssignment",
															"src": "2308:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2374:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2374:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2379:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2379:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2315:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2315:58:6"
																},
																"nativeSrc": "2315:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2315:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2308:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2308:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2434:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2434:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2441:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2441:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:6"
																		},
																		"nativeSrc": "2430:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2448:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2448:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2453:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2453:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2395:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2395:34:6"
																},
																"nativeSrc": "2395:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2395:65:6"
															},
															"nativeSrc": "2395:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2395:65:6"
														},
														{
															"nativeSrc": "2469:46:6",
															"nodeType": "YulAssignment",
															"src": "2469:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2480:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2480:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2507:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2485:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2485:21:6"
																		},
																		"nativeSrc": "2485:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2476:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:6"
																},
																"nativeSrc": "2476:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2476:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2469:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2144:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2217:5:6",
														"nodeType": "YulTypedName",
														"src": "2217:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2224:3:6",
														"nodeType": "YulTypedName",
														"src": "2224:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2232:3:6",
														"nodeType": "YulTypedName",
														"src": "2232:3:6",
														"type": ""
													}
												],
												"src": "2144:377:6"
											},
											{
												"body": {
													"nativeSrc": "2645:195:6",
													"nodeType": "YulBlock",
													"src": "2645:195:6",
													"statements": [
														{
															"nativeSrc": "2655:26:6",
															"nodeType": "YulAssignment",
															"src": "2655:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2667:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2667:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2678:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2678:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2663:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:6"
																},
																"nativeSrc": "2663:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2663:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2655:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2655:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2702:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2713:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2713:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2698:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:6"
																		},
																		"nativeSrc": "2698:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2721:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2721:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2727:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2717:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:6"
																		},
																		"nativeSrc": "2717:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2717:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2691:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:6"
																},
																"nativeSrc": "2691:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2691:47:6"
															},
															"nativeSrc": "2691:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2691:47:6"
														},
														{
															"nativeSrc": "2747:86:6",
															"nodeType": "YulAssignment",
															"src": "2747:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2819:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2819:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2828:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2828:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2755:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "2755:63:6"
																},
																"nativeSrc": "2755:78:6",
																"nodeType": "YulFunctionCall",
																"src": "2755:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2747:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2527:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2617:9:6",
														"nodeType": "YulTypedName",
														"src": "2617:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2629:6:6",
														"nodeType": "YulTypedName",
														"src": "2629:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2640:4:6",
														"nodeType": "YulTypedName",
														"src": "2640:4:6",
														"type": ""
													}
												],
												"src": "2527:313:6"
											},
											{
												"body": {
													"nativeSrc": "2889:79:6",
													"nodeType": "YulBlock",
													"src": "2889:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2946:16:6",
																"nodeType": "YulBlock",
																"src": "2946:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:6"
																			},
																			"nativeSrc": "2948:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:6"
																		},
																		"nativeSrc": "2948:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2912:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2937:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2937:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2919:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2919:17:6"
																				},
																				"nativeSrc": "2919:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2909:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2909:2:6"
																		},
																		"nativeSrc": "2909:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2902:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:6"
																},
																"nativeSrc": "2902:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2902:43:6"
															},
															"nativeSrc": "2899:63:6",
															"nodeType": "YulIf",
															"src": "2899:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2846:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2882:5:6",
														"nodeType": "YulTypedName",
														"src": "2882:5:6",
														"type": ""
													}
												],
												"src": "2846:122:6"
											},
											{
												"body": {
													"nativeSrc": "3026:87:6",
													"nodeType": "YulBlock",
													"src": "3026:87:6",
													"statements": [
														{
															"nativeSrc": "3036:29:6",
															"nodeType": "YulAssignment",
															"src": "3036:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3058:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:6"
																},
																"nativeSrc": "3045:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3045:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3036:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3101:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3101:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3074:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3074:26:6"
																},
																"nativeSrc": "3074:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3074:33:6"
															},
															"nativeSrc": "3074:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3074:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2974:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3004:6:6",
														"nodeType": "YulTypedName",
														"src": "3004:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3012:3:6",
														"nodeType": "YulTypedName",
														"src": "3012:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3020:5:6",
														"nodeType": "YulTypedName",
														"src": "3020:5:6",
														"type": ""
													}
												],
												"src": "2974:139:6"
											},
											{
												"body": {
													"nativeSrc": "3202:391:6",
													"nodeType": "YulBlock",
													"src": "3202:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3248:83:6",
																"nodeType": "YulBlock",
																"src": "3248:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3250:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3250:77:6"
																			},
																			"nativeSrc": "3250:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3250:79:6"
																		},
																		"nativeSrc": "3250:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3250:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3223:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3223:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3219:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:6"
																		},
																		"nativeSrc": "3219:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3215:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:6"
																},
																"nativeSrc": "3215:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3215:32:6"
															},
															"nativeSrc": "3212:119:6",
															"nodeType": "YulIf",
															"src": "3212:119:6"
														},
														{
															"nativeSrc": "3341:117:6",
															"nodeType": "YulBlock",
															"src": "3341:117:6",
															"statements": [
																{
																	"nativeSrc": "3356:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3356:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3370:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3370:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3360:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3360:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3385:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3385:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3420:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3420:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3431:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3431:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3416:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3416:3:6"
																				},
																				"nativeSrc": "3416:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3440:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3440:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3395:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3395:20:6"
																		},
																		"nativeSrc": "3395:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3385:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3468:118:6",
															"nodeType": "YulBlock",
															"src": "3468:118:6",
															"statements": [
																{
																	"nativeSrc": "3483:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3483:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3497:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3487:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3487:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3513:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3513:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3548:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3559:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3544:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:6"
																				},
																				"nativeSrc": "3544:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3568:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3523:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:6"
																		},
																		"nativeSrc": "3523:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3513:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3119:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3164:9:6",
														"nodeType": "YulTypedName",
														"src": "3164:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3175:7:6",
														"nodeType": "YulTypedName",
														"src": "3175:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3187:6:6",
														"nodeType": "YulTypedName",
														"src": "3187:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:6",
														"nodeType": "YulTypedName",
														"src": "3195:6:6",
														"type": ""
													}
												],
												"src": "3119:474:6"
											},
											{
												"body": {
													"nativeSrc": "3641:48:6",
													"nodeType": "YulBlock",
													"src": "3641:48:6",
													"statements": [
														{
															"nativeSrc": "3651:32:6",
															"nodeType": "YulAssignment",
															"src": "3651:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3676:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3676:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3669:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:6"
																		},
																		"nativeSrc": "3669:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3669:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3662:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:6"
																},
																"nativeSrc": "3662:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3662:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3651:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3651:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3599:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:6",
														"nodeType": "YulTypedName",
														"src": "3623:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3633:7:6",
														"nodeType": "YulTypedName",
														"src": "3633:7:6",
														"type": ""
													}
												],
												"src": "3599:90:6"
											},
											{
												"body": {
													"nativeSrc": "3754:50:6",
													"nodeType": "YulBlock",
													"src": "3754:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3771:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3776:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3776:14:6"
																		},
																		"nativeSrc": "3776:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3764:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:6"
																},
																"nativeSrc": "3764:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3764:34:6"
															},
															"nativeSrc": "3764:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3764:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3695:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3742:5:6",
														"nodeType": "YulTypedName",
														"src": "3742:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3749:3:6",
														"nodeType": "YulTypedName",
														"src": "3749:3:6",
														"type": ""
													}
												],
												"src": "3695:109:6"
											},
											{
												"body": {
													"nativeSrc": "3902:118:6",
													"nodeType": "YulBlock",
													"src": "3902:118:6",
													"statements": [
														{
															"nativeSrc": "3912:26:6",
															"nodeType": "YulAssignment",
															"src": "3912:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3924:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3924:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3935:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3935:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:6"
																		},
																		"nativeSrc": "3995:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3948:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3948:37:6"
																},
																"nativeSrc": "3948:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3948:65:6"
															},
															"nativeSrc": "3948:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3948:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3810:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3874:9:6",
														"nodeType": "YulTypedName",
														"src": "3874:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3886:6:6",
														"nodeType": "YulTypedName",
														"src": "3886:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3897:4:6",
														"nodeType": "YulTypedName",
														"src": "3897:4:6",
														"type": ""
													}
												],
												"src": "3810:210:6"
											},
											{
												"body": {
													"nativeSrc": "4092:263:6",
													"nodeType": "YulBlock",
													"src": "4092:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4138:83:6",
																"nodeType": "YulBlock",
																"src": "4138:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4140:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4140:77:6"
																			},
																			"nativeSrc": "4140:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4140:79:6"
																		},
																		"nativeSrc": "4140:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4140:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4113:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4113:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4122:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4109:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4109:3:6"
																		},
																		"nativeSrc": "4109:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4109:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4134:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4105:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:6"
																},
																"nativeSrc": "4105:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4105:32:6"
															},
															"nativeSrc": "4102:119:6",
															"nodeType": "YulIf",
															"src": "4102:119:6"
														},
														{
															"nativeSrc": "4231:117:6",
															"nodeType": "YulBlock",
															"src": "4231:117:6",
															"statements": [
																{
																	"nativeSrc": "4246:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4246:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4260:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4260:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4250:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4250:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4275:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4275:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4310:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4310:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4321:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4321:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4306:3:6"
																				},
																				"nativeSrc": "4306:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4306:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4330:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4330:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4285:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4285:20:6"
																		},
																		"nativeSrc": "4285:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4275:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4275:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4026:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4062:9:6",
														"nodeType": "YulTypedName",
														"src": "4062:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4073:7:6",
														"nodeType": "YulTypedName",
														"src": "4073:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4085:6:6",
														"nodeType": "YulTypedName",
														"src": "4085:6:6",
														"type": ""
													}
												],
												"src": "4026:329:6"
											},
											{
												"body": {
													"nativeSrc": "4461:519:6",
													"nodeType": "YulBlock",
													"src": "4461:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4507:83:6",
																"nodeType": "YulBlock",
																"src": "4507:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4509:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4509:77:6"
																			},
																			"nativeSrc": "4509:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4509:79:6"
																		},
																		"nativeSrc": "4509:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4509:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4482:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4482:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4491:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4478:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:6"
																		},
																		"nativeSrc": "4478:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4478:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4503:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4474:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4474:3:6"
																},
																"nativeSrc": "4474:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4474:32:6"
															},
															"nativeSrc": "4471:119:6",
															"nodeType": "YulIf",
															"src": "4471:119:6"
														},
														{
															"nativeSrc": "4600:117:6",
															"nodeType": "YulBlock",
															"src": "4600:117:6",
															"statements": [
																{
																	"nativeSrc": "4615:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4615:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4629:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4619:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4619:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4644:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4644:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4679:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4679:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4690:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4690:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4675:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:6"
																				},
																				"nativeSrc": "4675:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4699:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4699:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4654:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4654:20:6"
																		},
																		"nativeSrc": "4654:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4654:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4644:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4644:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4727:118:6",
															"nodeType": "YulBlock",
															"src": "4727:118:6",
															"statements": [
																{
																	"nativeSrc": "4742:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4742:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4756:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4756:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4746:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4746:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4772:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4772:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4807:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4807:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4818:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4818:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4803:3:6"
																				},
																				"nativeSrc": "4803:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4803:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4827:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4827:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4782:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4782:20:6"
																		},
																		"nativeSrc": "4782:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4782:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4772:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4772:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4855:118:6",
															"nodeType": "YulBlock",
															"src": "4855:118:6",
															"statements": [
																{
																	"nativeSrc": "4870:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4870:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4884:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4884:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4874:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4874:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4900:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4900:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4935:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4935:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4946:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4946:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4931:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4931:3:6"
																				},
																				"nativeSrc": "4931:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4931:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4955:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4955:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4910:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4910:20:6"
																		},
																		"nativeSrc": "4910:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4900:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4900:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4361:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4415:9:6",
														"nodeType": "YulTypedName",
														"src": "4415:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4426:7:6",
														"nodeType": "YulTypedName",
														"src": "4426:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4438:6:6",
														"nodeType": "YulTypedName",
														"src": "4438:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4446:6:6",
														"nodeType": "YulTypedName",
														"src": "4446:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4454:6:6",
														"nodeType": "YulTypedName",
														"src": "4454:6:6",
														"type": ""
													}
												],
												"src": "4361:619:6"
											},
											{
												"body": {
													"nativeSrc": "5029:43:6",
													"nodeType": "YulBlock",
													"src": "5029:43:6",
													"statements": [
														{
															"nativeSrc": "5039:27:6",
															"nodeType": "YulAssignment",
															"src": "5039:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5054:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5054:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5061:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5061:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5050:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5050:3:6"
																},
																"nativeSrc": "5050:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5050:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5039:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5039:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4986:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5011:5:6",
														"nodeType": "YulTypedName",
														"src": "5011:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5021:7:6",
														"nodeType": "YulTypedName",
														"src": "5021:7:6",
														"type": ""
													}
												],
												"src": "4986:86:6"
											},
											{
												"body": {
													"nativeSrc": "5139:51:6",
													"nodeType": "YulBlock",
													"src": "5139:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5156:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5177:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5177:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5161:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "5161:15:6"
																		},
																		"nativeSrc": "5161:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5149:6:6"
																},
																"nativeSrc": "5149:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5149:35:6"
															},
															"nativeSrc": "5149:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5149:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5078:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5127:5:6",
														"nodeType": "YulTypedName",
														"src": "5127:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5134:3:6",
														"nodeType": "YulTypedName",
														"src": "5134:3:6",
														"type": ""
													}
												],
												"src": "5078:112:6"
											},
											{
												"body": {
													"nativeSrc": "5290:120:6",
													"nodeType": "YulBlock",
													"src": "5290:120:6",
													"statements": [
														{
															"nativeSrc": "5300:26:6",
															"nodeType": "YulAssignment",
															"src": "5300:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5312:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5312:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5323:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5323:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5308:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:6"
																},
																"nativeSrc": "5308:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5308:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5300:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5376:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5389:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5400:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5400:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5385:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:6"
																		},
																		"nativeSrc": "5385:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5385:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5336:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "5336:39:6"
																},
																"nativeSrc": "5336:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5336:67:6"
															},
															"nativeSrc": "5336:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5336:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5196:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5262:9:6",
														"nodeType": "YulTypedName",
														"src": "5262:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5274:6:6",
														"nodeType": "YulTypedName",
														"src": "5274:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5285:4:6",
														"nodeType": "YulTypedName",
														"src": "5285:4:6",
														"type": ""
													}
												],
												"src": "5196:214:6"
											},
											{
												"body": {
													"nativeSrc": "5490:40:6",
													"nodeType": "YulBlock",
													"src": "5490:40:6",
													"statements": [
														{
															"nativeSrc": "5501:22:6",
															"nodeType": "YulAssignment",
															"src": "5501:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5517:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5517:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5511:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5511:5:6"
																},
																"nativeSrc": "5511:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5511:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5501:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5416:114:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5473:5:6",
														"nodeType": "YulTypedName",
														"src": "5473:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5483:6:6",
														"nodeType": "YulTypedName",
														"src": "5483:6:6",
														"type": ""
													}
												],
												"src": "5416:114:6"
											},
											{
												"body": {
													"nativeSrc": "5647:73:6",
													"nodeType": "YulBlock",
													"src": "5647:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5664:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5664:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5669:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5669:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:6"
																},
																"nativeSrc": "5657:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5657:19:6"
															},
															"nativeSrc": "5657:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "5657:19:6"
														},
														{
															"nativeSrc": "5685:29:6",
															"nodeType": "YulAssignment",
															"src": "5685:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5704:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5704:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5709:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5709:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5700:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5700:3:6"
																},
																"nativeSrc": "5700:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5700:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5685:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "5685:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5536:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5619:3:6",
														"nodeType": "YulTypedName",
														"src": "5619:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5624:6:6",
														"nodeType": "YulTypedName",
														"src": "5624:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5635:11:6",
														"nodeType": "YulTypedName",
														"src": "5635:11:6",
														"type": ""
													}
												],
												"src": "5536:184:6"
											},
											{
												"body": {
													"nativeSrc": "5798:60:6",
													"nodeType": "YulBlock",
													"src": "5798:60:6",
													"statements": [
														{
															"nativeSrc": "5808:11:6",
															"nodeType": "YulAssignment",
															"src": "5808:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "5816:3:6",
																"nodeType": "YulIdentifier",
																"src": "5816:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5808:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5808:4:6"
																}
															]
														},
														{
															"nativeSrc": "5829:22:6",
															"nodeType": "YulAssignment",
															"src": "5829:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5841:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5841:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5846:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5846:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5837:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5837:3:6"
																},
																"nativeSrc": "5837:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5837:14:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5829:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5829:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5726:132:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5785:3:6",
														"nodeType": "YulTypedName",
														"src": "5785:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5793:4:6",
														"nodeType": "YulTypedName",
														"src": "5793:4:6",
														"type": ""
													}
												],
												"src": "5726:132:6"
											},
											{
												"body": {
													"nativeSrc": "5919:53:6",
													"nodeType": "YulBlock",
													"src": "5919:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5936:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5936:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5959:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5959:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5941:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5941:17:6"
																		},
																		"nativeSrc": "5941:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5941:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5929:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5929:6:6"
																},
																"nativeSrc": "5929:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5929:37:6"
															},
															"nativeSrc": "5929:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5929:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "5864:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5907:5:6",
														"nodeType": "YulTypedName",
														"src": "5907:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5914:3:6",
														"nodeType": "YulTypedName",
														"src": "5914:3:6",
														"type": ""
													}
												],
												"src": "5864:108:6"
											},
											{
												"body": {
													"nativeSrc": "6058:99:6",
													"nodeType": "YulBlock",
													"src": "6058:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6102:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6102:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6110:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6110:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "6068:33:6",
																	"nodeType": "YulIdentifier",
																	"src": "6068:33:6"
																},
																"nativeSrc": "6068:46:6",
																"nodeType": "YulFunctionCall",
																"src": "6068:46:6"
															},
															"nativeSrc": "6068:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "6068:46:6"
														},
														{
															"nativeSrc": "6123:28:6",
															"nodeType": "YulAssignment",
															"src": "6123:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6141:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6141:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6146:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6146:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6137:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6137:3:6"
																},
																"nativeSrc": "6137:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6137:14:6"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6123:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "6123:10:6"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "5978:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6031:6:6",
														"nodeType": "YulTypedName",
														"src": "6031:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6039:3:6",
														"nodeType": "YulTypedName",
														"src": "6039:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6047:10:6",
														"nodeType": "YulTypedName",
														"src": "6047:10:6",
														"type": ""
													}
												],
												"src": "5978:179:6"
											},
											{
												"body": {
													"nativeSrc": "6238:38:6",
													"nodeType": "YulBlock",
													"src": "6238:38:6",
													"statements": [
														{
															"nativeSrc": "6248:22:6",
															"nodeType": "YulAssignment",
															"src": "6248:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6260:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6260:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6265:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6265:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6256:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6256:3:6"
																},
																"nativeSrc": "6256:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6256:14:6"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6248:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6248:4:6"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6163:113:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6225:3:6",
														"nodeType": "YulTypedName",
														"src": "6225:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6233:4:6",
														"nodeType": "YulTypedName",
														"src": "6233:4:6",
														"type": ""
													}
												],
												"src": "6163:113:6"
											},
											{
												"body": {
													"nativeSrc": "6436:608:6",
													"nodeType": "YulBlock",
													"src": "6436:608:6",
													"statements": [
														{
															"nativeSrc": "6446:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6446:68:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6508:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6508:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6460:47:6",
																	"nodeType": "YulIdentifier",
																	"src": "6460:47:6"
																},
																"nativeSrc": "6460:54:6",
																"nodeType": "YulFunctionCall",
																"src": "6460:54:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6450:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6450:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6523:93:6",
															"nodeType": "YulAssignment",
															"src": "6523:93:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6604:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6604:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6609:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6609:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6530:73:6",
																	"nodeType": "YulIdentifier",
																	"src": "6530:73:6"
																},
																"nativeSrc": "6530:86:6",
																"nodeType": "YulFunctionCall",
																"src": "6530:86:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6523:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6523:3:6"
																}
															]
														},
														{
															"nativeSrc": "6625:71:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6625:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6690:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6690:5:6"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6640:49:6",
																	"nodeType": "YulIdentifier",
																	"src": "6640:49:6"
																},
																"nativeSrc": "6640:56:6",
																"nodeType": "YulFunctionCall",
																"src": "6640:56:6"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6629:7:6",
																	"nodeType": "YulTypedName",
																	"src": "6629:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6705:21:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6705:21:6",
															"value": {
																"name": "baseRef",
																"nativeSrc": "6719:7:6",
																"nodeType": "YulIdentifier",
																"src": "6719:7:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6709:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6709:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6795:224:6",
																"nodeType": "YulBlock",
																"src": "6795:224:6",
																"statements": [
																	{
																		"nativeSrc": "6809:34:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6809:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6836:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6836:6:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6830:5:6"
																			},
																			"nativeSrc": "6830:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6830:13:6"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "6813:13:6",
																				"nodeType": "YulTypedName",
																				"src": "6813:13:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6856:70:6",
																		"nodeType": "YulAssignment",
																		"src": "6856:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "6907:13:6",
																					"nodeType": "YulIdentifier",
																					"src": "6907:13:6"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "6922:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6922:3:6"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "6863:43:6",
																				"nodeType": "YulIdentifier",
																				"src": "6863:43:6"
																			},
																			"nativeSrc": "6863:63:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6863:63:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6856:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6856:3:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6939:70:6",
																		"nodeType": "YulAssignment",
																		"src": "6939:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7002:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7002:6:6"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "6949:52:6",
																				"nodeType": "YulIdentifier",
																				"src": "6949:52:6"
																			},
																			"nativeSrc": "6949:60:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6949:60:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6939:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6939:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6757:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6757:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6760:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6760:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6754:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6754:2:6"
																},
																"nativeSrc": "6754:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6754:13:6"
															},
															"nativeSrc": "6735:284:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6768:18:6",
																"nodeType": "YulBlock",
																"src": "6768:18:6",
																"statements": [
																	{
																		"nativeSrc": "6770:14:6",
																		"nodeType": "YulAssignment",
																		"src": "6770:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6779:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "6779:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6782:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6782:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6775:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6775:3:6"
																			},
																			"nativeSrc": "6775:9:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6775:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6770:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6770:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6739:14:6",
																"nodeType": "YulBlock",
																"src": "6739:14:6",
																"statements": [
																	{
																		"nativeSrc": "6741:10:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6741:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6750:1:6",
																			"nodeType": "YulLiteral",
																			"src": "6750:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "6745:1:6",
																				"nodeType": "YulTypedName",
																				"src": "6745:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6735:284:6"
														},
														{
															"nativeSrc": "7028:10:6",
															"nodeType": "YulAssignment",
															"src": "7028:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "7035:3:6",
																"nodeType": "YulIdentifier",
																"src": "7035:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7028:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7028:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6312:732:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6415:5:6",
														"nodeType": "YulTypedName",
														"src": "6415:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6422:3:6",
														"nodeType": "YulTypedName",
														"src": "6422:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6431:3:6",
														"nodeType": "YulTypedName",
														"src": "6431:3:6",
														"type": ""
													}
												],
												"src": "6312:732:6"
											},
											{
												"body": {
													"nativeSrc": "7198:225:6",
													"nodeType": "YulBlock",
													"src": "7198:225:6",
													"statements": [
														{
															"nativeSrc": "7208:26:6",
															"nodeType": "YulAssignment",
															"src": "7208:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7220:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7220:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7231:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7216:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7216:3:6"
																},
																"nativeSrc": "7216:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7216:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7208:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7208:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7255:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7255:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7266:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7266:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7251:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7251:3:6"
																		},
																		"nativeSrc": "7251:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7274:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7274:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7280:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7280:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7270:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7270:3:6"
																		},
																		"nativeSrc": "7270:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7270:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7244:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7244:6:6"
																},
																"nativeSrc": "7244:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7244:47:6"
															},
															"nativeSrc": "7244:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7244:47:6"
														},
														{
															"nativeSrc": "7300:116:6",
															"nodeType": "YulAssignment",
															"src": "7300:116:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7402:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7411:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7411:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7308:93:6",
																	"nodeType": "YulIdentifier",
																	"src": "7308:93:6"
																},
																"nativeSrc": "7308:108:6",
																"nodeType": "YulFunctionCall",
																"src": "7308:108:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7300:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7300:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7050:373:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7170:9:6",
														"nodeType": "YulTypedName",
														"src": "7170:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7182:6:6",
														"nodeType": "YulTypedName",
														"src": "7182:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7193:4:6",
														"nodeType": "YulTypedName",
														"src": "7193:4:6",
														"type": ""
													}
												],
												"src": "7050:373:6"
											},
											{
												"body": {
													"nativeSrc": "7512:391:6",
													"nodeType": "YulBlock",
													"src": "7512:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7558:83:6",
																"nodeType": "YulBlock",
																"src": "7558:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7560:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7560:77:6"
																			},
																			"nativeSrc": "7560:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7560:79:6"
																		},
																		"nativeSrc": "7560:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7560:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7533:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7533:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7542:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7529:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7529:3:6"
																		},
																		"nativeSrc": "7529:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7554:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7554:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:6"
																},
																"nativeSrc": "7525:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7525:32:6"
															},
															"nativeSrc": "7522:119:6",
															"nodeType": "YulIf",
															"src": "7522:119:6"
														},
														{
															"nativeSrc": "7651:117:6",
															"nodeType": "YulBlock",
															"src": "7651:117:6",
															"statements": [
																{
																	"nativeSrc": "7666:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7666:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7680:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7680:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7670:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7670:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7695:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7695:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7730:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7730:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7741:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7741:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7726:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7726:3:6"
																				},
																				"nativeSrc": "7726:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7726:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7750:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7750:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7705:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7705:20:6"
																		},
																		"nativeSrc": "7705:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7705:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7695:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7695:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7778:118:6",
															"nodeType": "YulBlock",
															"src": "7778:118:6",
															"statements": [
																{
																	"nativeSrc": "7793:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7793:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7807:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7807:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7797:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7797:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7823:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7823:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7858:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7858:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7869:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7869:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7854:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7854:3:6"
																				},
																				"nativeSrc": "7854:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7854:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7878:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7878:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7833:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7833:20:6"
																		},
																		"nativeSrc": "7833:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7833:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7823:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7823:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7429:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7474:9:6",
														"nodeType": "YulTypedName",
														"src": "7474:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7485:7:6",
														"nodeType": "YulTypedName",
														"src": "7485:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7497:6:6",
														"nodeType": "YulTypedName",
														"src": "7497:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7505:6:6",
														"nodeType": "YulTypedName",
														"src": "7505:6:6",
														"type": ""
													}
												],
												"src": "7429:474:6"
											},
											{
												"body": {
													"nativeSrc": "7937:152:6",
													"nodeType": "YulBlock",
													"src": "7937:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7954:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7954:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7957:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7957:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7947:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:6"
																},
																"nativeSrc": "7947:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7947:88:6"
															},
															"nativeSrc": "7947:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7947:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8051:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8051:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8054:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8054:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8044:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:6"
																},
																"nativeSrc": "8044:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8044:15:6"
															},
															"nativeSrc": "8044:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8044:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8078:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8078:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8068:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8068:6:6"
																},
																"nativeSrc": "8068:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8068:15:6"
															},
															"nativeSrc": "8068:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8068:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7909:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7909:180:6"
											},
											{
												"body": {
													"nativeSrc": "8146:269:6",
													"nodeType": "YulBlock",
													"src": "8146:269:6",
													"statements": [
														{
															"nativeSrc": "8156:22:6",
															"nodeType": "YulAssignment",
															"src": "8156:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8170:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8170:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8176:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8176:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:6"
																},
																"nativeSrc": "8166:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8166:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8156:6:6"
																}
															]
														},
														{
															"nativeSrc": "8187:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8187:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8217:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8217:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8223:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8223:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8213:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8213:3:6"
																},
																"nativeSrc": "8213:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8213:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8191:18:6",
																	"nodeType": "YulTypedName",
																	"src": "8191:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8264:51:6",
																"nodeType": "YulBlock",
																"src": "8264:51:6",
																"statements": [
																	{
																		"nativeSrc": "8278:27:6",
																		"nodeType": "YulAssignment",
																		"src": "8278:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8292:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8292:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8300:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8300:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8288:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8288:3:6"
																			},
																			"nativeSrc": "8288:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8288:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8278:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8278:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8244:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "8244:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8237:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8237:6:6"
																},
																"nativeSrc": "8237:26:6",
																"nodeType": "YulFunctionCall",
																"src": "8237:26:6"
															},
															"nativeSrc": "8234:81:6",
															"nodeType": "YulIf",
															"src": "8234:81:6"
														},
														{
															"body": {
																"nativeSrc": "8367:42:6",
																"nodeType": "YulBlock",
																"src": "8367:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8381:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8381:16:6"
																			},
																			"nativeSrc": "8381:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8381:18:6"
																		},
																		"nativeSrc": "8381:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8381:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8331:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "8331:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8354:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8354:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8362:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8362:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8351:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8351:2:6"
																		},
																		"nativeSrc": "8351:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8351:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8328:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8328:2:6"
																},
																"nativeSrc": "8328:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8328:38:6"
															},
															"nativeSrc": "8325:84:6",
															"nodeType": "YulIf",
															"src": "8325:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8095:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8130:4:6",
														"nodeType": "YulTypedName",
														"src": "8130:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8139:6:6",
														"nodeType": "YulTypedName",
														"src": "8139:6:6",
														"type": ""
													}
												],
												"src": "8095:320:6"
											},
											{
												"body": {
													"nativeSrc": "8527:54:6",
													"nodeType": "YulBlock",
													"src": "8527:54:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8549:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8549:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8557:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8557:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8545:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8545:3:6"
																		},
																		"nativeSrc": "8545:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8545:14:6"
																	},
																	{
																		"hexValue": "4e6f74206f776e657221",
																		"kind": "string",
																		"nativeSrc": "8561:12:6",
																		"nodeType": "YulLiteral",
																		"src": "8561:12:6",
																		"type": "",
																		"value": "Not owner!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8538:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8538:6:6"
																},
																"nativeSrc": "8538:36:6",
																"nodeType": "YulFunctionCall",
																"src": "8538:36:6"
															},
															"nativeSrc": "8538:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "8538:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
												"nativeSrc": "8421:160:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8519:6:6",
														"nodeType": "YulTypedName",
														"src": "8519:6:6",
														"type": ""
													}
												],
												"src": "8421:160:6"
											},
											{
												"body": {
													"nativeSrc": "8733:220:6",
													"nodeType": "YulBlock",
													"src": "8733:220:6",
													"statements": [
														{
															"nativeSrc": "8743:74:6",
															"nodeType": "YulAssignment",
															"src": "8743:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8809:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8809:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8814:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8814:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8750:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8750:58:6"
																},
																"nativeSrc": "8750:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8750:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8743:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8743:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8915:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8915:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
																	"nativeSrc": "8826:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8826:88:6"
																},
																"nativeSrc": "8826:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8826:93:6"
															},
															"nativeSrc": "8826:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8826:93:6"
														},
														{
															"nativeSrc": "8928:19:6",
															"nodeType": "YulAssignment",
															"src": "8928:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8939:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8939:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8944:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8944:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8935:3:6"
																},
																"nativeSrc": "8935:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8935:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8928:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8928:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8587:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8721:3:6",
														"nodeType": "YulTypedName",
														"src": "8721:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8729:3:6",
														"nodeType": "YulTypedName",
														"src": "8729:3:6",
														"type": ""
													}
												],
												"src": "8587:366:6"
											},
											{
												"body": {
													"nativeSrc": "9130:248:6",
													"nodeType": "YulBlock",
													"src": "9130:248:6",
													"statements": [
														{
															"nativeSrc": "9140:26:6",
															"nodeType": "YulAssignment",
															"src": "9140:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9148:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9148:3:6"
																},
																"nativeSrc": "9148:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9148:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9140:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9140:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9187:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9198:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9198:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9183:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:6"
																		},
																		"nativeSrc": "9183:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9183:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9206:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9206:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9212:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9212:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9202:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9202:3:6"
																		},
																		"nativeSrc": "9202:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9202:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9176:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:6"
																},
																"nativeSrc": "9176:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9176:47:6"
															},
															"nativeSrc": "9176:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9176:47:6"
														},
														{
															"nativeSrc": "9232:139:6",
															"nodeType": "YulAssignment",
															"src": "9232:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9366:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9366:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9240:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9240:124:6"
																},
																"nativeSrc": "9240:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9240:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9232:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9232:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8959:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9110:9:6",
														"nodeType": "YulTypedName",
														"src": "9110:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9125:4:6",
														"nodeType": "YulTypedName",
														"src": "9125:4:6",
														"type": ""
													}
												],
												"src": "8959:419:6"
											},
											{
												"body": {
													"nativeSrc": "9412:152:6",
													"nodeType": "YulBlock",
													"src": "9412:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9432:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9432:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9422:6:6"
																},
																"nativeSrc": "9422:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9422:88:6"
															},
															"nativeSrc": "9422:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9422:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9526:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9526:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9529:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9529:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9519:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9519:6:6"
																},
																"nativeSrc": "9519:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9519:15:6"
															},
															"nativeSrc": "9519:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9519:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9550:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9550:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9553:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9553:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9543:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9543:6:6"
																},
																"nativeSrc": "9543:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9543:15:6"
															},
															"nativeSrc": "9543:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9543:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9384:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9384:180:6"
											},
											{
												"body": {
													"nativeSrc": "9618:362:6",
													"nodeType": "YulBlock",
													"src": "9618:362:6",
													"statements": [
														{
															"nativeSrc": "9628:25:6",
															"nodeType": "YulAssignment",
															"src": "9628:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9651:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9651:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9633:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9633:17:6"
																},
																"nativeSrc": "9633:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9633:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9628:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9628:1:6"
																}
															]
														},
														{
															"nativeSrc": "9662:25:6",
															"nodeType": "YulAssignment",
															"src": "9662:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9685:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9685:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9667:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9667:17:6"
																},
																"nativeSrc": "9667:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9667:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9662:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9662:1:6"
																}
															]
														},
														{
															"nativeSrc": "9696:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9696:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9719:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9719:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9722:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9722:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9715:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9715:3:6"
																},
																"nativeSrc": "9715:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9715:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9700:11:6",
																	"nodeType": "YulTypedName",
																	"src": "9700:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9733:41:6",
															"nodeType": "YulAssignment",
															"src": "9733:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9762:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "9762:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9744:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9744:17:6"
																},
																"nativeSrc": "9744:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9744:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9733:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9733:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9951:22:6",
																"nodeType": "YulBlock",
																"src": "9951:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9953:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9953:16:6"
																			},
																			"nativeSrc": "9953:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9953:18:6"
																		},
																		"nativeSrc": "9953:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9953:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9884:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9884:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9877:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9877:6:6"
																				},
																				"nativeSrc": "9877:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9877:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9907:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9907:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9914:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "9914:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9923:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "9923:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9910:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9910:3:6"
																						},
																						"nativeSrc": "9910:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9910:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9904:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "9904:2:6"
																				},
																				"nativeSrc": "9904:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9904:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9857:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9857:2:6"
																		},
																		"nativeSrc": "9857:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9857:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9837:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9837:6:6"
																},
																"nativeSrc": "9837:113:6",
																"nodeType": "YulFunctionCall",
																"src": "9837:113:6"
															},
															"nativeSrc": "9834:139:6",
															"nodeType": "YulIf",
															"src": "9834:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9570:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9601:1:6",
														"nodeType": "YulTypedName",
														"src": "9601:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9604:1:6",
														"nodeType": "YulTypedName",
														"src": "9604:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9610:7:6",
														"nodeType": "YulTypedName",
														"src": "9610:7:6",
														"type": ""
													}
												],
												"src": "9570:410:6"
											},
											{
												"body": {
													"nativeSrc": "10092:69:6",
													"nodeType": "YulBlock",
													"src": "10092:69:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10114:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10114:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10122:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10122:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10110:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10110:3:6"
																		},
																		"nativeSrc": "10110:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10110:14:6"
																	},
																	{
																		"hexValue": "41646472657373207a65726f206e6f7420616c6c6f77656421",
																		"kind": "string",
																		"nativeSrc": "10126:27:6",
																		"nodeType": "YulLiteral",
																		"src": "10126:27:6",
																		"type": "",
																		"value": "Address zero not allowed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10103:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10103:6:6"
																},
																"nativeSrc": "10103:51:6",
																"nodeType": "YulFunctionCall",
																"src": "10103:51:6"
															},
															"nativeSrc": "10103:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "10103:51:6"
														}
													]
												},
												"name": "store_literal_in_memory_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba",
												"nativeSrc": "9986:175:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10084:6:6",
														"nodeType": "YulTypedName",
														"src": "10084:6:6",
														"type": ""
													}
												],
												"src": "9986:175:6"
											},
											{
												"body": {
													"nativeSrc": "10313:220:6",
													"nodeType": "YulBlock",
													"src": "10313:220:6",
													"statements": [
														{
															"nativeSrc": "10323:74:6",
															"nodeType": "YulAssignment",
															"src": "10323:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10389:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10389:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10394:2:6",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10330:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10330:58:6"
																},
																"nativeSrc": "10330:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10330:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10323:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10323:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10495:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10495:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba",
																	"nativeSrc": "10406:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10406:88:6"
																},
																"nativeSrc": "10406:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10406:93:6"
															},
															"nativeSrc": "10406:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10406:93:6"
														},
														{
															"nativeSrc": "10508:19:6",
															"nodeType": "YulAssignment",
															"src": "10508:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10519:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10519:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10524:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10524:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10515:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10515:3:6"
																},
																"nativeSrc": "10515:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10515:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10508:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10167:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10301:3:6",
														"nodeType": "YulTypedName",
														"src": "10301:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10309:3:6",
														"nodeType": "YulTypedName",
														"src": "10309:3:6",
														"type": ""
													}
												],
												"src": "10167:366:6"
											},
											{
												"body": {
													"nativeSrc": "10710:248:6",
													"nodeType": "YulBlock",
													"src": "10710:248:6",
													"statements": [
														{
															"nativeSrc": "10720:26:6",
															"nodeType": "YulAssignment",
															"src": "10720:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10732:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10732:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10743:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10743:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10728:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:6"
																},
																"nativeSrc": "10728:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10728:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10720:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10720:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10767:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10767:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10778:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10778:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10763:3:6"
																		},
																		"nativeSrc": "10763:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10763:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10786:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10786:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10792:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10792:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10782:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10782:3:6"
																		},
																		"nativeSrc": "10782:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10782:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10756:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10756:6:6"
																},
																"nativeSrc": "10756:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10756:47:6"
															},
															"nativeSrc": "10756:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10756:47:6"
														},
														{
															"nativeSrc": "10812:139:6",
															"nodeType": "YulAssignment",
															"src": "10812:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10946:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10946:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10820:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10820:124:6"
																},
																"nativeSrc": "10820:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10820:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10812:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10812:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10539:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10690:9:6",
														"nodeType": "YulTypedName",
														"src": "10690:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10705:4:6",
														"nodeType": "YulTypedName",
														"src": "10705:4:6",
														"type": ""
													}
												],
												"src": "10539:419:6"
											},
											{
												"body": {
													"nativeSrc": "11070:60:6",
													"nodeType": "YulBlock",
													"src": "11070:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11092:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11092:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11100:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11100:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11088:3:6"
																		},
																		"nativeSrc": "11088:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11088:14:6"
																	},
																	{
																		"hexValue": "4164647265737320436c61696d656421",
																		"kind": "string",
																		"nativeSrc": "11104:18:6",
																		"nodeType": "YulLiteral",
																		"src": "11104:18:6",
																		"type": "",
																		"value": "Address Claimed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11081:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11081:6:6"
																},
																"nativeSrc": "11081:42:6",
																"nodeType": "YulFunctionCall",
																"src": "11081:42:6"
															},
															"nativeSrc": "11081:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "11081:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8",
												"nativeSrc": "10964:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11062:6:6",
														"nodeType": "YulTypedName",
														"src": "11062:6:6",
														"type": ""
													}
												],
												"src": "10964:166:6"
											},
											{
												"body": {
													"nativeSrc": "11282:220:6",
													"nodeType": "YulBlock",
													"src": "11282:220:6",
													"statements": [
														{
															"nativeSrc": "11292:74:6",
															"nodeType": "YulAssignment",
															"src": "11292:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11358:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11358:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11363:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11363:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11299:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11299:58:6"
																},
																"nativeSrc": "11299:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11299:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11292:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11292:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11464:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11464:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8",
																	"nativeSrc": "11375:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11375:88:6"
																},
																"nativeSrc": "11375:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11375:93:6"
															},
															"nativeSrc": "11375:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11375:93:6"
														},
														{
															"nativeSrc": "11477:19:6",
															"nodeType": "YulAssignment",
															"src": "11477:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11488:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11488:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11493:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11493:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11484:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11484:3:6"
																},
																"nativeSrc": "11484:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11484:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11477:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11477:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11136:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11270:3:6",
														"nodeType": "YulTypedName",
														"src": "11270:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11278:3:6",
														"nodeType": "YulTypedName",
														"src": "11278:3:6",
														"type": ""
													}
												],
												"src": "11136:366:6"
											},
											{
												"body": {
													"nativeSrc": "11679:248:6",
													"nodeType": "YulBlock",
													"src": "11679:248:6",
													"statements": [
														{
															"nativeSrc": "11689:26:6",
															"nodeType": "YulAssignment",
															"src": "11689:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11701:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11701:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11712:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11712:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11697:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11697:3:6"
																},
																"nativeSrc": "11697:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11697:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11689:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11689:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11736:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11736:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11747:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11747:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11732:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11732:3:6"
																		},
																		"nativeSrc": "11732:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11732:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11755:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11755:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11761:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11761:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11751:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11751:3:6"
																		},
																		"nativeSrc": "11751:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11751:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11725:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11725:6:6"
																},
																"nativeSrc": "11725:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11725:47:6"
															},
															"nativeSrc": "11725:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11725:47:6"
														},
														{
															"nativeSrc": "11781:139:6",
															"nodeType": "YulAssignment",
															"src": "11781:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11915:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11915:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11789:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11789:124:6"
																},
																"nativeSrc": "11789:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11789:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11781:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11781:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11508:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11659:9:6",
														"nodeType": "YulTypedName",
														"src": "11659:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11674:4:6",
														"nodeType": "YulTypedName",
														"src": "11674:4:6",
														"type": ""
													}
												],
												"src": "11508:419:6"
											},
											{
												"body": {
													"nativeSrc": "12039:61:6",
													"nodeType": "YulBlock",
													"src": "12039:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12061:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12061:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12069:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12069:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12057:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12057:3:6"
																		},
																		"nativeSrc": "12057:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12057:14:6"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420656e6f75676821",
																		"kind": "string",
																		"nativeSrc": "12073:19:6",
																		"nodeType": "YulLiteral",
																		"src": "12073:19:6",
																		"type": "",
																		"value": "Token not enough!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12050:6:6"
																},
																"nativeSrc": "12050:43:6",
																"nodeType": "YulFunctionCall",
																"src": "12050:43:6"
															},
															"nativeSrc": "12050:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "12050:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606",
												"nativeSrc": "11933:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12031:6:6",
														"nodeType": "YulTypedName",
														"src": "12031:6:6",
														"type": ""
													}
												],
												"src": "11933:167:6"
											},
											{
												"body": {
													"nativeSrc": "12252:220:6",
													"nodeType": "YulBlock",
													"src": "12252:220:6",
													"statements": [
														{
															"nativeSrc": "12262:74:6",
															"nodeType": "YulAssignment",
															"src": "12262:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12328:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12328:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12333:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12333:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12269:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12269:58:6"
																},
																"nativeSrc": "12269:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12269:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12262:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12262:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12434:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12434:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606",
																	"nativeSrc": "12345:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12345:88:6"
																},
																"nativeSrc": "12345:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12345:93:6"
															},
															"nativeSrc": "12345:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12345:93:6"
														},
														{
															"nativeSrc": "12447:19:6",
															"nodeType": "YulAssignment",
															"src": "12447:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12458:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12458:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12463:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12454:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12454:3:6"
																},
																"nativeSrc": "12454:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12454:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12447:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12447:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12106:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12240:3:6",
														"nodeType": "YulTypedName",
														"src": "12240:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12248:3:6",
														"nodeType": "YulTypedName",
														"src": "12248:3:6",
														"type": ""
													}
												],
												"src": "12106:366:6"
											},
											{
												"body": {
													"nativeSrc": "12649:248:6",
													"nodeType": "YulBlock",
													"src": "12649:248:6",
													"statements": [
														{
															"nativeSrc": "12659:26:6",
															"nodeType": "YulAssignment",
															"src": "12659:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12671:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12671:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12682:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12682:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12667:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12667:3:6"
																},
																"nativeSrc": "12667:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12667:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12659:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12659:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12706:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12706:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12717:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12717:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12702:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12702:3:6"
																		},
																		"nativeSrc": "12702:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12702:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12725:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12725:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12731:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12731:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12721:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12721:3:6"
																		},
																		"nativeSrc": "12721:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12721:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12695:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12695:6:6"
																},
																"nativeSrc": "12695:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12695:47:6"
															},
															"nativeSrc": "12695:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12695:47:6"
														},
														{
															"nativeSrc": "12751:139:6",
															"nodeType": "YulAssignment",
															"src": "12751:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12885:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12885:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12759:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12759:124:6"
																},
																"nativeSrc": "12759:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12759:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12751:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12751:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12478:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12629:9:6",
														"nodeType": "YulTypedName",
														"src": "12629:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12644:4:6",
														"nodeType": "YulTypedName",
														"src": "12644:4:6",
														"type": ""
													}
												],
												"src": "12478:419:6"
											},
											{
												"body": {
													"nativeSrc": "12931:152:6",
													"nodeType": "YulBlock",
													"src": "12931:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12948:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12948:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12951:77:6",
																		"nodeType": "YulLiteral",
																		"src": "12951:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12941:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12941:6:6"
																},
																"nativeSrc": "12941:88:6",
																"nodeType": "YulFunctionCall",
																"src": "12941:88:6"
															},
															"nativeSrc": "12941:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "12941:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13045:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13045:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13048:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13048:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13038:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13038:6:6"
																},
																"nativeSrc": "13038:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13038:15:6"
															},
															"nativeSrc": "13038:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13038:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13069:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13069:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13072:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13072:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13062:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13062:6:6"
																},
																"nativeSrc": "13062:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13062:15:6"
															},
															"nativeSrc": "13062:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13062:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12903:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "12903:180:6"
											},
											{
												"body": {
													"nativeSrc": "13131:143:6",
													"nodeType": "YulBlock",
													"src": "13131:143:6",
													"statements": [
														{
															"nativeSrc": "13141:25:6",
															"nodeType": "YulAssignment",
															"src": "13141:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13164:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13164:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13146:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13146:17:6"
																},
																"nativeSrc": "13146:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13146:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13141:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13141:1:6"
																}
															]
														},
														{
															"nativeSrc": "13175:25:6",
															"nodeType": "YulAssignment",
															"src": "13175:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13198:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13198:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13180:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13180:17:6"
																},
																"nativeSrc": "13180:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13180:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13175:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13175:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13222:22:6",
																"nodeType": "YulBlock",
																"src": "13222:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13224:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13224:16:6"
																			},
																			"nativeSrc": "13224:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13224:18:6"
																		},
																		"nativeSrc": "13224:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13224:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13219:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13219:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13212:6:6"
																},
																"nativeSrc": "13212:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13212:9:6"
															},
															"nativeSrc": "13209:35:6",
															"nodeType": "YulIf",
															"src": "13209:35:6"
														},
														{
															"nativeSrc": "13254:14:6",
															"nodeType": "YulAssignment",
															"src": "13254:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13263:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13263:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13266:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13266:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13259:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13259:3:6"
																},
																"nativeSrc": "13259:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13259:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13254:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13254:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13089:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13120:1:6",
														"nodeType": "YulTypedName",
														"src": "13120:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13123:1:6",
														"nodeType": "YulTypedName",
														"src": "13123:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13129:1:6",
														"nodeType": "YulTypedName",
														"src": "13129:1:6",
														"type": ""
													}
												],
												"src": "13089:185:6"
											},
											{
												"body": {
													"nativeSrc": "13386:61:6",
													"nodeType": "YulBlock",
													"src": "13386:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13408:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13416:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13416:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13404:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13404:3:6"
																		},
																		"nativeSrc": "13404:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13404:14:6"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420456e6f75676821",
																		"kind": "string",
																		"nativeSrc": "13420:19:6",
																		"nodeType": "YulLiteral",
																		"src": "13420:19:6",
																		"type": "",
																		"value": "Token not Enough!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13397:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13397:6:6"
																},
																"nativeSrc": "13397:43:6",
																"nodeType": "YulFunctionCall",
																"src": "13397:43:6"
															},
															"nativeSrc": "13397:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "13397:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083",
												"nativeSrc": "13280:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13378:6:6",
														"nodeType": "YulTypedName",
														"src": "13378:6:6",
														"type": ""
													}
												],
												"src": "13280:167:6"
											},
											{
												"body": {
													"nativeSrc": "13599:220:6",
													"nodeType": "YulBlock",
													"src": "13599:220:6",
													"statements": [
														{
															"nativeSrc": "13609:74:6",
															"nodeType": "YulAssignment",
															"src": "13609:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13675:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13675:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13680:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13680:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13616:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13616:58:6"
																},
																"nativeSrc": "13616:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13616:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13609:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13609:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13781:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13781:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083",
																	"nativeSrc": "13692:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13692:88:6"
																},
																"nativeSrc": "13692:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13692:93:6"
															},
															"nativeSrc": "13692:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13692:93:6"
														},
														{
															"nativeSrc": "13794:19:6",
															"nodeType": "YulAssignment",
															"src": "13794:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13805:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13805:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13810:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13801:3:6"
																},
																"nativeSrc": "13801:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13801:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13794:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13794:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13453:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13587:3:6",
														"nodeType": "YulTypedName",
														"src": "13587:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13595:3:6",
														"nodeType": "YulTypedName",
														"src": "13595:3:6",
														"type": ""
													}
												],
												"src": "13453:366:6"
											},
											{
												"body": {
													"nativeSrc": "13996:248:6",
													"nodeType": "YulBlock",
													"src": "13996:248:6",
													"statements": [
														{
															"nativeSrc": "14006:26:6",
															"nodeType": "YulAssignment",
															"src": "14006:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14018:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14018:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14029:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14029:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14014:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14014:3:6"
																},
																"nativeSrc": "14014:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14014:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14006:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14006:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14053:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14053:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14064:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14064:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14049:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14049:3:6"
																		},
																		"nativeSrc": "14049:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14049:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14072:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "14072:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14078:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14078:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14068:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14068:3:6"
																		},
																		"nativeSrc": "14068:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14068:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14042:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14042:6:6"
																},
																"nativeSrc": "14042:47:6",
																"nodeType": "YulFunctionCall",
																"src": "14042:47:6"
															},
															"nativeSrc": "14042:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "14042:47:6"
														},
														{
															"nativeSrc": "14098:139:6",
															"nodeType": "YulAssignment",
															"src": "14098:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14232:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14232:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14106:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "14106:124:6"
																},
																"nativeSrc": "14106:131:6",
																"nodeType": "YulFunctionCall",
																"src": "14106:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14098:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14098:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13825:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13976:9:6",
														"nodeType": "YulTypedName",
														"src": "13976:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13991:4:6",
														"nodeType": "YulTypedName",
														"src": "13991:4:6",
														"type": ""
													}
												],
												"src": "13825:419:6"
											},
											{
												"body": {
													"nativeSrc": "14315:53:6",
													"nodeType": "YulBlock",
													"src": "14315:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14332:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14332:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14355:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "14355:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "14337:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "14337:17:6"
																		},
																		"nativeSrc": "14337:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14337:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14325:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:6"
																},
																"nativeSrc": "14325:37:6",
																"nodeType": "YulFunctionCall",
																"src": "14325:37:6"
															},
															"nativeSrc": "14325:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "14325:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "14250:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14303:5:6",
														"nodeType": "YulTypedName",
														"src": "14303:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14310:3:6",
														"nodeType": "YulTypedName",
														"src": "14310:3:6",
														"type": ""
													}
												],
												"src": "14250:118:6"
											},
											{
												"body": {
													"nativeSrc": "14472:124:6",
													"nodeType": "YulBlock",
													"src": "14472:124:6",
													"statements": [
														{
															"nativeSrc": "14482:26:6",
															"nodeType": "YulAssignment",
															"src": "14482:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14494:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14494:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14505:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14505:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14490:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14490:3:6"
																},
																"nativeSrc": "14490:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14490:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14482:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14482:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14562:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14562:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14575:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14575:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14586:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14586:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14571:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14571:3:6"
																		},
																		"nativeSrc": "14571:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14571:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14518:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14518:43:6"
																},
																"nativeSrc": "14518:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14518:71:6"
															},
															"nativeSrc": "14518:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14518:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14374:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14444:9:6",
														"nodeType": "YulTypedName",
														"src": "14444:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14456:6:6",
														"nodeType": "YulTypedName",
														"src": "14456:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14467:4:6",
														"nodeType": "YulTypedName",
														"src": "14467:4:6",
														"type": ""
													}
												],
												"src": "14374:222:6"
											},
											{
												"body": {
													"nativeSrc": "14756:288:6",
													"nodeType": "YulBlock",
													"src": "14756:288:6",
													"statements": [
														{
															"nativeSrc": "14766:26:6",
															"nodeType": "YulAssignment",
															"src": "14766:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14778:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14778:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14789:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14789:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14774:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14774:3:6"
																},
																"nativeSrc": "14774:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14774:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14766:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14766:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14846:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14846:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14859:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14859:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14870:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14870:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14855:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14855:3:6"
																		},
																		"nativeSrc": "14855:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14855:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14802:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14802:43:6"
																},
																"nativeSrc": "14802:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14802:71:6"
															},
															"nativeSrc": "14802:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14802:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14927:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14927:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14940:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14940:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14951:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14951:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14936:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14936:3:6"
																		},
																		"nativeSrc": "14936:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14936:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14883:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14883:43:6"
																},
																"nativeSrc": "14883:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14883:72:6"
															},
															"nativeSrc": "14883:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14883:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15009:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15009:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15022:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15022:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15033:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15033:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15018:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15018:3:6"
																		},
																		"nativeSrc": "15018:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15018:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14965:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14965:43:6"
																},
																"nativeSrc": "14965:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14965:72:6"
															},
															"nativeSrc": "14965:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14965:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14602:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14712:9:6",
														"nodeType": "YulTypedName",
														"src": "14712:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14724:6:6",
														"nodeType": "YulTypedName",
														"src": "14724:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14732:6:6",
														"nodeType": "YulTypedName",
														"src": "14732:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14740:6:6",
														"nodeType": "YulTypedName",
														"src": "14740:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14751:4:6",
														"nodeType": "YulTypedName",
														"src": "14751:4:6",
														"type": ""
													}
												],
												"src": "14602:442:6"
											},
											{
												"body": {
													"nativeSrc": "15094:147:6",
													"nodeType": "YulBlock",
													"src": "15094:147:6",
													"statements": [
														{
															"nativeSrc": "15104:25:6",
															"nodeType": "YulAssignment",
															"src": "15104:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15127:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15127:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15109:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "15109:17:6"
																},
																"nativeSrc": "15109:20:6",
																"nodeType": "YulFunctionCall",
																"src": "15109:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15104:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "15104:1:6"
																}
															]
														},
														{
															"nativeSrc": "15138:25:6",
															"nodeType": "YulAssignment",
															"src": "15138:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15161:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15161:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15143:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "15143:17:6"
																},
																"nativeSrc": "15143:20:6",
																"nodeType": "YulFunctionCall",
																"src": "15143:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15138:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "15138:1:6"
																}
															]
														},
														{
															"nativeSrc": "15172:16:6",
															"nodeType": "YulAssignment",
															"src": "15172:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15183:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15183:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15186:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15186:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15179:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15179:3:6"
																},
																"nativeSrc": "15179:9:6",
																"nodeType": "YulFunctionCall",
																"src": "15179:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15172:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15172:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15212:22:6",
																"nodeType": "YulBlock",
																"src": "15212:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15214:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "15214:16:6"
																			},
																			"nativeSrc": "15214:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "15214:18:6"
																		},
																		"nativeSrc": "15214:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "15214:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15204:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15204:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15207:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15207:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15201:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "15201:2:6"
																},
																"nativeSrc": "15201:10:6",
																"nodeType": "YulFunctionCall",
																"src": "15201:10:6"
															},
															"nativeSrc": "15198:36:6",
															"nodeType": "YulIf",
															"src": "15198:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15050:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15081:1:6",
														"nodeType": "YulTypedName",
														"src": "15081:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15084:1:6",
														"nodeType": "YulTypedName",
														"src": "15084:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15090:3:6",
														"nodeType": "YulTypedName",
														"src": "15090:3:6",
														"type": ""
													}
												],
												"src": "15050:191:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address zero not allowed!\")\n\n    }\n\n    function abi_encode_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address Claimed!\")\n\n    }\n\n    function abi_encode_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not enough!\")\n\n    }\n\n    function abi_encode_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not Enough!\")\n\n    }\n\n    function abi_encode_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610129575f3560e01c8063313ce567116100aa57806395d89b411161006e57806395d89b41146103d55780639fe5491c146103ff578063a9059cbb14610427578063b90306ad14610463578063c12019eb1461048b578063dd62ed3e146104b557610129565b8063313ce567146102e157806347cee97c1461030b5780636010b797146103335780636d41b22c1461036f57806370a082311461039957610129565b80631e548d7a116100f15780631e548d7a1461020f57806320c63d561461023757806321ba18a114610241578063239fcf0f1461026957806323b872dd146102a557610129565b8063067637881461012d57806306fdde0314610169578063095ea7b3146101935780630fdb1c10146101cf57806318160ddd146101e5575b5f80fd5b348015610138575f80fd5b50610153600480360381019061014e919061145c565b6104f1565b604051610160919061149f565b60405180910390f35b348015610174575f80fd5b5061017d610511565b60405161018a9190611528565b60405180910390f35b34801561019e575f80fd5b506101b960048036038101906101b49190611572565b6105a1565b6040516101c691906115ca565b60405180910390f35b3480156101da575f80fd5b506101e36105c3565b005b3480156101f0575f80fd5b506101f96106b9565b604051610206919061149f565b60405180910390f35b34801561021a575f80fd5b50610235600480360381019061023091906115e3565b6106c2565b005b61023f610771565b005b34801561024c575f80fd5b5061026760048036038101906102629190611572565b6107d3565b005b348015610274575f80fd5b5061028f600480360381019061028a919061145c565b610884565b60405161029c919061149f565b60405180910390f35b3480156102b0575f80fd5b506102cb60048036038101906102c6919061160e565b610895565b6040516102d891906115ca565b60405180910390f35b3480156102ec575f80fd5b506102f56108c3565b6040516103029190611679565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190611572565b6108cb565b005b34801561033e575f80fd5b506103596004803603810190610354919061145c565b6109c7565b604051610366919061149f565b60405180910390f35b34801561037a575f80fd5b50610383610a3e565b604051610390919061149f565b60405180910390f35b3480156103a4575f80fd5b506103bf60048036038101906103ba919061145c565b610a4d565b6040516103cc919061149f565b60405180910390f35b3480156103e0575f80fd5b506103e9610a92565b6040516103f69190611528565b60405180910390f35b34801561040a575f80fd5b5061042560048036038101906104209190611572565b610b22565b005b348015610432575f80fd5b5061044d60048036038101906104489190611572565b610b53565b60405161045a91906115ca565b60405180910390f35b34801561046e575f80fd5b50610489600480360381019061048491906115e3565b610b75565b005b348015610496575f80fd5b5061049f610be0565b6040516104ac9190611749565b60405180910390f35b3480156104c0575f80fd5b506104db60048036038101906104d69190611769565b610cfa565b6040516104e8919061149f565b60405180910390f35b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b606060038054610520906117d4565b80601f016020809104026020016040519081016040528092919081815260200182805461054c906117d4565b80156105975780601f1061056e57610100808354040283529160200191610597565b820191905f5260205f20905b81548152906001019060200180831161057a57829003601f168201915b5050505050905090565b5f806105ab610d7c565b90506105b8818585610d83565b600191505092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610652576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106499061184e565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156106b6573d5f803e3d5ffd5b50565b5f600254905090565b3373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610751576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107489061184e565b60405180910390fd5b61076e33670de0b6b3a7640000836107699190611899565b610d95565b50565b600733908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610841576040517f577375f300000000000000000000000000000000000000000000000000000000815260040161083890611924565b60405180910390fd5b6108808260055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400008461087b9190611899565b610e14565b5050565b5f61088e82610a4d565b9050919050565b5f8061089f610d7c565b90506108ac858285610f04565b6108b7858585610e14565b60019150509392505050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610939576040517f577375f300000000000000000000000000000000000000000000000000000000815260040161093090611924565b60405180910390fd5b5f61094383610a4d565b1115610984576040517fc18cab9000000000000000000000000000000000000000000000000000000000815260040161097b9061198c565b60405180910390fd5b6109c360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683670de0b6b3a7640000846109be9190611899565b610e14565b5050565b5f670de0b6b3a76400006109da83610a4d565b1015610a1b576040517fb4600e99000000000000000000000000000000000000000000000000000000008152600401610a12906119f4565b60405180910390fd5b670de0b6b3a7640000610a2d83610a4d565b610a379190611a3f565b9050919050565b5f670de0b6b3a7640000905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610aa1906117d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610acd906117d4565b8015610b185780601f10610aef57610100808354040283529160200191610b18565b820191905f5260205f20905b815481529060010190602001808311610afb57829003601f168201915b5050505050905090565b670de0b6b3a764000081610b369190611899565b9050610b4f3083600284610b4a9190611899565b610e14565b5050565b5f80610b5d610d7c565b9050610b6a818585610e14565b600191505092915050565b5f610b7f33610a4d565b1015610bc0576040517fb4600e99000000000000000000000000000000000000000000000000000000008152600401610bb790611ab9565b60405180910390fd5b610bdd33670de0b6b3a764000083610bd89190611899565b610f97565b50565b60603373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c689061184e565b60405180910390fd5b6007805480602002602001604051908101604052809291908181526020018280548015610cf057602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ca7575b5050505050905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610d908383836001611016565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e05575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dfc9190611ae6565b60405180910390fd5b610e105f83836111e5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e84575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e7b9190611ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610eeb9190611ae6565b60405180910390fd5b610eff8383836111e5565b505050565b5f610f0f8484610cfa565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f915781811015610f82578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f7993929190611aff565b60405180910390fd5b610f9084848484035f611016565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611007575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ffe9190611ae6565b60405180910390fd5b611012825f836111e5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611086575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161107d9190611ae6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f6575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110ed9190611ae6565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111df578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111d6919061149f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611235578060025f8282546112299190611b34565b92505081905550611303565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156112be578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112b593929190611aff565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361134a578060025f8282540392505081905550611394565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113f1919061149f565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61142b82611402565b9050919050565b61143b81611421565b8114611445575f80fd5b50565b5f8135905061145681611432565b92915050565b5f60208284031215611471576114706113fe565b5b5f61147e84828501611448565b91505092915050565b5f819050919050565b61149981611487565b82525050565b5f6020820190506114b25f830184611490565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114fa826114b8565b61150481856114c2565b93506115148185602086016114d2565b61151d816114e0565b840191505092915050565b5f6020820190508181035f83015261154081846114f0565b905092915050565b61155181611487565b811461155b575f80fd5b50565b5f8135905061156c81611548565b92915050565b5f8060408385031215611588576115876113fe565b5b5f61159585828601611448565b92505060206115a68582860161155e565b9150509250929050565b5f8115159050919050565b6115c4816115b0565b82525050565b5f6020820190506115dd5f8301846115bb565b92915050565b5f602082840312156115f8576115f76113fe565b5b5f6116058482850161155e565b91505092915050565b5f805f60608486031215611625576116246113fe565b5b5f61163286828701611448565b935050602061164386828701611448565b92505060406116548682870161155e565b9150509250925092565b5f60ff82169050919050565b6116738161165e565b82525050565b5f60208201905061168c5f83018461166a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116c481611421565b82525050565b5f6116d583836116bb565b60208301905092915050565b5f602082019050919050565b5f6116f782611692565b611701818561169c565b935061170c836116ac565b805f5b8381101561173c57815161172388826116ca565b975061172e836116e1565b92505060018101905061170f565b5085935050505092915050565b5f6020820190508181035f83015261176181846116ed565b905092915050565b5f806040838503121561177f5761177e6113fe565b5b5f61178c85828601611448565b925050602061179d85828601611448565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117eb57607f821691505b6020821081036117fe576117fd6117a7565b5b50919050565b7f4e6f74206f776e657221000000000000000000000000000000000000000000005f82015250565b5f611838600a836114c2565b915061184382611804565b602082019050919050565b5f6020820190508181035f8301526118658161182c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118a382611487565b91506118ae83611487565b92508282026118bc81611487565b915082820484148315176118d3576118d261186c565b5b5092915050565b7f41646472657373207a65726f206e6f7420616c6c6f77656421000000000000005f82015250565b5f61190e6019836114c2565b9150611919826118da565b602082019050919050565b5f6020820190508181035f83015261193b81611902565b9050919050565b7f4164647265737320436c61696d656421000000000000000000000000000000005f82015250565b5f6119766010836114c2565b915061198182611942565b602082019050919050565b5f6020820190508181035f8301526119a38161196a565b9050919050565b7f546f6b656e206e6f7420656e6f756768210000000000000000000000000000005f82015250565b5f6119de6011836114c2565b91506119e9826119aa565b602082019050919050565b5f6020820190508181035f830152611a0b816119d2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a4982611487565b9150611a5483611487565b925082611a6457611a63611a12565b5b828204905092915050565b7f546f6b656e206e6f7420456e6f756768210000000000000000000000000000005f82015250565b5f611aa36011836114c2565b9150611aae82611a6f565b602082019050919050565b5f6020820190508181035f830152611ad081611a97565b9050919050565b611ae081611421565b82525050565b5f602082019050611af95f830184611ad7565b92915050565b5f606082019050611b125f830186611ad7565b611b1f6020830185611490565b611b2c6040830184611490565b949350505050565b5f611b3e82611487565b9150611b4983611487565b9250828201905080821115611b6157611b6061186c565b5b9291505056fea2646970667358221220acf72ca333ac27c4b1a3024514972de62bcdc94bf8bd61b97a22af67d3b0a98264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x9FE5491C EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB90306AD EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xC12019EB EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B5 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x47CEE97C EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x6010B797 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x6D41B22C EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x399 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x1E548D7A GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x1E548D7A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x20C63D56 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x21BA18A1 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x239FCF0F EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A5 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x6763788 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x5C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x6C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0x771 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x520 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54C SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x597 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x597 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AB PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH2 0x5B8 DUP2 DUP6 DUP6 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x649 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76E CALLER PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH32 0x577375F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x838 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x880 DUP3 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88E DUP3 PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89F PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH2 0x8AC DUP6 DUP3 DUP6 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x8B7 DUP6 DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x577375F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x930 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x943 DUP4 PUSH2 0xA4D JUMP JUMPDEST GT ISZERO PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18CAB9000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97B SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9DA DUP4 PUSH2 0xA4D JUMP JUMPDEST LT ISZERO PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4600E9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA12 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2D DUP4 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA1 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xACD SWAP1 PUSH2 0x17D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAFB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST SWAP1 POP PUSH2 0xB4F ADDRESS DUP4 PUSH1 0x2 DUP5 PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB5D PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH2 0xB6A DUP2 DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7F CALLER PUSH2 0xA4D JUMP JUMPDEST LT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4600E9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB7 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDD CALLER PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC68 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xCF0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xCA7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD90 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1016 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH0 DUP4 DUP4 PUSH2 0x11E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 DUP4 DUP4 PUSH2 0x11E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF0F DUP5 DUP5 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF82 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF79 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF90 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1016 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1012 DUP3 PUSH0 DUP4 PUSH2 0x11E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1086 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11DF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1235 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1303 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12BE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x134A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1394 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13F1 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP2 EQ PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1456 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147E DUP5 DUP3 DUP6 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1499 DUP2 PUSH2 0x1487 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14FA DUP3 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1504 DUP2 DUP6 PUSH2 0x14C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1514 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x151D DUP2 PUSH2 0x14E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1540 DUP2 DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x1487 JUMP JUMPDEST DUP2 EQ PUSH2 0x155B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156C DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C4 DUP2 PUSH2 0x15B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DD PUSH0 DUP4 ADD DUP5 PUSH2 0x15BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1605 DUP5 DUP3 DUP6 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1625 JUMPI PUSH2 0x1624 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1632 DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1643 DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1654 DUP7 DUP3 DUP8 ADD PUSH2 0x155E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1673 DUP2 PUSH2 0x165E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168C PUSH0 DUP4 ADD DUP5 PUSH2 0x166A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C4 DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D5 DUP4 DUP4 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F7 DUP3 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x1701 DUP2 DUP6 PUSH2 0x169C JUMP JUMPDEST SWAP4 POP PUSH2 0x170C DUP4 PUSH2 0x16AC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173C JUMPI DUP2 MLOAD PUSH2 0x1723 DUP9 DUP3 PUSH2 0x16CA JUMP JUMPDEST SWAP8 POP PUSH2 0x172E DUP4 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x170F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1761 DUP2 DUP5 PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x179D DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17FE JUMPI PUSH2 0x17FD PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65722100000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1838 PUSH1 0xA DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1843 DUP3 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1865 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18A3 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AE DUP4 PUSH2 0x1487 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18BC DUP2 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x186C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373207A65726F206E6F7420616C6C6F7765642100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190E PUSH1 0x19 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1919 DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x193B DUP2 PUSH2 0x1902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320436C61696D65642100000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1976 PUSH1 0x10 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1981 DUP3 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A3 DUP2 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420656E6F75676821000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE PUSH1 0x11 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A0B DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A49 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A54 DUP4 PUSH2 0x1487 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x1A12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420456E6F75676821000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA3 PUSH1 0x11 DUP4 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAE DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD0 DUP2 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B12 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1490 JUMP JUMPDEST PUSH2 0x1B2C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3E DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B49 DUP4 PUSH2 0x1487 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x186C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xF7 0x2C LOG3 CALLER 0xAC 0x27 0xC4 0xB1 LOG3 MUL GASLIMIT EQ SWAP8 0x2D 0xE6 0x2B 0xCD 0xC9 0x4B 0xF8 0xBD PUSH2 0xB97A 0x22 0xAF PUSH8 0xD3B0A98264736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "169:2627:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2671:123;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4002:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2519:147:0;;;;;;;;;;;;;:::i;:::-;;2849:97:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;748:153:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2058:88;;;:::i;:::-;;1639:235;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1529:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4780:244:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;989:336:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2151:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;906:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1880:172:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3319:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1331:192:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2368:146;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3555:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2671:123:0;2730:7;2755:5;:13;;;2748:20;;2671:123;;;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;4002:186::-;4075:4;4091:13;4107:12;:10;:12::i;:::-;4091:28;;4129:31;4138:5;4145:7;4154:5;4129:8;:31::i;:::-;4177:4;4170:11;;;4002:186;;;;:::o;2519:147:0:-;2575:10;2564:21;;:7;;;;;;;;;;;:21;;;2556:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2619:7;;;;;;;;;;;2610:26;;:49;2637:21;2610:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:147::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;748:153:0:-;820:10;809:21;;:7;;;;;;;;;;;:21;;;801:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;855:39;861:10;300:6;873:9;:20;;;;:::i;:::-;855:5;:39::i;:::-;748:153;:::o;2058:88::-;2112:10;2128;2112:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:88::o;1639:235::-;1732:1;1714:20;;:6;:20;;;1710:102;;1757:44;;;;;;;;;;:::i;:::-;;;;;;;;1710:102;1821:46;1831:6;1839:7;;;;;;;;;;;300:6;1848:7;:18;;;;:::i;:::-;1821:9;:46::i;:::-;1639:235;;:::o;1529:104::-;1584:7;1610:16;1620:5;1610:9;:16::i;:::-;1603:23;;1529:104;;;:::o;4780:244:2:-;4867:4;4883:15;4901:12;:10;:12::i;:::-;4883:30;;4923:37;4939:4;4945:7;4954:5;4923:15;:37::i;:::-;4970:26;4980:4;4986:2;4990:5;4970:9;:26::i;:::-;5013:4;5006:11;;;4780:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;989:336:0:-;1075:1;1057:20;;:6;:20;;;1053:102;;1100:44;;;;;;;;;;:::i;:::-;;;;;;;;1053:102;1188:1;1168:17;1178:6;1168:9;:17::i;:::-;:21;1164:91;;;1212:32;;;;;;;;;;:::i;:::-;;;;;;;;1164:91;1264:54;1274:15;;;;;;;;;;;1291:6;300;1299:7;:18;;;;:::i;:::-;1264:9;:54::i;:::-;989:336;;:::o;2151:212::-;2205:7;300:6;2226:17;2236:6;2226:9;:17::i;:::-;:28;2223:92;;;2276:28;;;;;;;;;;:::i;:::-;;;;;;;;2223:92;300:6;2330:17;2340:6;2330:9;:17::i;:::-;:26;;;;:::i;:::-;2323:33;;2151:212;;;:::o;906:78::-;947:4;300:6;962:15;;906:78;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1880:172:0:-;300:6;1964:12;:23;;;;:::i;:::-;1949:38;;1997:48;2015:4;2022:6;2043:1;2030:12;:14;;;;:::i;:::-;1997:9;:48::i;:::-;1880:172;;:::o;3319:178:2:-;3388:4;3404:13;3420:12;:10;:12::i;:::-;3404:28;;3442:27;3452:5;3459:2;3463:5;3442:9;:27::i;:::-;3486:4;3479:11;;;3319:178;;;;:::o;1331:192:0:-;1408:1;1384:21;1394:10;1384:9;:21::i;:::-;:25;1380:91;;;1432:28;;;;;;;;;;:::i;:::-;;;;;;;;1380:91;1480:36;1486:10;300:6;1498;:17;;;;:::i;:::-;1480:5;:36::i;:::-;1331:192;:::o;2368:146::-;2409:16;2455:10;2444:21;;:7;;;;;;;;;;;:21;;;2436:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2497:10;2490:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2368:146;:::o;3555:140:2:-;3635:7;3661:11;:18;3673:5;3661:18;;;;;;;;;;;;;;;:27;3680:7;3661:27;;;;;;;;;;;;;;;;3654:34;;3555:140;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8730:128:2:-;8814:37;8823:5;8830:7;8839:5;8846:4;8814:8;:37::i;:::-;8730:128;;;:::o;7462:208::-;7551:1;7532:21;;:7;:21;;;7528:91;;7605:1;7576:32;;;;;;;;;;;:::i;:::-;;;;;;;;7528:91;7628:35;7644:1;7648:7;7657:5;7628:7;:35::i;:::-;7462:208;;:::o;5397:300::-;5496:1;5480:18;;:4;:18;;;5476:86;;5548:1;5521:30;;;;;;;;;;;:::i;:::-;;;;;;;;5476:86;5589:1;5575:16;;:2;:16;;;5571:86;;5643:1;5614:32;;;;;;;;;;;:::i;:::-;;;;;;;;5571:86;5666:24;5674:4;5680:2;5684:5;5666:7;:24::i;:::-;5397:300;;;:::o;10419:476::-;10518:24;10545:25;10555:5;10562:7;10545:9;:25::i;:::-;10518:52;;10603:17;10584:16;:36;10580:309;;;10659:5;10640:16;:24;10636:130;;;10718:7;10727:16;10745:5;10691:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10636:130;10807:57;10816:5;10823:7;10851:5;10832:16;:24;10858:5;10807:8;:57::i;:::-;10580:309;10508:387;10419:476;;;:::o;7988:206::-;8077:1;8058:21;;:7;:21;;;8054:89;;8129:1;8102:30;;;;;;;;;;;:::i;:::-;;;;;;;;8054:89;8152:35;8160:7;8177:1;8181:5;8152:7;:35::i;:::-;7988:206;;:::o;9705:432::-;9834:1;9817:19;;:5;:19;;;9813:89;;9888:1;9859:32;;;;;;;;;;;:::i;:::-;;;;;;;;9813:89;9934:1;9915:21;;:7;:21;;;9911:90;;9987:1;9959:31;;;;;;;;;;;:::i;:::-;;;;;;;;9911:90;10040:5;10010:11;:18;10022:5;10010:18;;;;;;;;;;;;;;;:27;10029:7;10010:27;;;;;;;;;;;;;;;:35;;;;10059:9;10055:76;;;10105:7;10089:31;;10098:5;10089:31;;;10114:5;10089:31;;;;;;:::i;:::-;;;;;;;;10055:76;9705:432;;;;:::o;6012:1107::-;6117:1;6101:18;;:4;:18;;;6097:540;;6253:5;6237:12;;:21;;;;;;;:::i;:::-;;;;;;;;6097:540;;;6289:19;6311:9;:15;6321:4;6311:15;;;;;;;;;;;;;;;;6289:37;;6358:5;6344:11;:19;6340:115;;;6415:4;6421:11;6434:5;6390:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6340:115;6607:5;6593:11;:19;6575:9;:15;6585:4;6575:15;;;;;;;;;;;;;;;:37;;;;6275:362;6097:540;6665:1;6651:16;;:2;:16;;;6647:425;;6830:5;6814:12;;:21;;;;;;;;;;;6647:425;;;7042:5;7025:9;:13;7035:2;7025:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6647:425;7102:2;7087:25;;7096:4;7087:25;;;7106:5;7087:25;;;;;;:::i;:::-;;;;;;;;6012:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:99::-;1663:6;1697:5;1691:12;1681:22;;1611:99;;;:::o;1716:169::-;1800:11;1834:6;1829:3;1822:19;1874:4;1869:3;1865:14;1850:29;;1716:169;;;;:::o;1891:139::-;1980:6;1975:3;1970;1964:23;2021:1;2012:6;2007:3;2003:16;1996:27;1891:139;;;:::o;2036:102::-;2077:6;2128:2;2124:7;2119:2;2112:5;2108:14;2104:28;2094:38;;2036:102;;;:::o;2144:377::-;2232:3;2260:39;2293:5;2260:39;:::i;:::-;2315:71;2379:6;2374:3;2315:71;:::i;:::-;2308:78;;2395:65;2453:6;2448:3;2441:4;2434:5;2430:16;2395:65;:::i;:::-;2485:29;2507:6;2485:29;:::i;:::-;2480:3;2476:39;2469:46;;2236:285;2144:377;;;;:::o;2527:313::-;2640:4;2678:2;2667:9;2663:18;2655:26;;2727:9;2721:4;2717:20;2713:1;2702:9;2698:17;2691:47;2755:78;2828:4;2819:6;2755:78;:::i;:::-;2747:86;;2527:313;;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:474::-;3187:6;3195;3244:2;3232:9;3223:7;3219:23;3215:32;3212:119;;;3250:79;;:::i;:::-;3212:119;3370:1;3395:53;3440:7;3431:6;3420:9;3416:22;3395:53;:::i;:::-;3385:63;;3341:117;3497:2;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3468:118;3119:474;;;;;:::o;3599:90::-;3633:7;3676:5;3669:13;3662:21;3651:32;;3599:90;;;:::o;3695:109::-;3776:21;3791:5;3776:21;:::i;:::-;3771:3;3764:34;3695:109;;:::o;3810:210::-;3897:4;3935:2;3924:9;3920:18;3912:26;;3948:65;4010:1;3999:9;3995:17;3986:6;3948:65;:::i;:::-;3810:210;;;;:::o;4026:329::-;4085:6;4134:2;4122:9;4113:7;4109:23;4105:32;4102:119;;;4140:79;;:::i;:::-;4102:119;4260:1;4285:53;4330:7;4321:6;4310:9;4306:22;4285:53;:::i;:::-;4275:63;;4231:117;4026:329;;;;:::o;4361:619::-;4438:6;4446;4454;4503:2;4491:9;4482:7;4478:23;4474:32;4471:119;;;4509:79;;:::i;:::-;4471:119;4629:1;4654:53;4699:7;4690:6;4679:9;4675:22;4654:53;:::i;:::-;4644:63;;4600:117;4756:2;4782:53;4827:7;4818:6;4807:9;4803:22;4782:53;:::i;:::-;4772:63;;4727:118;4884:2;4910:53;4955:7;4946:6;4935:9;4931:22;4910:53;:::i;:::-;4900:63;;4855:118;4361:619;;;;;:::o;4986:86::-;5021:7;5061:4;5054:5;5050:16;5039:27;;4986:86;;;:::o;5078:112::-;5161:22;5177:5;5161:22;:::i;:::-;5156:3;5149:35;5078:112;;:::o;5196:214::-;5285:4;5323:2;5312:9;5308:18;5300:26;;5336:67;5400:1;5389:9;5385:17;5376:6;5336:67;:::i;:::-;5196:214;;;;:::o;5416:114::-;5483:6;5517:5;5511:12;5501:22;;5416:114;;;:::o;5536:184::-;5635:11;5669:6;5664:3;5657:19;5709:4;5704:3;5700:14;5685:29;;5536:184;;;;:::o;5726:132::-;5793:4;5816:3;5808:11;;5846:4;5841:3;5837:14;5829:22;;5726:132;;;:::o;5864:108::-;5941:24;5959:5;5941:24;:::i;:::-;5936:3;5929:37;5864:108;;:::o;5978:179::-;6047:10;6068:46;6110:3;6102:6;6068:46;:::i;:::-;6146:4;6141:3;6137:14;6123:28;;5978:179;;;;:::o;6163:113::-;6233:4;6265;6260:3;6256:14;6248:22;;6163:113;;;:::o;6312:732::-;6431:3;6460:54;6508:5;6460:54;:::i;:::-;6530:86;6609:6;6604:3;6530:86;:::i;:::-;6523:93;;6640:56;6690:5;6640:56;:::i;:::-;6719:7;6750:1;6735:284;6760:6;6757:1;6754:13;6735:284;;;6836:6;6830:13;6863:63;6922:3;6907:13;6863:63;:::i;:::-;6856:70;;6949:60;7002:6;6949:60;:::i;:::-;6939:70;;6795:224;6782:1;6779;6775:9;6770:14;;6735:284;;;6739:14;7035:3;7028:10;;6436:608;;;6312:732;;;;:::o;7050:373::-;7193:4;7231:2;7220:9;7216:18;7208:26;;7280:9;7274:4;7270:20;7266:1;7255:9;7251:17;7244:47;7308:108;7411:4;7402:6;7308:108;:::i;:::-;7300:116;;7050:373;;;;:::o;7429:474::-;7497:6;7505;7554:2;7542:9;7533:7;7529:23;7525:32;7522:119;;;7560:79;;:::i;:::-;7522:119;7680:1;7705:53;7750:7;7741:6;7730:9;7726:22;7705:53;:::i;:::-;7695:63;;7651:117;7807:2;7833:53;7878:7;7869:6;7858:9;7854:22;7833:53;:::i;:::-;7823:63;;7778:118;7429:474;;;;;:::o;7909:180::-;7957:77;7954:1;7947:88;8054:4;8051:1;8044:15;8078:4;8075:1;8068:15;8095:320;8139:6;8176:1;8170:4;8166:12;8156:22;;8223:1;8217:4;8213:12;8244:18;8234:81;;8300:4;8292:6;8288:17;8278:27;;8234:81;8362:2;8354:6;8351:14;8331:18;8328:38;8325:84;;8381:18;;:::i;:::-;8325:84;8146:269;8095:320;;;:::o;8421:160::-;8561:12;8557:1;8549:6;8545:14;8538:36;8421:160;:::o;8587:366::-;8729:3;8750:67;8814:2;8809:3;8750:67;:::i;:::-;8743:74;;8826:93;8915:3;8826:93;:::i;:::-;8944:2;8939:3;8935:12;8928:19;;8587:366;;;:::o;8959:419::-;9125:4;9163:2;9152:9;9148:18;9140:26;;9212:9;9206:4;9202:20;9198:1;9187:9;9183:17;9176:47;9240:131;9366:4;9240:131;:::i;:::-;9232:139;;8959:419;;;:::o;9384:180::-;9432:77;9429:1;9422:88;9529:4;9526:1;9519:15;9553:4;9550:1;9543:15;9570:410;9610:7;9633:20;9651:1;9633:20;:::i;:::-;9628:25;;9667:20;9685:1;9667:20;:::i;:::-;9662:25;;9722:1;9719;9715:9;9744:30;9762:11;9744:30;:::i;:::-;9733:41;;9923:1;9914:7;9910:15;9907:1;9904:22;9884:1;9877:9;9857:83;9834:139;;9953:18;;:::i;:::-;9834:139;9618:362;9570:410;;;;:::o;9986:175::-;10126:27;10122:1;10114:6;10110:14;10103:51;9986:175;:::o;10167:366::-;10309:3;10330:67;10394:2;10389:3;10330:67;:::i;:::-;10323:74;;10406:93;10495:3;10406:93;:::i;:::-;10524:2;10519:3;10515:12;10508:19;;10167:366;;;:::o;10539:419::-;10705:4;10743:2;10732:9;10728:18;10720:26;;10792:9;10786:4;10782:20;10778:1;10767:9;10763:17;10756:47;10820:131;10946:4;10820:131;:::i;:::-;10812:139;;10539:419;;;:::o;10964:166::-;11104:18;11100:1;11092:6;11088:14;11081:42;10964:166;:::o;11136:366::-;11278:3;11299:67;11363:2;11358:3;11299:67;:::i;:::-;11292:74;;11375:93;11464:3;11375:93;:::i;:::-;11493:2;11488:3;11484:12;11477:19;;11136:366;;;:::o;11508:419::-;11674:4;11712:2;11701:9;11697:18;11689:26;;11761:9;11755:4;11751:20;11747:1;11736:9;11732:17;11725:47;11789:131;11915:4;11789:131;:::i;:::-;11781:139;;11508:419;;;:::o;11933:167::-;12073:19;12069:1;12061:6;12057:14;12050:43;11933:167;:::o;12106:366::-;12248:3;12269:67;12333:2;12328:3;12269:67;:::i;:::-;12262:74;;12345:93;12434:3;12345:93;:::i;:::-;12463:2;12458:3;12454:12;12447:19;;12106:366;;;:::o;12478:419::-;12644:4;12682:2;12671:9;12667:18;12659:26;;12731:9;12725:4;12721:20;12717:1;12706:9;12702:17;12695:47;12759:131;12885:4;12759:131;:::i;:::-;12751:139;;12478:419;;;:::o;12903:180::-;12951:77;12948:1;12941:88;13048:4;13045:1;13038:15;13072:4;13069:1;13062:15;13089:185;13129:1;13146:20;13164:1;13146:20;:::i;:::-;13141:25;;13180:20;13198:1;13180:20;:::i;:::-;13175:25;;13219:1;13209:35;;13224:18;;:::i;:::-;13209:35;13266:1;13263;13259:9;13254:14;;13089:185;;;;:::o;13280:167::-;13420:19;13416:1;13408:6;13404:14;13397:43;13280:167;:::o;13453:366::-;13595:3;13616:67;13680:2;13675:3;13616:67;:::i;:::-;13609:74;;13692:93;13781:3;13692:93;:::i;:::-;13810:2;13805:3;13801:12;13794:19;;13453:366;;;:::o;13825:419::-;13991:4;14029:2;14018:9;14014:18;14006:26;;14078:9;14072:4;14068:20;14064:1;14053:9;14049:17;14042:47;14106:131;14232:4;14106:131;:::i;:::-;14098:139;;13825:419;;;:::o;14250:118::-;14337:24;14355:5;14337:24;:::i;:::-;14332:3;14325:37;14250:118;;:::o;14374:222::-;14467:4;14505:2;14494:9;14490:18;14482:26;;14518:71;14586:1;14575:9;14571:17;14562:6;14518:71;:::i;:::-;14374:222;;;;:::o;14602:442::-;14751:4;14789:2;14778:9;14774:18;14766:26;;14802:71;14870:1;14859:9;14855:17;14846:6;14802:71;:::i;:::-;14883:72;14951:2;14940:9;14936:18;14927:6;14883:72;:::i;:::-;14965;15033:2;15022:9;15018:18;15009:6;14965:72;:::i;:::-;14602:442;;;;;;:::o;15050:191::-;15090:3;15109:20;15127:1;15109:20;:::i;:::-;15104:25;;15143:20;15161:1;15143:20;:::i;:::-;15138:25;;15186:1;15183;15179:9;15172:16;;15207:3;15204:1;15201:10;15198:36;;;15214:18;;:::i;:::-;15198:36;15050:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1413800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Balance(address)": "2960",
								"Burn(uint256)": "infinite",
								"Claim(address,uint256)": "infinite",
								"SenderEth()": "infinite",
								"addressBalnc(address)": "3271",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"decimals()": "361",
								"decimalsz()": "421",
								"flipClick(address,uint256)": "infinite",
								"gain(address,uint256)": "infinite",
								"name()": "infinite",
								"payContractGasFee()": "48739",
								"pumptit(uint256)": "infinite",
								"realTime(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 2796,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 469,
									"end": 743,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 469,
									"end": 743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 469,
									"end": 743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 469,
									"end": 743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 469,
									"end": 743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 469,
									"end": 743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 469,
									"end": 743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 469,
									"end": 743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 539,
									"end": 544,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 546,
									"end": 553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 613,
									"end": 664,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 627,
									"end": 631,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 300,
									"end": 306,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 634,
									"end": 652,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9184E72A000"
								},
								{
									"begin": 634,
									"end": 663,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 634,
									"end": 663,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 634,
									"end": 663,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 634,
									"end": 663,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 634,
									"end": 663,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 634,
									"end": 663,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 634,
									"end": 663,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 613,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 613,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 618,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 613,
									"end": 664,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 664,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 613,
									"end": 664,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 664,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 613,
									"end": 664,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 684,
									"end": 694,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 674,
									"end": 681,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 674,
									"end": 681,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 674,
									"end": 694,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 730,
									"end": 734,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 704,
									"end": 719,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 704,
									"end": 719,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 704,
									"end": 735,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 469,
									"end": 743,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7462,
									"end": 7670,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7462,
									"end": 7670,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7551,
									"end": 7552,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7532,
									"end": 7553,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7532,
									"end": 7553,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7532,
									"end": 7539,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7532,
									"end": 7553,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7532,
									"end": 7553,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7532,
									"end": 7553,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7619,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7528,
									"end": 7619,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7606,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7576,
									"end": 7608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7576,
									"end": 7608,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7619,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7528,
									"end": 7619,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7628,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7644,
									"end": 7645,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7648,
									"end": 7655,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7657,
									"end": 7662,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7628,
									"end": 7635,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7628,
									"end": 7635,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7628,
									"end": 7635,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7628,
									"end": 7663,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7628,
									"end": 7663,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7628,
									"end": 7663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7628,
									"end": 7663,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7628,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7462,
									"end": 7670,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7462,
									"end": 7670,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7462,
									"end": 7670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6012,
									"end": 7119,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 6012,
									"end": 7119,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6101,
									"end": 6119,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6101,
									"end": 6119,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6101,
									"end": 6105,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6101,
									"end": 6119,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6101,
									"end": 6119,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6101,
									"end": 6119,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6253,
									"end": 6258,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6249,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6237,
									"end": 6249,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6237,
									"end": 6258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6258,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6289,
									"end": 6308,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6311,
									"end": 6320,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6321,
									"end": 6325,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6326,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6289,
									"end": 6326,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6289,
									"end": 6326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6344,
									"end": 6355,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6344,
									"end": 6363,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6455,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6340,
									"end": 6455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6415,
									"end": 6419,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6421,
									"end": 6432,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6434,
									"end": 6439,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6390,
									"end": 6440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6390,
									"end": 6440,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6455,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6340,
									"end": 6455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6607,
									"end": 6612,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6593,
									"end": 6604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6593,
									"end": 6612,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6584,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6585,
									"end": 6589,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6575,
									"end": 6590,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6612,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6612,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6612,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6575,
									"end": 6612,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6275,
									"end": 6637,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6097,
									"end": 6637,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6665,
									"end": 6666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6651,
									"end": 6667,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6651,
									"end": 6667,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6651,
									"end": 6653,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6651,
									"end": 6667,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6651,
									"end": 6667,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6651,
									"end": 6667,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6830,
									"end": 6835,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6826,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6814,
									"end": 6826,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6835,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7042,
									"end": 7047,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7035,
									"end": 7037,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7038,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6647,
									"end": 7072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7102,
									"end": 7104,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7096,
									"end": 7100,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7106,
									"end": 7111,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7087,
									"end": 7112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7087,
									"end": 7112,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6012,
									"end": 7119,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6012,
									"end": 7119,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6012,
									"end": 7119,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6012,
									"end": 7119,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8470,
									"end": 8650,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 8470,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8518,
									"end": 8595,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8515,
									"end": 8516,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8508,
									"end": 8596,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8615,
									"end": 8619,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 8612,
									"end": 8613,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 8605,
									"end": 8620,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8639,
									"end": 8643,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 8636,
									"end": 8637,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8629,
									"end": 8644,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 8656,
									"end": 9066,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 8656,
									"end": 9066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8696,
									"end": 8703,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8719,
									"end": 8739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8737,
									"end": 8738,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8719,
									"end": 8739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 8719,
									"end": 8739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8719,
									"end": 8739,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8719,
									"end": 8739,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8714,
									"end": 8739,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8714,
									"end": 8739,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8753,
									"end": 8773,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8771,
									"end": 8772,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8753,
									"end": 8773,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 8753,
									"end": 8773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8753,
									"end": 8773,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8753,
									"end": 8773,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8748,
									"end": 8773,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8748,
									"end": 8773,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8808,
									"end": 8809,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8806,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 8810,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8830,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8848,
									"end": 8859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8830,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 8830,
									"end": 8860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8830,
									"end": 8860,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8830,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8819,
									"end": 8860,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8819,
									"end": 8860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9009,
									"end": 9010,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9000,
									"end": 9007,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 8993,
									"end": 8994,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8990,
									"end": 9012,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 8971,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8963,
									"end": 8972,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8943,
									"end": 9026,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8920,
									"end": 9059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8920,
									"end": 9059,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9039,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 9039,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 9039,
									"end": 9057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9039,
									"end": 9057,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 9039,
									"end": 9057,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8920,
									"end": 9059,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8920,
									"end": 9059,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8704,
									"end": 9066,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8656,
									"end": 9066,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8656,
									"end": 9066,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8656,
									"end": 9066,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8656,
									"end": 9066,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8656,
									"end": 9066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9072,
									"end": 9198,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 9072,
									"end": 9198,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9109,
									"end": 9116,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9149,
									"end": 9191,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9142,
									"end": 9147,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9138,
									"end": 9192,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9127,
									"end": 9192,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9127,
									"end": 9192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9072,
									"end": 9198,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9072,
									"end": 9198,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9072,
									"end": 9198,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9072,
									"end": 9198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9300,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9204,
									"end": 9300,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9241,
									"end": 9248,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9270,
									"end": 9294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 9288,
									"end": 9293,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9270,
									"end": 9294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 9270,
									"end": 9294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9270,
									"end": 9294,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 9270,
									"end": 9294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9259,
									"end": 9294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9259,
									"end": 9294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9300,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9300,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9300,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9300,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9306,
									"end": 9424,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9306,
									"end": 9424,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9393,
									"end": 9417,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9411,
									"end": 9416,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9393,
									"end": 9417,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9393,
									"end": 9417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9393,
									"end": 9417,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9393,
									"end": 9417,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9388,
									"end": 9391,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9381,
									"end": 9418,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9306,
									"end": 9424,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9306,
									"end": 9424,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9306,
									"end": 9424,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9430,
									"end": 9652,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 9430,
									"end": 9652,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9523,
									"end": 9527,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9561,
									"end": 9563,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9550,
									"end": 9559,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9546,
									"end": 9564,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9564,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9574,
									"end": 9645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9642,
									"end": 9643,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9631,
									"end": 9640,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9627,
									"end": 9644,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9618,
									"end": 9624,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9574,
									"end": 9645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9574,
									"end": 9645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9574,
									"end": 9645,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9574,
									"end": 9645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9430,
									"end": 9652,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9430,
									"end": 9652,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9430,
									"end": 9652,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9430,
									"end": 9652,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9430,
									"end": 9652,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9658,
									"end": 9849,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 9658,
									"end": 9849,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9698,
									"end": 9701,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9717,
									"end": 9737,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9735,
									"end": 9736,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9717,
									"end": 9737,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 9717,
									"end": 9737,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9717,
									"end": 9737,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9717,
									"end": 9737,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9712,
									"end": 9737,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9712,
									"end": 9737,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9751,
									"end": 9771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9769,
									"end": 9770,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9751,
									"end": 9771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 9751,
									"end": 9771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9751,
									"end": 9771,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9751,
									"end": 9771,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9746,
									"end": 9771,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9746,
									"end": 9771,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9794,
									"end": 9795,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9791,
									"end": 9792,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9787,
									"end": 9796,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9780,
									"end": 9796,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9780,
									"end": 9796,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9815,
									"end": 9818,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9812,
									"end": 9813,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9809,
									"end": 9819,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9842,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9842,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9806,
									"end": 9842,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9822,
									"end": 9840,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9822,
									"end": 9840,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 9822,
									"end": 9840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9822,
									"end": 9840,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9822,
									"end": 9840,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9842,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9806,
									"end": 9842,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9658,
									"end": 9849,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9658,
									"end": 9849,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9658,
									"end": 9849,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9658,
									"end": 9849,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9658,
									"end": 9849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9855,
									"end": 9973,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9855,
									"end": 9973,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9942,
									"end": 9966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9960,
									"end": 9965,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9942,
									"end": 9966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 9942,
									"end": 9966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9942,
									"end": 9966,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9942,
									"end": 9966,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9937,
									"end": 9940,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9930,
									"end": 9967,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9855,
									"end": 9973,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9855,
									"end": 9973,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9855,
									"end": 9973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10128,
									"end": 10132,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10166,
									"end": 10168,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 10155,
									"end": 10164,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10151,
									"end": 10169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10143,
									"end": 10169,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10143,
									"end": 10169,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10179,
									"end": 10250,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 10247,
									"end": 10248,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10236,
									"end": 10245,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10232,
									"end": 10249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10223,
									"end": 10229,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10179,
									"end": 10250,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 10179,
									"end": 10250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10179,
									"end": 10250,
									"name": "tag",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 10179,
									"end": 10250,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10332,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 10328,
									"end": 10330,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10317,
									"end": 10326,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10313,
									"end": 10331,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10304,
									"end": 10310,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10332,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10260,
									"end": 10332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10332,
									"name": "tag",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 10260,
									"end": 10332,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10342,
									"end": 10414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10410,
									"end": 10412,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10399,
									"end": 10408,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10395,
									"end": 10413,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10386,
									"end": 10392,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10342,
									"end": 10414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10342,
									"end": 10414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10342,
									"end": 10414,
									"name": "tag",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10342,
									"end": 10414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 10421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10427,
									"end": 10649,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 10427,
									"end": 10649,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10520,
									"end": 10524,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10558,
									"end": 10560,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10547,
									"end": 10556,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10543,
									"end": 10561,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10535,
									"end": 10561,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10535,
									"end": 10561,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10571,
									"end": 10642,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10639,
									"end": 10640,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10628,
									"end": 10637,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10624,
									"end": 10641,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10615,
									"end": 10621,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10571,
									"end": 10642,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10571,
									"end": 10642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10571,
									"end": 10642,
									"name": "tag",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10571,
									"end": 10642,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10427,
									"end": 10649,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10427,
									"end": 10649,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10427,
									"end": 10649,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10427,
									"end": 10649,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10427,
									"end": 10649,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2796,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220acf72ca333ac27c4b1a3024514972de62bcdc94bf8bd61b97a22af67d3b0a98264736f6c634300081a0033",
									".code": [
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "9FE5491C"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "B90306AD"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "C12019EB"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "47CEE97C"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "6010B797"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "6D41B22C"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "1E548D7A"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "1E548D7A"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "20C63D56"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "21BA18A1"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "239FCF0F"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "6763788"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "FDB1C10"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2671,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2671,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2671,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4002,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4002,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4002,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2519,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 748,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 748,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 748,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2058,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1639,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1639,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1529,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1529,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1529,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4780,
											"end": 5024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4780,
											"end": 5024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4780,
											"end": 5024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 989,
											"end": 1325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 989,
											"end": 1325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2151,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2151,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2151,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 906,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 906,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1880,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1880,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3319,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3319,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3319,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1331,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1331,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2368,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2368,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3555,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3555,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3555,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2768,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4107,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4107,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4119,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4107,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4138,
											"end": 4143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4152,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4159,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4129,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4160,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4129,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4170,
											"end": 4181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2519,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2585,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2556,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2556,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 748,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 748,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 820,
											"end": 830,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 809,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 809,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 809,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 809,
											"end": 816,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 816,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 809,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 809,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 809,
											"end": 830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 801,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 801,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 801,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 855,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 861,
											"end": 871,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 873,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 855,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 855,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 894,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 855,
											"end": 894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2058,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2122,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2128,
											"end": 2138,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "577375F300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1757,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1848,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1848,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1821,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1867,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1821,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1610,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4901,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4901,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 4913,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4901,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4883,
											"end": 4913,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4883,
											"end": 4913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4939,
											"end": 4943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 4952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4954,
											"end": 4959,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4923,
											"end": 4960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4960,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4923,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4980,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4970,
											"end": 4996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4996,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4970,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 5024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1053,
											"end": 1155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "577375F300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1100,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1144,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1155,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1053,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1178,
											"end": 1184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1168,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1168,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1164,
											"end": 1255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "C18CAB9000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1212,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1164,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1299,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1264,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1318,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1264,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2226,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2223,
											"end": 2315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "B4600E9900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2276,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2315,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2223,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2330,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2330,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2330,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 906,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 947,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 962,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1964,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2015,
											"end": 2019,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2044,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2030,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1997,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2045,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1997,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3420,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3420,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3432,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3420,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3442,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3468,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3442,
											"end": 3469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3442,
											"end": 3469,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3442,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3490,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3479,
											"end": 3490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1394,
											"end": 1404,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1384,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1384,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1380,
											"end": 1471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "PUSH",
											"source": 0,
											"value": "B4600E9900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1432,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1471,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1380,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1486,
											"end": 1496,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 300,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1498,
											"end": 1515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1498,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1515,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1498,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1480,
											"end": 1516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1480,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2425,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2465,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2436,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2436,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3678,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8730,
											"end": 8858,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8730,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8823,
											"end": 8828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8830,
											"end": 8837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8839,
											"end": 8844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8846,
											"end": 8850,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8814,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 8814,
											"end": 8851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8851,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8814,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7670,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7462,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7528,
											"end": 7619,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7576,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7608,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7619,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7528,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7644,
											"end": 7645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7628,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7628,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5697,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5397,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5476,
											"end": 5562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5521,
											"end": 5551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5551,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5562,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5476,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5591,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5591,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5591,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5591,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5591,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5571,
											"end": 5657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5614,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5646,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5657,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5571,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5666,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5682,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5684,
											"end": 5689,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5666,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5666,
											"end": 5690,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5666,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10419,
											"end": 10895,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10419,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10518,
											"end": 10542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10545,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10555,
											"end": 10560,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10562,
											"end": 10569,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10545,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 10545,
											"end": 10570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10545,
											"end": 10570,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10545,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10518,
											"end": 10570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10518,
											"end": 10570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10603,
											"end": 10620,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10584,
											"end": 10600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10584,
											"end": 10620,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10889,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10580,
											"end": 10889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10659,
											"end": 10664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10640,
											"end": 10656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10640,
											"end": 10664,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10636,
											"end": 10766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 10750,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10691,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10751,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10766,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10636,
											"end": 10766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10807,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10816,
											"end": 10821,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10823,
											"end": 10830,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10851,
											"end": 10856,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10832,
											"end": 10848,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10832,
											"end": 10856,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10858,
											"end": 10863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10807,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10807,
											"end": 10864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10807,
											"end": 10864,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10807,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10889,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10580,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10508,
											"end": 10895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10419,
											"end": 10895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10419,
											"end": 10895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10419,
											"end": 10895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10419,
											"end": 10895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7988,
											"end": 8194,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7988,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8079,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8079,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8079,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8079,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8079,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8054,
											"end": 8143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8102,
											"end": 8132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8132,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8143,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8054,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8160,
											"end": 8167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8152,
											"end": 8187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8187,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8152,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7988,
											"end": 8194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7988,
											"end": 8194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7988,
											"end": 8194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 10137,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 9705,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9817,
											"end": 9822,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 9813,
											"end": 9902,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9859,
											"end": 9891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9891,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9902,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 9813,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9934,
											"end": 9935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9915,
											"end": 9936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9915,
											"end": 9936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9915,
											"end": 9936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9915,
											"end": 9936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9915,
											"end": 9936,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9911,
											"end": 10001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9959,
											"end": 9990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9990,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 10001,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9911,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10021,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10027,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10029,
											"end": 10036,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10037,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10045,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10131,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10055,
											"end": 10131,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10098,
											"end": 10103,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10114,
											"end": 10119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 10089,
											"end": 10120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10089,
											"end": 10120,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10131,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 10055,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 10137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 10137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 10137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 10137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9705,
											"end": 10137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6012,
											"end": 7119,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6012,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6237,
											"end": 6258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6289,
											"end": 6308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6326,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6289,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6289,
											"end": 6326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6358,
											"end": 6363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6344,
											"end": 6355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6344,
											"end": 6363,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6340,
											"end": 6455,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6434,
											"end": 6439,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6390,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6440,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6455,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6340,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6593,
											"end": 6604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6593,
											"end": 6612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6585,
											"end": 6589,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6612,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6275,
											"end": 6637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6097,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6667,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6651,
											"end": 6667,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 6667,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6651,
											"end": 6667,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 6667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6826,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6814,
											"end": 6826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6814,
											"end": 6835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7035,
											"end": 7037,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6647,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7100,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7106,
											"end": 7111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7087,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6012,
											"end": 7119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6012,
											"end": 7119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6012,
											"end": 7119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6012,
											"end": 7119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 1841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 1986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1996,
											"end": 2023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2112,
											"end": 2117,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2377,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2315,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2386,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2451,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2439,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2395,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2485,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2483,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2737,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 2828,
											"end": 2832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2825,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2755,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2944,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3074,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3247,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3250,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3395,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3776,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3948,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4132,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4140,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 4140,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 4102,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4285,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4505,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4491,
											"end": 4500,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4489,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4509,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 4699,
											"end": 4706,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4688,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4654,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 4827,
											"end": 4834,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4816,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4782,
											"end": 4835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4944,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4910,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 4973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5065,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5054,
											"end": 5059,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 5177,
											"end": 5182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5161,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5325,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5312,
											"end": 5321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5336,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5530,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5416,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5720,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5536,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5635,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5704,
											"end": 5707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5720,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5858,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5726,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5846,
											"end": 5850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5972,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5864,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 5959,
											"end": 5964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5941,
											"end": 5965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 5965,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 5941,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 5966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6157,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5978,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 6110,
											"end": 6113,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6068,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6141,
											"end": 6144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6157,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6276,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6163,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6256,
											"end": 6270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 7044,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 6312,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6460,
											"end": 6514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6514,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 6460,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6604,
											"end": 6607,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6530,
											"end": 6616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6616,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 6530,
											"end": 6616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6616,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6640,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6640,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6719,
											"end": 6726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6766,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 6758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6754,
											"end": 6767,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6836,
											"end": 6842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6830,
											"end": 6843,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 6922,
											"end": 6925,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6907,
											"end": 6920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6863,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6926,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 7002,
											"end": 7008,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6949,
											"end": 7009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 7009,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 7009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6783,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6775,
											"end": 6784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 6735,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 6753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 7044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 7044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 7044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 7044,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 7044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 7044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 7044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 7044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7423,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 7050,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7233,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7270,
											"end": 7290,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7266,
											"end": 7267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7255,
											"end": 7264,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7244,
											"end": 7291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 7411,
											"end": 7415,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7308,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7416,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 7308,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7423,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7903,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7429,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7542,
											"end": 7551,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7533,
											"end": 7540,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7557,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7560,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 7750,
											"end": 7757,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7741,
											"end": 7747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7739,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 7748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7705,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7705,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7705,
											"end": 7758,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 7705,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7695,
											"end": 7758,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7695,
											"end": 7758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7833,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 7878,
											"end": 7885,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7858,
											"end": 7867,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7833,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7886,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 7833,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7429,
											"end": 7903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 8089,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7909,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7957,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7954,
											"end": 7955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 8035,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8051,
											"end": 8052,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8044,
											"end": 8059,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8082,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8068,
											"end": 8083,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8415,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 8095,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8139,
											"end": 8145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8177,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8170,
											"end": 8174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8178,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8217,
											"end": 8221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8213,
											"end": 8225,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 8234,
											"end": 8315,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 8292,
											"end": 8298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8288,
											"end": 8305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8315,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 8234,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8364,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 8365,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 8325,
											"end": 8409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 8381,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8381,
											"end": 8399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8399,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 8381,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8409,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 8325,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8146,
											"end": 8415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8421,
											"end": 8581,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8421,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8573,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F74206F776E65722100000000000000000000000000000000000000000000"
										},
										{
											"begin": 8557,
											"end": 8558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8545,
											"end": 8559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8538,
											"end": 8574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8421,
											"end": 8581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8421,
											"end": 8581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8729,
											"end": 8732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 8814,
											"end": 8816,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 8809,
											"end": 8812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8750,
											"end": 8817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 8915,
											"end": 8918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8826,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8944,
											"end": 8946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8939,
											"end": 8942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8928,
											"end": 8947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8928,
											"end": 8947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9152,
											"end": 9161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9140,
											"end": 9166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9140,
											"end": 9166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 9221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9222,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9176,
											"end": 9223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 9366,
											"end": 9370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9240,
											"end": 9371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9232,
											"end": 9371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 9378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9384,
											"end": 9564,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9384,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9432,
											"end": 9509,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9529,
											"end": 9533,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9519,
											"end": 9534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9553,
											"end": 9557,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9550,
											"end": 9551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9558,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9980,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9570,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9610,
											"end": 9617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 9651,
											"end": 9652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9633,
											"end": 9653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 9685,
											"end": 9686,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9667,
											"end": 9687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9722,
											"end": 9723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9719,
											"end": 9720,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9744,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 9762,
											"end": 9773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9744,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9744,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9744,
											"end": 9774,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 9744,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 9774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 9774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9923,
											"end": 9924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9914,
											"end": 9921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9925,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9908,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9904,
											"end": 9926,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9877,
											"end": 9886,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9857,
											"end": 9940,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9953,
											"end": 9971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9980,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9986,
											"end": 10161,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9986,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10126,
											"end": 10153,
											"name": "PUSH",
											"source": 6,
											"value": "41646472657373207A65726F206E6F7420616C6C6F7765642100000000000000"
										},
										{
											"begin": 10122,
											"end": 10123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10110,
											"end": 10124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9986,
											"end": 10161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9986,
											"end": 10161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10533,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10167,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10330,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 10389,
											"end": 10392,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10330,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10330,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10330,
											"end": 10397,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 10330,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10323,
											"end": 10397,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10323,
											"end": 10397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 10495,
											"end": 10498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 10406,
											"end": 10499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10499,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 10406,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10519,
											"end": 10522,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10958,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10539,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10705,
											"end": 10709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10732,
											"end": 10741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10728,
											"end": 10746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10782,
											"end": 10802,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10778,
											"end": 10779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10776,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10763,
											"end": 10780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10756,
											"end": 10803,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 10946,
											"end": 10950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10820,
											"end": 10951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10951,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 10820,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 11130,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10964,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11104,
											"end": 11122,
											"name": "PUSH",
											"source": 6,
											"value": "4164647265737320436C61696D65642100000000000000000000000000000000"
										},
										{
											"begin": 11100,
											"end": 11101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11092,
											"end": 11098,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11088,
											"end": 11102,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11123,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 11130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 11130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11278,
											"end": 11281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 11363,
											"end": 11365,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 11358,
											"end": 11361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 11299,
											"end": 11366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11292,
											"end": 11366,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11292,
											"end": 11366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 11464,
											"end": 11467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 11375,
											"end": 11468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11493,
											"end": 11495,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11488,
											"end": 11491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11674,
											"end": 11678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11712,
											"end": 11714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11761,
											"end": 11770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11751,
											"end": 11771,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11747,
											"end": 11748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11736,
											"end": 11745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11732,
											"end": 11749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11725,
											"end": 11772,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 11915,
											"end": 11919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 11789,
											"end": 11920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11781,
											"end": 11920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11781,
											"end": 11920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11933,
											"end": 12100,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 11933,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12092,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E206E6F7420656E6F75676821000000000000000000000000000000"
										},
										{
											"begin": 12069,
											"end": 12070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12061,
											"end": 12067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12057,
											"end": 12071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12050,
											"end": 12093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11933,
											"end": 12100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11933,
											"end": 12100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12248,
											"end": 12251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 12333,
											"end": 12335,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 12328,
											"end": 12331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 12269,
											"end": 12336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12262,
											"end": 12336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12262,
											"end": 12336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 12345,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12463,
											"end": 12465,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12458,
											"end": 12461,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12447,
											"end": 12466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12447,
											"end": 12466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12644,
											"end": 12648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12682,
											"end": 12684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12671,
											"end": 12680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12659,
											"end": 12685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12659,
											"end": 12685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12731,
											"end": 12740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12725,
											"end": 12729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12721,
											"end": 12741,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12717,
											"end": 12718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12706,
											"end": 12715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12702,
											"end": 12719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12695,
											"end": 12742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 12885,
											"end": 12889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 12759,
											"end": 12890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12751,
											"end": 12890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12751,
											"end": 12890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12903,
											"end": 13083,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 12903,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12951,
											"end": 13028,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12948,
											"end": 12949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12941,
											"end": 13029,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13048,
											"end": 13052,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 13045,
											"end": 13046,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13038,
											"end": 13053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13072,
											"end": 13076,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13069,
											"end": 13070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13062,
											"end": 13077,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13089,
											"end": 13274,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 13089,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13129,
											"end": 13130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13146,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 13164,
											"end": 13165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13146,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 13146,
											"end": 13166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13146,
											"end": 13166,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 13146,
											"end": 13166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13141,
											"end": 13166,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13141,
											"end": 13166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13180,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 13198,
											"end": 13199,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13180,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 13180,
											"end": 13200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13180,
											"end": 13200,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 13180,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13175,
											"end": 13200,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13175,
											"end": 13200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13219,
											"end": 13220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13209,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 13209,
											"end": 13244,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13224,
											"end": 13242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 13224,
											"end": 13242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 13224,
											"end": 13242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13224,
											"end": 13242,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 13224,
											"end": 13242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13209,
											"end": 13244,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 13209,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13263,
											"end": 13264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13259,
											"end": 13268,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13254,
											"end": 13268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13254,
											"end": 13268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13089,
											"end": 13274,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13089,
											"end": 13274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13089,
											"end": 13274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13089,
											"end": 13274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13089,
											"end": 13274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13280,
											"end": 13447,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 13280,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13420,
											"end": 13439,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E206E6F7420456E6F75676821000000000000000000000000000000"
										},
										{
											"begin": 13416,
											"end": 13417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13408,
											"end": 13414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13404,
											"end": 13418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13397,
											"end": 13440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13280,
											"end": 13447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13280,
											"end": 13447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13453,
											"end": 13819,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 13453,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13595,
											"end": 13598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13616,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 13680,
											"end": 13682,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 13675,
											"end": 13678,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13616,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 13616,
											"end": 13683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13616,
											"end": 13683,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 13616,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13692,
											"end": 13785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 13781,
											"end": 13784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13692,
											"end": 13785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 13692,
											"end": 13785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13692,
											"end": 13785,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 13692,
											"end": 13785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13805,
											"end": 13808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13801,
											"end": 13813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13794,
											"end": 13813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13794,
											"end": 13813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13453,
											"end": 13819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13453,
											"end": 13819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13453,
											"end": 13819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13453,
											"end": 13819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 14244,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 13825,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13991,
											"end": 13995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14029,
											"end": 14031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14018,
											"end": 14027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14014,
											"end": 14032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14078,
											"end": 14087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14068,
											"end": 14088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14064,
											"end": 14065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14053,
											"end": 14062,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14049,
											"end": 14066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14042,
											"end": 14089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14106,
											"end": 14237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 14232,
											"end": 14236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14106,
											"end": 14237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 14106,
											"end": 14237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14106,
											"end": 14237,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 14106,
											"end": 14237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14098,
											"end": 14237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14098,
											"end": 14237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 14244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 14244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 14244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 14244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14250,
											"end": 14368,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 14250,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14337,
											"end": 14361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 14355,
											"end": 14360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14337,
											"end": 14361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 14337,
											"end": 14361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14337,
											"end": 14361,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 14337,
											"end": 14361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14332,
											"end": 14335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14325,
											"end": 14362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14250,
											"end": 14368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14250,
											"end": 14368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14250,
											"end": 14368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14374,
											"end": 14596,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 14374,
											"end": 14596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14467,
											"end": 14471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14505,
											"end": 14507,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14494,
											"end": 14503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14490,
											"end": 14508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14482,
											"end": 14508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14482,
											"end": 14508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14518,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 14586,
											"end": 14587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14571,
											"end": 14588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14562,
											"end": 14568,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14518,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 14518,
											"end": 14589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14518,
											"end": 14589,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 14518,
											"end": 14589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14374,
											"end": 14596,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14374,
											"end": 14596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14374,
											"end": 14596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14374,
											"end": 14596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14374,
											"end": 14596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14751,
											"end": 14755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14789,
											"end": 14791,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14778,
											"end": 14787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14766,
											"end": 14792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14766,
											"end": 14792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14802,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 14870,
											"end": 14871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14859,
											"end": 14868,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14855,
											"end": 14872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14846,
											"end": 14852,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 14802,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 14802,
											"end": 14873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14802,
											"end": 14873,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 14802,
											"end": 14873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14883,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14949,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14936,
											"end": 14954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14927,
											"end": 14933,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14883,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 14883,
											"end": 14955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14883,
											"end": 14955,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 14883,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14965,
											"end": 15037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 15033,
											"end": 15035,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15031,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15018,
											"end": 15036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15009,
											"end": 15015,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14965,
											"end": 15037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 14965,
											"end": 15037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14965,
											"end": 15037,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 14965,
											"end": 15037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 15044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15050,
											"end": 15241,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 15050,
											"end": 15241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15090,
											"end": 15093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 15127,
											"end": 15128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 15109,
											"end": 15129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15129,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 15109,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15104,
											"end": 15129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15104,
											"end": 15129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 15161,
											"end": 15162,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 15143,
											"end": 15163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15143,
											"end": 15163,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 15143,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15138,
											"end": 15163,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15138,
											"end": 15163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15186,
											"end": 15187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15183,
											"end": 15184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15179,
											"end": 15188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15172,
											"end": 15188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15172,
											"end": 15188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15204,
											"end": 15205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15201,
											"end": 15211,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15198,
											"end": 15234,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15198,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 15198,
											"end": 15234,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 15214,
											"end": 15232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15198,
											"end": 15234,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 15198,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15050,
											"end": 15241,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15050,
											"end": 15241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15050,
											"end": 15241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15050,
											"end": 15241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15050,
											"end": 15241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/flipit.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Balance(address)": "239fcf0f",
							"Burn(uint256)": "b90306ad",
							"Claim(address,uint256)": "47cee97c",
							"SenderEth()": "c12019eb",
							"addressBalnc(address)": "06763788",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decimalsz()": "6d41b22c",
							"flipClick(address,uint256)": "21ba18a1",
							"gain(address,uint256)": "9fe5491c",
							"name()": "06fdde03",
							"payContractGasFee()": "20c63d56",
							"pumptit(uint256)": "1e548d7a",
							"realTime(address)": "6010b797",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"AddressNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"NoToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"TokenClaimed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addrs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SenderEth\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addressBalnc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalsz\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addrs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"flipClick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addrs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenStaked\",\"type\":\"uint256\"}],\"name\":\"gain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payContractGasFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pumpMint\",\"type\":\"uint256\"}],\"name\":\"pumptit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addrs\",\"type\":\"address\"}],\"name\":\"realTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/flipit.sol\":\"flipit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/flipit.sol\":{\"keccak256\":\"0xc04be3039443fcddfb9f6c2203f8fee3602f0bbeb1c41d566646cafc5a8e5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://169d99a65823b85737105fa072cc64ef77a5f4a0a32ba82859ce6ec69ea499dc\",\"dweb:/ipfs/QmdGd6i5adLqAfYyjtUdnXmzP2ZrqmdjsN1XptuywcB1yG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x970109a2c0e9576559d23ca61e5a7d948976fdfa5d708908b66d138ecff417eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f2adff2280da70ce36727c831704c957d3529dc53e13250a4b85592c84d5c5e\",\"dweb:/ipfs/QmXwcamNAZkVctXKXnLkfcoVzCsuhyznV52xZFY5uNNgkM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 471,
								"contract": "contracts/flipit.sol:flipit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 477,
								"contract": "contracts/flipit.sol:flipit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 479,
								"contract": "contracts/flipit.sol:flipit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "contracts/flipit.sol:flipit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 483,
								"contract": "contracts/flipit.sol:flipit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 6,
								"contract": "contracts/flipit.sol:flipit",
								"label": "_owner_",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 13,
								"contract": "contracts/flipit.sol:flipit",
								"label": "contractAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 28,
								"contract": "contracts/flipit.sol:flipit",
								"label": "_senderEth",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x970109a2c0e9576559d23ca61e5a7d948976fdfa5d708908b66d138ecff417eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f2adff2280da70ce36727c831704c957d3529dc53e13250a4b85592c84d5c5e\",\"dweb:/ipfs/QmXwcamNAZkVctXKXnLkfcoVzCsuhyznV52xZFY5uNNgkM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 471,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 477,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 479,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 483,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/flipit.sol": {
				"ast": {
					"absolutePath": "contracts/flipit.sol",
					"exportedSymbols": {
						"Context": [
							1097
						],
						"ERC20": [
							963
						],
						"IERC20": [
							1041
						],
						"IERC20Errors": [
							353
						],
						"IERC20Metadata": [
							1067
						],
						"flipit": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 312,
							"sourceUnit": 964,
							"src": "59:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nameLocations": [
											"188:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 963,
										"src": "188:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "188:5:0"
								}
							],
							"canonicalName": "flipit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311,
								963,
								353,
								1067,
								1041,
								1097
							],
							"name": "flipit",
							"nameLocation": "178:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "_owner_",
									"nameLocation": "208:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 311,
									"src": "200:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "200:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 11,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "289:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 311,
									"src": "264:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "264:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 8,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "300:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 9,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "304:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "300:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "contractAddress",
									"nameLocation": "320:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 311,
									"src": "312:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "b4600e99",
									"id": 17,
									"name": "NoToken",
									"nameLocation": "347:7:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "355:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 14,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:8:0"
									},
									"src": "341:22:0"
								},
								{
									"errorSelector": "c18cab90",
									"id": 21,
									"name": "TokenClaimed",
									"nameLocation": "374:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "387:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:8:0"
									},
									"src": "368:27:0"
								},
								{
									"errorSelector": "577375f3",
									"id": 25,
									"name": "AddressNotFound",
									"nameLocation": "406:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "422:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "422:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:8:0"
									},
									"src": "400:30:0"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_senderEth",
									"nameLocation": "453:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 311,
									"src": "435:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "435:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 27,
										"nodeType": "ArrayTypeName",
										"src": "435:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "559:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 42,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "627:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_flipit_$311",
																		"typeString": "contract flipit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_flipit_$311",
																		"typeString": "contract flipit"
																	}
																],
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 40,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "619:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "619:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31305f3030305f3030305f3030305f303030",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000_by_1",
																	"typeString": "int_const 10000000000000"
																},
																"value": "10_000_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 45,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "655:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "634:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 39,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "613:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "613:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "613:51:0"
											},
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "_owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "674:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 50,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "684:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "688:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "684:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "674:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "674:20:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "contractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "704:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 57,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "730:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_flipit_$311",
																	"typeString": "contract flipit"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_flipit_$311",
																	"typeString": "contract flipit"
																}
															],
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 55,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "722:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "722:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "704:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "704:31:0"
											}
										]
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 35,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "539:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 36,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 37,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 34,
												"name": "ERC20",
												"nameLocations": [
													"533:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "533:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "533:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "495:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "481:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "502:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "502:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:44:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:0:0"
									},
									"scope": 311,
									"src": "469:274:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "791:110:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 68,
																"name": "_owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "809:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 69,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "820:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "824:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "820:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "809:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e657221",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "832:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
																"typeString": "literal_string \"Not owner!\""
															},
															"value": "Not owner!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
																"typeString": "literal_string \"Not owner!\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "801:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "861:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "865:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "861:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 78,
																"name": "_pumpMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "873:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 79,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "885:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "873:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 75,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "855:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "855:39:0"
											}
										]
									},
									"functionSelector": "1e548d7a",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pumptit",
									"nameLocation": "757:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_pumpMint",
												"nameLocation": "773:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "765:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:19:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:0"
									},
									"scope": 311,
									"src": "748:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "952:32:0",
										"statements": [
											{
												"expression": {
													"id": 89,
													"name": "DECIMALS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "969:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 90,
												"nodeType": "Return",
												"src": "962:15:0"
											}
										]
									},
									"functionSelector": "6d41b22c",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimalsz",
									"nameLocation": "915:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "947:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:6:0"
									},
									"scope": 311,
									"src": "906:78:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1043:282:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 99,
														"name": "_addrs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1057:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1075:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 100,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1067:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1067:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1057:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 110,
												"nodeType": "IfStatement",
												"src": "1053:102:0",
												"trueBody": {
													"id": 109,
													"nodeType": "Block",
													"src": "1079:76:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "41646472657373207a65726f206e6f7420616c6c6f77656421",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1116:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba",
																			"typeString": "literal_string \"Address zero not allowed!\""
																		},
																		"value": "Address zero not allowed!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba",
																			"typeString": "literal_string \"Address zero not allowed!\""
																		}
																	],
																	"id": 105,
																	"name": "AddressNotFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "1100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1100:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 108,
															"nodeType": "RevertStatement",
															"src": "1093:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 112,
																"name": "_addrs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1178:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 111,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "1168:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1168:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "1164:91:0",
												"trueBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "1191:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4164647265737320436c61696d656421",
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1225:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8",
																			"typeString": "literal_string \"Address Claimed!\""
																		},
																		"value": "Address Claimed!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_805b7225abf494689114da55a3817730f9afe995f12fb5a566f07af76b5d20d8",
																			"typeString": "literal_string \"Address Claimed!\""
																		}
																	],
																	"id": 116,
																	"name": "TokenClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1212:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1212:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 119,
															"nodeType": "RevertStatement",
															"src": "1205:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1274:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 124,
															"name": "_addrs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1291:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 125,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 126,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1309:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1299:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 122,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1264:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1264:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1264:54:0"
											}
										]
									},
									"functionSelector": "47cee97c",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Claim",
									"nameLocation": "998:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_addrs",
												"nameLocation": "1012:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1004:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1020:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1020:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:30:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:0:0"
									},
									"scope": 311,
									"src": "989:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1370:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 137,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1394:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1398:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1394:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 136,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "1384:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1384:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1384:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "1380:91:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "1411:60:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "546f6b656e206e6f7420456e6f75676821",
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1440:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083",
																			"typeString": "literal_string \"Token not Enough!\""
																		},
																		"value": "Token not Enough!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_76a3016a938a121f20d2702e737b33f5fe1695ee47307c58c7e51c651e81a083",
																			"typeString": "literal_string \"Token not Enough!\""
																		}
																	],
																	"id": 142,
																	"name": "NoToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1432:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1432:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 145,
															"nodeType": "RevertStatement",
															"src": "1425:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 149,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1486:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1490:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1486:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "1498:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 152,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1507:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1498:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 148,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1480:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1480:36:0"
											}
										]
									},
									"functionSelector": "b90306ad",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Burn",
									"nameLocation": "1340:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1353:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1345:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:16:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:0:0"
									},
									"scope": 311,
									"src": "1331:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1593:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1620:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "1610:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 163,
												"id": 167,
												"nodeType": "Return",
												"src": "1603:23:0"
											}
										]
									},
									"functionSelector": "239fcf0f",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Balance",
									"nameLocation": "1538:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1546:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:15:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1584:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:9:0"
									},
									"scope": 311,
									"src": "1529:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1700:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 176,
														"name": "_addrs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1714:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 177,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1724:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1724:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1714:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "IfStatement",
												"src": "1710:102:0",
												"trueBody": {
													"id": 186,
													"nodeType": "Block",
													"src": "1736:76:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "41646472657373207a65726f206e6f7420616c6c6f77656421",
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1773:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba",
																			"typeString": "literal_string \"Address zero not allowed!\""
																		},
																		"value": "Address zero not allowed!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_ead10369571f6361c079a748cb4c144aa0944c029d41e41a9b0b7d9cf928bbba",
																			"typeString": "literal_string \"Address zero not allowed!\""
																		}
																	],
																	"id": 182,
																	"name": "AddressNotFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "1757:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 185,
															"nodeType": "RevertStatement",
															"src": "1750:51:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "_addrs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1831:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "_owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 191,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "1848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 192,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1858:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1848:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 188,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1821:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1821:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1821:46:0"
											}
										]
									},
									"functionSelector": "21ba18a1",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipClick",
									"nameLocation": "1648:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_addrs",
												"nameLocation": "1666:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1658:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1657:33:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1700:0:0"
									},
									"scope": 311,
									"src": "1639:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1939:113:0",
										"statements": [
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_tokenStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1949:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 205,
															"name": "_tokenStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "1964:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 206,
															"name": "DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1979:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1964:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1949:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1949:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 213,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2015:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_flipit_$311",
																		"typeString": "contract flipit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_flipit_$311",
																		"typeString": "contract flipit"
																	}
																],
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 211,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2007:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2007:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "_addrs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2022:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "_tokenStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "2030:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "32",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2030:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1997:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1997:48:0"
											}
										]
									},
									"functionSelector": "9fe5491c",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gain",
									"nameLocation": "1889:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_addrs",
												"nameLocation": "1902:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1894:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "_tokenStaked",
												"nameLocation": "1918:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1910:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:38:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1939:0:0"
									},
									"scope": 311,
									"src": "1880:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2102:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 228,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2128:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2132:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2128:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 225,
															"name": "_senderEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2112:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2123:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2112:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2112:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2112:27:0"
											}
										]
									},
									"functionSelector": "20c63d56",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payContractGasFee",
									"nameLocation": "2067:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:2:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2102:0:0"
									},
									"scope": 311,
									"src": "2058:88:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2213:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 241,
																"name": "_addrs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "2236:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 240,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2226:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2226:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 243,
														"name": "DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2246:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2226:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "IfStatement",
												"src": "2223:92:0",
												"trueBody": {
													"id": 249,
													"nodeType": "Block",
													"src": "2255:60:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "546f6b656e206e6f7420656e6f75676821",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2284:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606",
																			"typeString": "literal_string \"Token not enough!\""
																		},
																		"value": "Token not enough!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_64803231a9df5eae62de90a6ce297a6bcd74cd840537343ca980322b23568606",
																			"typeString": "literal_string \"Token not enough!\""
																		}
																	],
																	"id": 245,
																	"name": "NoToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "2276:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2276:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 248,
															"nodeType": "RevertStatement",
															"src": "2269:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 252,
																"name": "_addrs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "2340:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 251,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2330:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2330:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 254,
														"name": "DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2348:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2330:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 256,
												"nodeType": "Return",
												"src": "2323:33:0"
											}
										]
									},
									"functionSelector": "6010b797",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "realTime",
									"nameLocation": "2160:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "_addrs",
												"nameLocation": "2177:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2169:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:16:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2205:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:9:0"
									},
									"scope": 311,
									"src": "2151:212:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2426:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 265,
																"name": "_owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "2444:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 266,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2455:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2459:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2455:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2444:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e657221",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2467:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
																"typeString": "literal_string \"Not owner!\""
															},
															"value": "Not owner!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
																"typeString": "literal_string \"Not owner!\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2436:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2436:44:0"
											},
											{
												"expression": {
													"id": 272,
													"name": "_senderEth",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "2497:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 263,
												"id": 273,
												"nodeType": "Return",
												"src": "2490:17:0"
											}
										]
									},
									"functionSelector": "c12019eb",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SenderEth",
									"nameLocation": "2377:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2409:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 260,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2409:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 261,
													"nodeType": "ArrayTypeName",
													"src": "2409:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:18:0"
									},
									"scope": 311,
									"src": "2368:146:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2546:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "_owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "2564:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 280,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2575:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2575:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2564:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e657221",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2587:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
																"typeString": "literal_string \"Not owner!\""
															},
															"value": "Not owner!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2a7432da323bc6ddcac2fc2b04651cb939fd6046b72daab5d08abf6fce5fbe8",
																"typeString": "literal_string \"Not owner!\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2556:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2556:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 293,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2645:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_flipit_$311",
																			"typeString": "contract flipit"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_flipit_$311",
																			"typeString": "contract flipit"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2637:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2637:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2637:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2651:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2637:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 288,
																	"name": "_owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "2619:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2610:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2610:9:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2628:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2610:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "2610:49:0"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDraw",
									"nameLocation": "2528:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2536:2:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2546:0:0"
									},
									"scope": 311,
									"src": "2519:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2738:56:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 306,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2755:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2761:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2755:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 305,
												"id": 308,
												"nodeType": "Return",
												"src": "2748:20:0"
											}
										]
									},
									"functionSelector": "06763788",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressBalnc",
									"nameLocation": "2680:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2701:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2693:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:15:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:0"
									},
									"scope": 311,
									"src": "2671:123:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 312,
							"src": "169:2627:0",
							"usedErrors": [
								17,
								21,
								25,
								323,
								328,
								333,
								342,
								347,
								352
							],
							"usedEvents": [
								975,
								984
							]
						}
					],
					"src": "32:2899:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							448
						],
						"IERC20Errors": [
							353
						],
						"IERC721Errors": [
							401
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 314,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 353,
							"linearizedBaseContracts": [
								353
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 323,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 328,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 333,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 342,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 347,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 352,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 449,
							"src": "280:1764:1",
							"usedErrors": [
								323,
								328,
								333,
								342,
								347,
								352
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 354,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 401,
							"linearizedBaseContracts": [
								401
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 359,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 364,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 373,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 378,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 383,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 390,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 395,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 400,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 449,
							"src": "2190:2092:1",
							"usedErrors": [
								359,
								364,
								373,
								378,
								383,
								390,
								395,
								400
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 402,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 413,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 418,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 423,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 430,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 435,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 440,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 447,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 449,
							"src": "4430:2107:1",
							"usedErrors": [
								413,
								418,
								423,
								430,
								435,
								440,
								447
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1097
						],
						"ERC20": [
							963
						],
						"IERC20": [
							1041
						],
						"IERC20Errors": [
							353
						],
						"IERC20Metadata": [
							1067
						]
					},
					"id": 964,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 964,
							"sourceUnit": 1042,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 964,
							"sourceUnit": 1068,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1067,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 964,
							"sourceUnit": 1098,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1097,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 964,
							"sourceUnit": 449,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 457,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 353,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 460,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1097,
										"src": "1133:7:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 462,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "1142:6:2"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 464,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1067,
										"src": "1150:14:2"
									},
									"id": 465,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 466,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "1166:12:2"
									},
									"id": 467,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 963,
							"linearizedBaseContracts": [
								963,
								353,
								1067,
								1041,
								1097
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 963,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 470,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 468,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 469,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 477,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 963,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 476,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 472,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 475,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 473,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 474,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 479,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 963,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 481,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 963,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 480,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 483,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 963,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 482,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 492,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 495,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 500,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 485,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 963,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1054
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 506,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 481,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 505,
												"id": 507,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 963,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1060
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 483,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 963,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1066
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 521,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 963,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										990
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 533,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 479,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 963,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										998
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 544,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 546,
													"indexExpression": {
														"id": 545,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 543,
												"id": 547,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 963,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1008
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "3394:103:2",
										"statements": [
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3412:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "3404:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 559,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3404:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 561,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "3420:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3420:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3404:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3452:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "3459:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "3463:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3442:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3442:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "3442:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3486:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 558,
												"id": 571,
												"nodeType": "Return",
												"src": "3479:11:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3130:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3328:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3345:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3337:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:27:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3388:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3388:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:6:2"
									},
									"scope": 963,
									"src": "3319:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1018
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "3644:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 583,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3661:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 585,
														"indexExpression": {
															"id": 584,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "3673:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3661:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 587,
													"indexExpression": {
														"id": 586,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "3680:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3661:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 582,
												"id": 588,
												"nodeType": "Return",
												"src": "3654:34:2"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "3503:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3564:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3582:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3574:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3597:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3589:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3573:32:2"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3635:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3634:9:2"
									},
									"scope": 963,
									"src": "3555:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1028
									],
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "4081:107:2",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4099:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "4091:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 600,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4091:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 602,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "4107:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4091:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 606,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "4138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "4145:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4154:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															854,
															914
														],
														"referencedDeclaration": 854,
														"src": "4129:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "4129:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4177:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 599,
												"id": 612,
												"nodeType": "Return",
												"src": "4170:11:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3701:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4011:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4019:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4019:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4044:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4036:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4018:32:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4074:6:2"
									},
									"scope": 963,
									"src": "4002:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1040
									],
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "4873:151:2",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4891:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "4883:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4883:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "4901:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4901:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4883:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4939:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "4945:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "4954:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "4923:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4923:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "4923:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4980:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4986:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "4990:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "4970:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4970:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "4970:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5013:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 644,
												"nodeType": "Return",
												"src": "5006:11:2"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "4194:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4789:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4810:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4802:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4836:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4828:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4801:41:2"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "4867:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4867:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:6:2"
									},
									"scope": 963,
									"src": "4780:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "5466:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 656,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "5480:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5496:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5488:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 657,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5488:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5488:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5480:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 670,
												"nodeType": "IfStatement",
												"src": "5476:86:2",
												"trueBody": {
													"id": 669,
													"nodeType": "Block",
													"src": "5500:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5548:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5540:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 663,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5540:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5540:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 662,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "5521:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5521:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 668,
															"nodeType": "RevertStatement",
															"src": "5514:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 671,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "5575:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5589:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5581:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 672,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5581:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5581:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5575:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "5571:86:2",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "5593:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5643:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5635:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 678,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5635:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5635:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 677,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "5614:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5614:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 683,
															"nodeType": "RevertStatement",
															"src": "5607:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "5674:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5680:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 689,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5684:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "5666:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5666:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "5666:24:2"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5030:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5406:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5424:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5416:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5416:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5438:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5430:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5430:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5450:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5442:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5415:41:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5466:0:2"
									},
									"scope": 963,
									"src": "5397:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "6087:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 703,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "6101:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6117:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6109:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 704,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6109:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6109:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6101:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "6275:362:2",
													"statements": [
														{
															"assignments": [
																715
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 715,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6297:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 740,
																	"src": "6289:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 714,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6289:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 719,
															"initialValue": {
																"baseExpression": {
																	"id": 716,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "6311:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 718,
																"indexExpression": {
																	"id": 717,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "6321:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6311:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6289:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 720,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "6344:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 721,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "6358:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6344:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 730,
															"nodeType": "IfStatement",
															"src": "6340:115:2",
															"trueBody": {
																"id": 729,
																"nodeType": "Block",
																"src": "6365:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 724,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "6415:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 725,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 715,
																					"src": "6421:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 726,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 700,
																					"src": "6434:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 723,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 323,
																				"src": "6390:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6390:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 728,
																		"nodeType": "RevertStatement",
																		"src": "6383:57:2"
																	}
																]
															}
														},
														{
															"id": 739,
															"nodeType": "UncheckedBlock",
															"src": "6468:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 731,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "6575:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 733,
																			"indexExpression": {
																				"id": 732,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "6585:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6575:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 734,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 715,
																				"src": "6593:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 735,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "6607:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6593:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6575:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 738,
																	"nodeType": "ExpressionStatement",
																	"src": "6575:37:2"
																}
															]
														}
													]
												},
												"id": 741,
												"nodeType": "IfStatement",
												"src": "6097:540:2",
												"trueBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "6121:148:2",
													"statements": [
														{
															"expression": {
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 709,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "6237:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 710,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "6253:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6237:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 712,
															"nodeType": "ExpressionStatement",
															"src": "6237:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "6651:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6665:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6657:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6657:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6651:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "6866:206:2",
													"statements": [
														{
															"id": 760,
															"nodeType": "UncheckedBlock",
															"src": "6880:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 754,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "7025:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 756,
																			"indexExpression": {
																				"id": 755,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "7035:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7025:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "7042:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7025:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 759,
																	"nodeType": "ExpressionStatement",
																	"src": "7025:22:2"
																}
															]
														}
													]
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "6647:425:2",
												"trueBody": {
													"id": 753,
													"nodeType": "Block",
													"src": "6669:191:2",
													"statements": [
														{
															"id": 752,
															"nodeType": "UncheckedBlock",
															"src": "6683:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 748,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "6814:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 749,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "6830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6814:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 751,
																	"nodeType": "ExpressionStatement",
																	"src": "6814:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 764,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7096:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "7102:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "7106:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "7087:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "EmitStatement",
												"src": "7082:30:2"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5703:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6021:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6037:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "6029:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6051:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "6043:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6063:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "6055:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6055:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6028:41:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6087:0:2"
									},
									"scope": 963,
									"src": "6012:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "7518:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "7532:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7551:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7543:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7543:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7543:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7532:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "7528:91:2",
												"trueBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "7555:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7605:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7597:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 785,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7597:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7597:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 784,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "7576:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7576:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 790,
															"nodeType": "RevertStatement",
															"src": "7569:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7644:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7636:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7636:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "7648:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7657:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 793,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "7628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7628:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "7628:35:2"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "7125:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "7477:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7502:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "7494:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:32:2"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7518:0:2"
									},
									"scope": 963,
									"src": "7462:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "8044:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 811,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "8058:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8077:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8069:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 812,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8069:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8069:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8058:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 825,
												"nodeType": "IfStatement",
												"src": "8054:89:2",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "8081:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8129:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8121:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 818,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8121:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8121:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 817,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8102:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8102:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 823,
															"nodeType": "RevertStatement",
															"src": "8095:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "8160:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8177:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8169:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 828,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8169:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8169:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 826,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "8152:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8152:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "8152:35:2"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "7676:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7997:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8011:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "8003:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "8020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:32:2"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8044:0:2"
									},
									"scope": 963,
									"src": "7988:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "8804:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "8823:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "8830:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "8839:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8846:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 846,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															854,
															914
														],
														"referencedDeclaration": 914,
														"src": "8814:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8814:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "8814:37:2"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "8200:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8739:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8756:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "8748:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8771:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "8763:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8763:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8788:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "8780:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:47:2"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8804:0:2"
									},
									"scope": 963,
									"src": "8730:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "9803:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 866,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "9817:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 867,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9817:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "9813:89:2",
												"trueBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "9838:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9888:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9880:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 873,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9880:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9880:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 872,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "9859:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 878,
															"nodeType": "RevertStatement",
															"src": "9852:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 881,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "9915:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9934:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9926:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 882,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9926:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9926:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9915:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "9911:90:2",
												"trueBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "9938:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 890,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9987:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9979:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 888,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9979:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9979:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 887,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "9959:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9959:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 893,
															"nodeType": "RevertStatement",
															"src": "9952:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 896,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10010:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 899,
															"indexExpression": {
																"id": 897,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "10022:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10010:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 900,
														"indexExpression": {
															"id": 898,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "10029:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10010:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 901,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "10040:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10010:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "10010:35:2"
											},
											{
												"condition": {
													"id": 904,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 863,
													"src": "10059:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "IfStatement",
												"src": "10055:76:2",
												"trueBody": {
													"id": 911,
													"nodeType": "Block",
													"src": "10070:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 906,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "10098:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 907,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "10105:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 908,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "10114:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 905,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "10089:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10089:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 910,
															"nodeType": "EmitStatement",
															"src": "10084:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "8864:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9714:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9731:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9723:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9746:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9738:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9763:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9755:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9775:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9722:63:2"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9803:0:2"
									},
									"scope": 963,
									"src": "9705:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "10508:387:2",
										"statements": [
											{
												"assignments": [
													925
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10526:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "10518:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 924,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10518:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"arguments": [
														{
															"id": 927,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "10555:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "10562:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 926,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "10545:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10545:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10518:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 931,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "10584:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10608:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 933,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10608:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 932,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10603:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10603:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10617:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10603:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10584:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 960,
												"nodeType": "IfStatement",
												"src": "10580:309:2",
												"trueBody": {
													"id": 959,
													"nodeType": "Block",
													"src": "10622:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 938,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "10640:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "10659:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10640:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 948,
															"nodeType": "IfStatement",
															"src": "10636:130:2",
															"trueBody": {
																"id": 947,
																"nodeType": "Block",
																"src": "10666:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 942,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 919,
																					"src": "10718:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 943,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 925,
																					"src": "10727:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 944,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "10745:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 941,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 342,
																				"src": "10691:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10691:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 946,
																		"nodeType": "RevertStatement",
																		"src": "10684:67:2"
																	}
																]
															}
														},
														{
															"id": 958,
															"nodeType": "UncheckedBlock",
															"src": "10779:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 950,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "10816:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 951,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 919,
																				"src": "10823:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 925,
																					"src": "10832:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "10851:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10832:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10858:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 949,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				854,
																				914
																			],
																			"referencedDeclaration": 914,
																			"src": "10807:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10807:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 957,
																	"nodeType": "ExpressionStatement",
																	"src": "10807:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "10143:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10428:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10452:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10444:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10444:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10459:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10459:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10484:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10476:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10476:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10443:47:2"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10508:0:2"
									},
									"scope": 963,
									"src": "10419:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 964,
							"src": "1106:9791:2",
							"usedErrors": [
								323,
								328,
								333,
								342,
								347,
								352
							],
							"usedEvents": [
								975,
								984
							]
						}
					],
					"src": "105:10793:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 965,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 966,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 975,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 984,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 1041,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 1041,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 1041,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 1041,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 1041,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 1041,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1042,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								975,
								984
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1041
						],
						"IERC20Metadata": [
							1067
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1042,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1044,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "306:6:4"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1067,
							"linearizedBaseContracts": [
								1067,
								1041
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1051,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 1067,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 1067,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1063,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 1067,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1068,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								975,
								984
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1097
						]
					},
					"id": 1098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1070,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1097,
							"linearizedBaseContracts": [
								1097
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1075,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1074,
												"id": 1077,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1097,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1081,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1097,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1092,
												"id": 1094,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1097,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1098,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			}
		}
	}
}